[
{
    "name": "create",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-*",
    "comment":"创建定时任务",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"^[0-9a-zA-Z_]{1,30}$", "comment":"任务名称"},
        {"name":"sync", "type":"string", "must":false, "default":"N", "options":["Y","N"], "comment":"是否为同步方式调用"},
        {"name":"maxRetry", "type":"int", "must":true, "min":1, "comment":"一个周期内，最大失败重试次数"},
        {"name":"minTime", "type":"int", "must":true, "min":1, "comment":"最小重试周期，单位分钟"},
        {"name":"type", "type":"string", "must":true, "options":["D","W","M","H","C"], "comment":"类型"},
        {"name":"val", "type":"int", "must":true, "min":-1440, "comment":"D/W/M:离周期起点的分钟间隔，C:周期的分钟间隔"},
        {"name":"url", "type":"string", "must":true, "min":"2",
         "comment":"唤起服务执行任务的URL，只接受GET，URL中需要加上必要的参数，并且tokenChecker设置成APP-schedule"}
    ],

    "vars": [
        {"name":"taskId", "toResp":true, "val":"@{SEQUENCE|i,'taskid'}", "comment":"任务ID"},
        {"name":"val_ms", "val":"@{MULTI|i, val, 60000}"},
        {"name":"nextTryAt_ms", "val":"@{NEXTPERIOD|type,val_ms}", "comment":"下一个开始时间"},
        {"name":"nextTryAt", "val":"@{DIV|i, nextTryAt_ms, 60000}"}
    ],

    "process" : [{
        "name" : "create_task",
        "type" : "rdb",
        "db": "tasks",
        "sqls" : [
            "replace into tasks(id,cid,maxRetry,minTime,type,val,sync,name,service,url,
                leftTimes,interval,nextStart,nextTryAt) values
              (@{taskId},@{^cid},@{maxRetry},@{minTime},
               '@{type}',@{val},'@{sync}','@{name}','@{#tokenCaller}','@{url}',
               @{maxRetry},@{minTime},@{nextTryAt},@{nextTryAt})"
        ]
    }],
    "response":[]
},

{
    "name": "grab",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "APP",
    "comment":"抢任务",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"任务ID"},
        {"name":"tag", "type":"string", "must":true, "min":0, "comment":"争抢标识"}
    ],

    "process" : [{
        "name" : "get_task_info",
        "type" : "rdb",
        "db": "tasks",
        "sqls" : [
            {
                "multi":false,
                "metas":"each",
                "merge":true,
                "comment":"抢任务时，可能其他实例已经抢走，此时nextTryAt会比当前时间大",
                "sql":"select cid,type,val,maxRetry,minTime,
                    nextStart,nextTryAt,interval
                  from tasks
                 where id=@{id} and nextTryAt<=@{NOW|unit60000}
                   and leftTimes>0"
            },

            "js:var cur=@{NOW|unit60000};
                var nextStart=Mesh.recentNextPeriod('@[!type]',@[!nextStart]*60000,@[!val]*60000)/60000;
                var interval=@[!interval]*2;
                var leftTimes=@[!leftTimes]-1;
                var nextTryAt = @[!nextTryAt] + interval;
                //一个周期中尝试多次都失败，如果已到下一周期，则重置重试次数、重试间隔
                //下一个周期的起点(nextStart)仍然保持不变
                if(@[!nextStart]<=cur) {
                    interval=@[!minTime];
                    leftTimes=@[!maxRetry];
                    nextTryAt=cur+interval;
                }
                var sqls=[`update tasks set nextStart=`, nextStart,
                `,interval=`, interval, `,nextTryAt=`, nextTryAt,
                `,leftTimes=`, leftTimes,
                `,tag='@{tag}' where id=@{id} and update_time<@[#reqAt]`];
                DB.sql(sqls.join(''));
            ",

            {
                "comment":"用于确认是否抢到此任务，如果tag与自己设置的相同，则表示抢到了",
                "multi":false,
                "metas":"each",
                "merge":true,
                "sql":"select tag from tasks where id=@{id}"
            }
        ]
    }],
    
    "response":[
        {"name":"tag", "type":"string"}
    ]
},

{
    "name": "result",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP",
    "comment":"保存定时任务最近的执行结果，只是将任务通知给服务，并不表示成功执行了。
        最终执行的结果由/callback通知给schedule",

    "request": [
        {"name":"taskId", "type":"int", "must":true, "min":0, "comment":"任务ID"},
        {"name":"tag", "type":"string", "must":true, "min":10, "comment":"一次执行的标识"},
        {"name":"sync", "type":"string", "must":true, "options":["Y","N"], "comment":"是否为同步任务"},
        {"name":"code", "type":"int", "must":true, "min":0, "comment":"执行返回码"},
        {"name":"info", "type":"string", "must":true, "min":1, "max":30, "comment":"执行信息"}
    ],

    "process" : [{
        "name" : "set_result",
        "type" : "rdb",
        "db": "tasks",
        "sqls" : [
            "update tasks set code=@{code},info='@{info}' where id=@{taskId}",
            {
                "when":"@{CONDITION|sync,'s.==','Y'}",
                "sql":"insert or ignore into results(taskId,tag,code,info) values
                    (@{taskId},'@{tag}',@{code},'@{info}')"
            },
            {
                //异步的情况，默认先插入一个未知错误，等待服务回调后再更新它
                "when":"@{CONDITION|sync,'s.==','N'}",
                "sql":"insert or ignore into results(taskId,tag,code,info) values
                    (@{taskId},'@{tag}',150,'unknown')"
            }
        ]
    }]
},

{
    "name": "tasks",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "APP",
    "comment":"查询所有等待执行的任务",
    
    "process" : [{
        "name" : "get_waiting_tasks",
        "type" : "rdb",
        "db": "tasks",
        "sqls" : [{
            "name":"tasks",
            "multi":true,
            "metas":"each",
            "merge":false,
            "sql":"
              select id,cid,sync,name,service,url
                from tasks where nextTryAt<=@{NOW|unit60000} and code<>0
              union
              select id,cid,sync,name,service,url
                from tasks where nextStart<=@{NOW|unit60000}
            "
        }]
    }]
}
]