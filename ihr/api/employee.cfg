[
{
    "name" : "list",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "逐页查询雇员",

    "request": [
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"查询数量"},
        {"name":"offset", "type":"int", "must":true, "min":0, "comment":"偏移"}
    ],
    
    "process" : [
        {
            "name" : "list_employees",
            "type":"rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"list",
                    "metas" : "cols",
                    "merge" : false,
                    "multi" : true,
                    "sql" : "select e.uid,e.office,e.account,e.worktime,
                        e.email,p.name,p.phone,p.sex
                     from employee e,pool p
                     where e.state='NORM' and p.uid=e.uid
                     order by e.uid asc
                     LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"get_total",
                    "metas" : "each",
                    "merge":true,
                    "multi":false,
                    "sql":"select count(*) total from employee state='NORM'"
                }
            ]
        }    
    ]
},
{
    "name" : "listAll",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker" : "RBAC",
    "feature" : "admin",
    "comment" : "逐页查询雇员，可以查到所有NORM/HIDE的雇员",

    "request": [
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"查询数量"},
        {"name":"offset", "type":"int", "must":true, "min":0, "comment":"偏移"}
    ],
    
    "process" : [
        {
            "name" : "list_employees",
            "type":"rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"list",
                    "metas" : "cols",
                    "merge" : false,
                    "multi" : true,
                    "sql" : "select e.uid,e.office,e.quali,e.post,e.account,
                        e.worktime,e.email,e.entryAt,e.state,
                        p.name,p.phone,p.sex,p.birth
                     from employee e,pool p
                     where e.state in('NORM','HIDE') and p.uid=e.uid
                     order by e.uid asc
                     LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"get_total",
                    "metas" : "each",
                    "merge":true,
                    "multi":false,
                    "sql":"select count(*) total from employee
                        where state in('NORM','HIDE')"
                }
            ]
        }    
    ]
},
{
    "name" : "search",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker" : "RBAC",
    "feature" : "hr",
    "comment" : "查询雇员库",

    "request": [
        {"name":"s", "type":"string", "must":true, "min":1, "comment":"搜索内容，多个关键词用逗号分隔"},
        {"name":"limit", "type":"int", "must":true, "min":1}
    ],
    
    "process" : [
        {
            "name" : "docs",
            "type" : "search",
            "db" : "hr",
            "action" : "get @{limit}",
            "table" : "employee",
            "content" : "@{s}"
        },
        {
            "name" : "list_pool",
            "type":"rdb",
            "db":"hr",
            "sqls" : [{
                "name":"pool",
                "metas" : "cols",
                "merge" : false,
                "multi" : true,
                "sql" : "select e.uid,e.office,e.quali,e.post,e.account,
                        e.worktime,e.email,e.entryAt,
                        p.name,p.phone,p.sex,p.birth
                     from employee e,pool p
                     where e.uid in(@{LIST|!docs}) and p.uid=e.uid
                     order by e.uid asc"
            }]
        }
    ]
},
{
    "name" : "get",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker" : "RBAC",
    "feature" : "hr",
    "comment" : "查询雇员详情",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户ID"}
    ],
    
    "process" : [
        {
            "name" : "get_employee",
            "type":"rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"employee",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select e.office,e.state,e.account,
                        e.salary,e.dSalary,e.hSalary,e.subsidy,e.stock,
                        e.quali,e.post,e.entryAt,e.worktime,e.attend,e.addr,e.email,
                        e.holiday,e.weal,e.sickRatio,o.zone
                      from employee e,office o
                     where e.uid=@{uid} and o.id=e.office"
                },
                {
                    "name":"pool",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select maxEdu,firstEdu,sex,birth,name,phone
                     from pool where uid=@{uid}"
                }
            ]
        }    
    ]
},
{
    "name" : "baseInfo",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "APP-*",
    "comment" : "查询雇员基本信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户ID"}
    ],
    
    "process" : [
        {
            "name" : "get_employee",
            "type":"rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"employee",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select E.office,E.post,E.account,E.email,E.addr,
                        Z.timeOff,O.name office
                      from employee E, office O, zone Z
                     where E.uid=@{uid} and E.state='NORM'
                      and O.id=E.office and Z.id=O.zone"
                },
                {
                    "name":"pool",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select sex,name,phone from pool where uid=@{uid}"
                }
            ]
        }    
    ]
},
{
    "name" : "add",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "将人才库的人才转变为雇员，所以成为雇员之前，必须先进入人才库",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"office", "type":"int", "must":true, "min":0, "comment":"办公区域"},
        {"name":"worktime", "type":"int", "must":true, "min":0, "comment":"作息制度"},
        {"name":"quali", "type":"int", "must":true, "min":0, "comment":"任职资格"},
        {"name":"post", "type":"int", "must":true, "min":0, "comment":"任职等级"},
        {"name":"salary", "type":"float", "must":true, "min":0, "comment":"薪水"},
        {"name":"dSalary", "type":"float", "must":true, "min":0, "comment":"日薪，用于计算请假、加班的工资"},
        {"name":"hSalary", "type":"float", "must":true, "min":0, "comment":"时薪，用于计算延长工时加班工资"},
        {"name":"subsidy", "type":"float", "must":true, "min":0, "comment":"出差每日补贴基数"},
        {"name":"entryAt", "type":"int", "must":true, "min":0, "comment":"入职时间"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$", "comment":"帐号"},
        {"name":"addr", "type":"string", "must":true, "max":80, "comment":"地址"},
        {"name":"email", "type":"string", "must":true,
         "regular":"^(?i)[a-z0-9._-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+){1,4}$",
         "comment":"内部邮箱，如果没有可以使用私人邮箱"},
        {"name":"idno", "type":"string", "must":true, "regular":"[0-9]{17}[0-9Xx]", "comment":"身份证号"}
    ],
    
    "process" : [
        {
            "name" : "get_pool_info",
            "type":"rdb",
            "db":"hr",
            "sqls" : [{
                "name":"user_info",
                "metas" : "each",
                "merge":true,
                "multi":false,
                "sql":"select sex,phone,name from pool where uid=@{uid}"
            }]
        },    
        {
            "name" : "add_user",
            "type" : "call",
            "service" : "user",
            "method" : "POST",
            "url" : "/user/addByService",
            "tokenSign" : "APP",
            "comment" : "在user中开户，如果已存在，则自动激活",
            "parameters":"{
                \"uid\":@{uid},
                \"account\":\"@{account}\",
                \"password\":\"123456\",
                \"mobile\":\"@{!phone}\",
                \"email\":\"@{email}\",
                \"sex\":\"@{!sex}\",
                \"type\":\"I\",
                \"nickName\":\"@{!name}\"
            }"
        },
        {
            "name" : "save_employee_info",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert or ignore into employee(uid,account,idno) values(@{uid},'@{account}','@{idno}')",
                //更新状态与入职时间，防止再入职的情况
                "update employee set
                    state='NORM',
                    entryAt=@{entryAt},
                    office=@{office},
                    post=@{post},
                    quali=@{quali},
                    salary=@{salary},
                    dSalary=@{dSalary},
                    hSalary=@{hSalary},
                    subsidy=@{subsidy},
                    entryAt=@{entryAt},
                    email='@{email}',
                    addr='@{addr}',
                    idno='@{idno}'
                 where uid=@{uid}",

                 //入职事件
                 "insert into event(uid,at,type,cfmAt,cfmUid)
                  values(@{uid},@{NOW|unit60000},'JOIN',@{NOW|unit60000},@{#tokenCaller})",
                 "update pool set state='JOIN' where uid=@{uid}" //如果在人才库中，则改变状态为已入职
            ]
        },
        {
            "name" : "save_search",
            "type" : "search",
            "db":"hr",
            "action" : "put",
            "table" : "employee",
            "did" : "@{uid}",
            "title":"@{account}",
            "summary":"@{!name} @{!phone}",
            "content":"@{idno} @{addr} @{email}"
        }
    ],
    "response":[]
},

{
    "name" : "update",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "修改雇员信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"addr", "type":"string", "must":true, "len":80, "comment":"地址"},
        {"name":"email", "type":"string", "must":true,
         "regular":"^(?i)[a-z0-9._-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+){1,4}$",
         "comment":"内部邮箱，如果没有可以使用私人邮箱"},
        {"name":"idno", "type":"string", "must":true, "len":18, "comment":"身份证号"}
    ],
    
    "process" : [
        {
            "name" : "update_employee_info",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "update employee set
                    addr='@{addr}',
                    email='@{email}',
                    idno='@{idno}'
                 where uid=@{uid}"
            ]
        },
        {
            "name" : "update_search",
            "type" : "search",
            "db":"hr",
            "action" : "update",
            "table" : "employee",
            "did" : "@{uid}",
            "content":"@{idno} @{addr} @{email}"
        }
    ],
    "response":[]
},
{
    "name" : "setZone",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "修改雇员所在区域与作息时间",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"office", "type":"int", "must":true, "min":0, "comment":"办公区域"},
        {"name":"worktime", "type":"int", "must":true, "min":0, "comment":"作息制度"}
    ],
    
    "process" : [{
        "name" : "update_employee_zone",
        "type" : "rdb",
        "db" : "hr",
        "sqls" : [
            "update employee set
                office=@{office},
                worktime=@{worktime}
             where uid=@{uid}"
        ]
    }]
},
{
    "name" : "setSalary",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "修改工资，同时记录事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"salary", "type":"double", "must":true, "min":0, "comment":"薪水"},
        {"name":"dSalary", "type":"double", "must":true, "min":0, "comment":"日薪，用于计算请假、加班的工资"},
        {"name":"hSalary", "type":"double", "must":true, "min":0, "comment":"时薪，用于计算延长工时加班工资"},
        {"name":"subsidy", "type":"double", "must":true, "min":0, "comment":"差旅补贴基数"},
        {"name":"stock", "type":"double", "must":true, "min":0, "comment":"拥有股份数量"}
    ],
    
    "process" : [
        {
            "name" : "get_salary",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"salary",
                "metas" : "each",
                "merge" : true,
                "multi" : false,
                "sql" : "select salary oldS,stock oldK from employee where uid=@{uid}"
            }]
        },
        {
            "name" : "update_employee_salary",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "update employee set
                    salary=@{salary},
                    dSalary=@{dSalary},
                    hSalary=@{hSalary},
                    subsidy=@{subsidy},
                    stock=@{stock}
                 where uid=@{uid}",

                "insert into event(uid,at,cfmAt,cfmUid,type,val,cmt)
                values(@{uid},@{NOW|unit60000},@{NOW|unit60000},@{#tokenCaller},
                '@{CONDITION|salary,`d.>=`,!oldS,`ADDS`,`SUBS`}',
                @{salary}-@{!oldS},'@{!oldS}->@{salary},@{!oldK}->@{stock}')"
            ]
        }
    ],
    "response":[]
},
{
    "name" : "toggleHide",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "切换隐藏与不隐藏",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"state", "type":"string", "must":true, "options":["HIDE","NORM"], "comment":"状态"}
    ],
    
    "process" : [{
        "name" : "update_employee_state",
        "type" : "rdb",
        "db":"hr",
        "sqls" : [
            "update employee set
                state='@{state}'
             where uid=@{uid}"
        ]
    }]
},
{
    "name" : "setGrade",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "修改任职等级，补贴基数也需要相应调整，同时记录事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"quali", "type":"int", "must":true, "min":0, "comment":"任职资格"},
        {"name":"post", "type":"int", "must":true, "min":0, "comment":"任职等级"}
    ],

    "process" : [
        {
            "name" : "get_position",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"position",
                "metas" : "each",
                "merge" : true,
                "multi" : false,
                "sql" : "select post oldP,quali oldQ from employee where uid=@{uid}"
            }]
        },    
        {
            "name" : "update_position",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "update employee set
                    quali=@{quali},
                    post=@{post}
                 where uid=@{uid}",

                "insert into event(uid,at,cfmAt,cfmUid,type,val,cmt)
                values(@{uid},@{NOW|unit60000},@{NOW|unit60000},@{#tokenCaller},
                '@{CONDITION|post,`i.>=`,!oldP,`PROM`,`DEMO`}',
                @{post}-@{!oldP},'@{!oldP}->@{post}')",
                
                "insert into event(uid,at,cfmAt,cfmUid,type,val,cmt)
                values(@{uid},@{NOW|unit60000},@{NOW|unit60000},@{#tokenCaller},
                '@{CONDITION|quali,`i.>=`,!oldQ,`UPG`,`DWG`}',
                @{quali}-@{!oldQ},'@{!oldQ}->@{quali}')"
            ]
        }
    ],
    "response":[]
},
{
    "name" : "setAttendance",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "设置考勤方式、办公区、作息时间",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"type", "type":"string", "must":true, "comment":"考勤方式",
         "options":["NORM","LAN","REMO","FREE"]},
        {"name":"office", "type":"int", "must":true, "min":0, "comment":"办公区"},
        {"name":"worktime", "type":"int", "must":true, "min":0, "comment":"作息时间"}
    ],

    "process" : [
        {
            "name" : "update_attendance",
            "type" : "rdb",
            "db" : "hr",
            "sqls" : [
                "update employee set 
                  attend='@{type}',
                  office=@{office},
                  worktime=@{worktime}
                 where uid=@{uid}"
            ]
        }
    ]
},
{
    "name" : "setWeal",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "设置福利",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"holiday", "type":"int", "must":true, "comment":"年休假余额"},
        {"name":"weal", "type":"int", "must":true, "comment":"福利假余额，单位小时"},
        {"name":"sickRatio", "type":"float", "must":true, "min":0, "max":1.0, "comment":"病假工资比率"}
    ],

    "process" : [
        {
            "name" : "update_weal",
            "type" : "rdb",
            "db" : "hr",
            "sqls" : [
                "update employee set
                 holiday=@{holiday},
                 weal=@{weal},
                 sickRatio=@{sickRatio}
                where uid=@{uid}"
            ]
        }
    ]
},
{
    "name" : "setDeduction",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "设置所得税专项扣减，比如房贷、赡养、抚养等",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"deduction", "type":"double", "must":true, "comment":"扣减额度"}
    ],

    "process" : [
        {
            "name" : "update_deduction",
            "type" : "rdb",
            "db" : "hr",
            "sqls" : [
                "update employee set deduction=@{deduction} where uid=@{uid}"
            ]
        }
    ]
},
{
    "name" : "remove",
    "method" : "DELETE",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"admin",
    "comment" : "删除雇员信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"state", "type":"string", "must":true, "options":["DIS","LEAV"],
         "comment":"删除原因，本质是改变雇员状态，同时会记录关键事件"}
    ],
    
    "process" : [
        {
            "name" : "deActive_user_ByHr",
            "type" : "call",
            "service" : "user",
            "method" : "POST",
            "url" : "/user/deActiveByHr",
            "tokenSign" : "APP",
            "comment" : "在user中去激活用户",
            "parameters":"{\"uid\":@{uid}}"
        },
        {
            "name" : "rmv_user_info",
            "type" : "rdb",
            "db":"hr",
            "comment" : "并没有真正删除雇员信息，而是将状态置为非NORM",
            "sqls" : [
                "update employee set state='@{state}' where uid=@{uid}",
                //人才库中也要改变状态
                "update pool set state='@{state}' where uid=@{uid}",
                //离职事件
                "insert into event(uid,at,type,cfmAt,cfmUid)
                 values(@{uid},@{NOW|unit60000},'@{state}',@{NOW|unit60000},@{#tokenCaller})"
            ]
        },
        {
            "name" : "remove_search",
            "type" : "search",
            "db": "hr",
            "action" : "rmv",
            "table" : "user",
            "did" : "@{uid}"
        }
    ],
    "response":[]
},

{
    "name" : "idno",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "APP-ifinance",
    "comment" : "财务服务查询雇员的身份证号",
    
    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"}
    ],
    
    "process" : [
        {
            "name" : "get_idno",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name" : "idno",
                "metas" : "each",
                "merge" : true,
                "multi" : false,
                "sql" : "select idno from employee where uid=@{uid}"
            }]
        }
    ]
},

{
    "name" : "listEvent",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "查询雇员关键事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"}
    ],
    
    "process" : [
        {
            "name" : "list_event",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"list",
                "metas" : "each",
                "merge" : false,
                "multi" : true,
                "sql" : "select at,type,val,cmt from event where uid=@{uid}
                        order by at desc"
            }]
        }
    ]
},

{
    "name" : "waitEvent",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker" : "RBAC",
    "feature" : "hr",
    "comment" : "等待hr确认的雇员关键事件",
    
    "process" : [
        {
            "name" : "list_event",
            "type" : "rdb",
            "db": "hr",
            "sqls" : [{
                "name":"list",
                "metas" : "each",
                "merge" : false,
                "multi" : true,
                "sql" : "select e.uid,e.at,e.type,e.val,e.cmt,y.account
                 from event e, employee y where e.cfmUid<0 and y.uid=e.uid
                  order by at desc"
            }]
        }
    ]
},

{
    "name" : "myEvent",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "查询雇员自己的关键事件",
    
    "process" : [
        {
            "name" : "list_event",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"list",
                "metas" : "each",
                "merge" : false,
                "multi" : true,
                "sql" : "select at,type,val,cmt from event where uid=@{#tokenCaller}
                    order by at desc"
            }]
        }
    ]
},

{
    "name" : "addEvent",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"ABAC",
    "comment" : "部门经理为雇员添加关键事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"type", "type":"string", "must":true,
         "options":["ADDS","SUBS","FINE","WARN","ERR","OTH"],
         "comment":"员工关键事件类型"},
        {"name":"val", "type":"double", "must":false, "default":0.0, "comment":"涉及金额"},
        {"name":"cmt", "type":"string", "must":false, "default":"", "comment":"备注"}
    ],
    
    "vars":[
        {"name":"at", "val":"@{NOW|unit60000}"}
    ],
    
    "aclProcess":[
        {"macro":"is_his_leader", "#UID#":"@{uid}"}
    ],
    
    "process" : [
        {
            "name" : "add_event",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into event(uid,at,type,val,cmt)
                 select uid,@{NOW|unit60000},'@{type}',@{val},'@{cmt}'
                  from employee where uid=@{uid}" //使用select是为了确认employee存在
            ]
        }
    ]
},

{
    "name" : "laud",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"ABAC",
    "comment" : "部门经理为雇员添加表扬事件，无需HR确认",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"val", "type":"double", "must":false, "default":0.0, "comment":"涉及金额"},
        {"name":"cmt", "type":"string", "must":false, "default":"", "comment":"备注"}
    ],
    
    "vars":[
        {"name":"at", "val":"@{NOW|unit60000}"}
    ],
    
    "aclProcess":[
        {"macro":"is_his_leader", "#UID#":"@{uid}"}
    ],
    
    "process" : [{
        "name" : "add_laud_event",
        "type" : "rdb",
        "db":"hr",
        "sqls" : [
            "insert into event(uid,at,type,val,cfmUid,cfmAt,cmt)
             select uid,@{at},'LAUD',0,@{#tokenCaller},@{at},'@{cmt}'
              from employee where uid=@{uid}" //使用select是为了确认employee存在
        ]
    }]
},

{
    "name" : "prjEvent",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "APP-iproject",
    "comment" : "iproject服务为员工服务添加项目经历，无需HR确认",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"pid", "type":"int", "must":true, "default":0, "comment":"项目id"},
        {"name":"leader", "type":"int", "must":true, "comment":"项目经理uid"},
        {"name":"prjName", "type":"string", "must":true, "default":"", "comment":"项目名称"}
    ],

    "process" : [{
        "name" : "add_prj_event",
        "type" : "rdb",
        "db" : "hr",
        "sqls" : [
            "insert into event(uid,at,type,val,cfmUid,cfmAt,cmt)
             select uid,@{NOW|unit60000},'PRJ',@{pid},@{leader},@{NOW|unit60000},'@{prjName}'
              from employee where uid=@{uid}" //使用select是为了确认employee存在
        ]
    }]
},


{
    "name" : "removeEvent",
    "method" : "DELETE",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"ABAC",
    "comment" : "部门经理删除雇员关键事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"type", "type":"string", "must":true,
         "options":["ADDS","SUBS","FINE","WARN","ERR","OTH"],
         "comment":"员工关键事件类型"},
        {"name":"at", "type":"int", "must":true, "comment":"发生时间"}
    ],

    "aclProcess":[
        {"macro":"is_his_leader", "#UID#":"@{uid}"}
    ],

    "process" : [
        {
            "name" : "remove_envent",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "delete from event
                 where uid=@{uid} and at=@{at}
                  and type='@{type}' and cfmAt=0" //已确认的事件不可删除
            ]
        }
    ]
},

{
    "name" : "cfmEvent",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "hr确认雇员关键事件，确认后，则不可删除",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"type", "type":"string", "must":true,
         "options":["ADDS","SUBS","FINE","WARN","ERR","OTH"],
         "comment":"员工关键事件类型，不包括入职、离职、开除"},
        {"name":"at", "type":"int", "must":true, "comment":"发生时间，只能修改时间"}
    ],

    "process" : [
        {
            "name" : "cfm_envent",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "update event set 
                    cfmAt=@{NOW|unit60000},
                    cfmUid=@{#tokenCaller}
                 where uid=@{uid} and at=@{at}
                  and type='@{type}' and cfmAt=0" //已确认的事件不可更改
            ]
        }
    ]
},
{
    "name" : "setInfo",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"admin",
    "comment" : "设置人才附加信息，此信息也会附加到雇员信息中",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"k", "type":"string", "must":true, "min":1, "comment":"关键词"},
        {"name":"v", "type":"string", "must":true, "min":0, "comment":"信息"}
    ],
    
    "process" : [
        {
            "name" : "rmv_user_info",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "replace into info(uid,k,v) values(@{uid},'@{k}','@{v}')"
            ]
        }
    ],
    "response":[]
},

{
    "name" : "getInfo",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "comment" : "查询人才附加信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"k", "type":"string", "must":true, "min":1, "comment":"关键词"}
    ],
    
    "process" : [
        {
            "name" : "get_user_info",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"get_user_info",
                "metas":"each",
                "merge":true,
                "multi":false,
                "sql":"select v from info where uid=@{uid} and k='@{k}'"
            }]
        }
    ]
},

{
    "name" : "getInfos",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "comment" : "查询人才附加信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"}
    ],
    
    "process" : [
        {
            "name" : "get_user_infos",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [{
                "name":"infos",
                "metas":"each",
                "merge":false,
                "multi":true,
                "sql":"select k,v from pool where uid=@{uid}"
            }]
        }
    ]
}
]