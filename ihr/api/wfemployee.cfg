[
/* 人事调整；入职、离职、修改工资、股票相关的工作流 */
{
    "name" : "add",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"admin",
    "comment" : "直接添加员工，不需要走工作流，
        只有超级管理员可以执行此操作，比如用在系统引入时，录入已有员工",

    "request": [
        {"name":"name", "type":"string", "must":true, "min":1, "max":100, "comment":"姓名"},
        {"name":"sex", "type":"string", "must":true, "options":["F","M","O"], "comment":"性别"},
        {"name":"birth", "type":"int", "must":true, "min":-26352000, "comment":"生日，UTC分钟"},
        {"name":"office", "type":"int", "must":true, "min":0, "comment":"办公区域"},
        {"name":"worktime", "type":"int", "must":true, "min":0, "comment":"作息制度"},
        {"name":"maxEdu", "type":"string", "must":true, "regular":"^E\\d$", "comment":"最高学历"},
        {"name":"firstEdu", "type":"string", "must":true, "regular":"^E\\d$", "comment":"第一学历"},
        {"name":"quali", "type":"int", "must":true, "min":0, "comment":"任职资格"},
        {"name":"post", "type":"int", "must":true, "min":0, "comment":"任职等级"},
        {"name":"salary", "type":"double", "must":true, "min":0, "biggerThan":"dSalary", "comment":"薪水"},
        {"name":"dSalary", "type":"double", "must":true, "min":0, "biggerThan":"hSalary", "comment":"日薪，用于计算请假、加班的工资"},
        {"name":"hSalary", "type":"double", "must":true, "min":0, "comment":"时薪，用于计算延长工时加班工资"},
        {"name":"subsidy", "type":"double", "must":true, "min":0, "comment":"出差每日补贴基数"},
        {"name":"entryAt", "type":"int", "must":true, "min":0, "comment":"入职时间"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$", "comment":"帐号"},
        {"name":"addr", "type":"string", "must":true, "max":80, "comment":"地址"},
        {"name":"phone", "type":"string", "must":true, "min":1, "max":100, "comment":"联系电话"},
        {"name":"email", "type":"string", "must":true, "comment":"内部邮箱，如果没有可以使用私人邮箱",
         "regular":"^(?i)[a-z0-9._-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+){1,4}$"},
        {"name":"idno", "type":"string", "must":true, "regular":"[0-9]{17}[0-9Xx]", "comment":"身份证号"},
        {"name":"cmt", "type":"string", "must":true, "min":0, "max":300, "comment":"附加信息"}
    ],

    "process" : [
        {
            "name" : "gen_user_id",
            "type" : "call",
            "service" : "user",
            "method" : "GET",
            "url" : "/user/genuid",
            "tokenSign" : "APP",
            "comment" : "产生一个用户uid。如果入职，则使用此id，如果不入职则一直保留"
        },
        {
            "name" : "add_user",
            "type" : "call",
            "service" : "user",
            "method" : "POST",
            "url" : "/user/addByService",
            "tokenSign" : "APP",
            "comment" : "在user中开户，如果已存在，则自动激活",
            "parameters":"{
                \"uid\":@{!uid},
                \"account\":\"@{account}\",
                \"password\":\"123456\",
                \"mobile\":\"@{phone}\",
                \"email\":\"@{email}\",
                \"sex\":\"@{sex}\",
                \"type\":\"I\",
                \"nickName\":\"@{name}\"
            }"
        },
        {
            "name" : "save_employee_info",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into pool(uid,maxEdu,firstEdu,quali,sex,birth,expSalary,
                name,phone,email,cmt,createAt) values
                (@{!uid},'@{maxEdu}','@{firstEdu}',@{quali},'@{sex}',@{birth},0,
                '@{name}','@{phone}','@{email}','@{cmt}',@{NOW|unit60000})",

                "insert or ignore into employee(uid,account,idno)
                 values(@{!uid},'@{account}','@{idno}')",

                //更新状态与入职时间，防止再入职的情况
                "update employee set
                    state='NORM',
                    entryAt=@{entryAt},
                    office=@{office},
                    worktime=@{worktime},
                    post=@{post},
                    quali=@{quali},
                    salary=@{salary},
                    dSalary=@{dSalary},
                    hSalary=@{hSalary},
                    subsidy=@{subsidy},
                    entryAt=@{entryAt},
                    email='@{email}',
                    addr='@{addr}',
                    idno='@{idno}'
                 where uid=@{!uid}",

                 //入职事件
                 "insert into event(uid,at,type,cfmAt,cfmDid)
                  values(@{!uid},@{NOW|unit60000},'JOIN',@{NOW|unit60000},@{#tokenCaller})",
                 "update pool set state='JOIN' where uid=@{!uid}", //如果在人才库中，则改变状态为已入职
                 
                 "update worktime set usedTimes=usedTimes+1 where id=@{worktime}",
                 "update office set usedTimes=usedTimes+1 where id=@{office}"
            ]
        },
        {
            "name" : "save_search",
            "type" : "search",
            "db":"hr",
            "action" : "put",
            "table" : "employee",
            "did" : "@{!uid}",
            "title":"@{account}",
            "summary":"@{name} @{phone}",
            "content":"@{idno} @{addr} @{email}"
        }
    ],
    "response":[]
},

{
    "name" : "entry",
    "method" : "POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "将人才库的人才转变为雇员",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"office", "type":"int", "must":true, "min":0, "comment":"办公区域"},
        {"name":"worktime", "type":"int", "must":true, "min":0, "comment":"作息制度"},
        {"name":"quali", "type":"int", "must":true, "min":0, "comment":"任职资格"},
        {"name":"post", "type":"int", "must":true, "min":0, "comment":"任职等级"},
        {"name":"salary", "type":"double", "must":true, "min":0, "biggerThan":"dSalary", "comment":"薪水"},
        {"name":"dSalary", "type":"double", "must":true, "min":0, "biggerThan":"hSalary", "comment":"日薪，用于计算请假、加班的工资"},
        {"name":"hSalary", "type":"double", "must":true, "min":0, "comment":"时薪，用于计算延长工时加班工资"},
        {"name":"subsidy", "type":"double", "must":true, "min":0, "comment":"出差每日补贴基数"},
        {"name":"entryAt", "type":"int", "must":true, "min":0, "comment":"入职时间"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$", "comment":"帐号"},
        {"name":"addr", "type":"string", "must":true, "max":80, "comment":"地址"},
        {"name":"email", "type":"string", "must":true, "comment":"内部邮箱，如果没有可以使用私人邮箱",
         "regular":"^(?i)[a-z0-9._-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+){1,4}$"},
        {"name":"idno", "type":"string", "must":true, "regular":"[0-9]{17}[0-9Xx]", "comment":"身份证号"},
        {"name":"signer", "type":"string", "must":true, "min":1, "comment":"下一步权签人"}
    ],

    "process" : [
        {
            "name" : "notemployee_and_inpool",
            "type":"rdb",
            "db":"hr",
            "sqls" : [{
                "name" : "num",
                "metas" : "each",
                "merge" : true,
                "multi" : false,
                "sql" : "select (select count(*) from pool where uid=@{uid}) pNum,
                 (select count(*) from employee where uid=@{uid} and state in('NORM','HIDE')) eNum"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!eNum,'i.==',0} && @{CONDITION|!pNum,'i.==',1}",
                "errorCode":6204,
                "errorInfo":"invalid data"
            }
        },
        {
            "name":"generate_did",
            "type":"var",
            "vars":[
                {"name":"did", "val":"@{SEQUENCE|i,flowdid}"}
            ]
        },
        {
            "name":"create_workflow",
            "comment":"启动入职审批电子流，返回flowid、name",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"entry\",\"did\":\"@{did}\",\"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{account}\",\"nextSigners\":[\"@{signer}\"]
            }"
        },
        {
            "name" : "save_workflow_data",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "update pool set state='PROC',flowdid=@{did} where uid=@{uid}",
                "insert into flowdata(did,flowid,uid,createAt,name,dispName,data) values
                (@{did},@{!flowid},@{uid},@{NOW|unit60000},'entry','@{!name}','@{REQUEST}')"
            ]
        }
    ],
    "response":[]
},

{
    "name": "entryCallback_confirm",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"入职工作流确认回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"maxStep", "type":"int", "must":true, "max":100, "comment":"最大步骤号"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"},
        {"name":"act", "type":"string", "must":true, "comment":"操作:confirm,reject,create,deliver"},
        {"name":"actor", "type":"string", "must":true, "comment":"当前步骤的处理人"},
        {"name":"signers", "list":true, "type":"string", "must":false, "default":[],
         "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人帐号，如果是最后一步，可以不提供"}
    ],
    
    "vars": [
        {"name":"step1", "val":"@{ADD|i,step,1}"},
        {"name":"nextStep", "val":"@{CONDITION|step,'i.>=',maxStep, 100, step1}"}
    ],

    "process" : [
        {"macro":"check_accounts", "#ACCLIST#":"@{JSON|signers,`[]`,``}",
         "when":"@{CONDITION|step,'i.<',maxStep}"},
        {
            "name" : "act_confirm_get_flowdata",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [{
                "name":"get_flow_data",
                "merge":true,
                "multi":false,
                "metas":"each", //查询姓名等信息，同时确认pool中存在
                "sql":"select f.data,p.sex,p.phone,p.name
                     from flowdata f,pool p
                     where f.did=@{did} and f.flowid=@{flowid}
                       and p.uid=f.uid"
            }],
            "onSuccess":"Mesh.success(@{!data})" //返回创建工作流是的请求参数
        },
        {
            "name" : "add_user",
            "type" : "call",
            "service" : "user",
            "method" : "POST",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "url" : "/user/addByService",
            "tokenSign" : "APP",
            "comment" : "在user中开户，如果已存在，则自动激活",
            "parameters":"{
                \"uid\":@{!uid},
                \"account\":\"@{!account}\",
                \"password\":\"123456\",
                \"mobile\":\"@{!phone}\",
                \"email\":\"@{!email}\",
                \"sex\":\"@{!sex}\",
                \"type\":\"I\",
                \"nickName\":\"@{!name}\"
            }"
        },
        {
            "name" : "set_state",
            "type" : "rdb",
            "db": "hr",
            "when":"@{CONDITION|act,'s.!=','create'}",//创建回调时，数据未创建
            "sqls" : [{
                //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
                "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
                "sql":"update flowdata set flSta=@{nextStep}
                   where did=@{did} and flowid=@{flowid}"
            }]
        },
        {
            "name" : "act_confirm_all",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [
                "insert or ignore into employee(uid,account,idno)
                 values(@{!uid},'@{!account}','@{!idno}')",
                
                "update employee set
                    state='NORM',
                    office=@{!office},
                    worktime=@{!worktime},
                    post=@{!post},
                    quali=@{!quali},
                    salary=@{!salary},
                    dSalary=@{!dSalary},
                    hSalary=@{!hSalary},
                    subsidy=@{!subsidy},
                    entryAt=@{!entryAt},
                    email='@{!email}',
                    addr='@{!addr}',
                    idno='@{!idno}'
                 where uid=@{!uid}",

                //入职事件，最后一个权签人作为确认人
                "insert into event(uid,at,type,cfmAt,cfmDid)
                 select @{!uid},@{NOW|unit60000},'JOIN',@{NOW|unit60000},uid
                 from employee where account='@{actor}'",
                
                //更新人才库状态，防止离职后再入职的情况
                "update pool set state='JOIN' where uid=@{!uid}",

                "update worktime set usedTimes=usedTimes+1 where id=@{!worktime}",

                "update office set usedTimes=usedTimes+1 where id=@{!office}"
            ]
        },
        {
            "name" : "save_search",
            "type" : "search",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "db":"hr",
            "action" : "put",
            "table" : "employee",
            "did" : "@{!uid}",
            "title":"@{!account}",
            "summary":"@{!name} @{!phone}",
            "content":"@{!idno} @{!addr} @{!email}"
        }
    ],
    "response":[]
},

{
    "name": "entryCallback_reject",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"入职工作流拒绝回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"}
    ],

    "process" : [{
        "name" : "set_state",
        "type" : "rdb",
        "db": "hr",
        "sqls" : [{
            //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
            "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
            "sql":"update flowdata set flSta=@{step}-1
			       where did=@{did} and flowid=@{flowid}"
        }]
    }],
    "response":[]
},
{
    "name" : "leave",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "雇员离职，删除雇员信息",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"type", "type":"string", "must":true, "options":["DIS","LEAV"],
         "comment":"删除原因，本质是改变雇员状态，同时会记录关键事件"},
        {"name":"signer", "type":"string", "must":true, "min":1, "comment":"下一步权签人"},
        {"name":"cmt", "type":"string", "must":true, "max":80, "comment":"描述"}
    ],

    "process" : [
        {
            "name": "judge_resources",
            "type": "dataexists",
            "db": "hr",
            "errorCode": 6009,
            "errorInfo": "has assets",
            "expect": false,
            "sql": "select 1 from resource where uid=@{uid}"
        },
        {
            "name":"generate_did",
            "type":"var",
            "vars":[
                {"name":"did", "val":"@{SEQUENCE|i,flowdid}"}
            ]
        },
        {
            "name":"create_workflow",
            "comment":"启动离职审批电子流，返回flowid、name",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"leave\",\"did\":\"@{did}\",\"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{cmt}\",\"nextSigners\":[\"@{signer}\"]
            }"
        },
        {
            "name" : "save_workflow_data",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into flowdata(did,flowid,uid,createAt,name,dispName,data) values
                (@{did},@{!flowid},@{uid},@{NOW|unit60000},'leave','@{!name}','@{REQUEST}')"
            ]
        }
    ],
    "response":[]
},

{
    "name": "leaveCallback_confirm",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"离职工作流确认回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"maxStep", "type":"int", "must":false, "default":100, "max":100, "comment":"最大步骤号"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"},
        {"name":"act", "type":"string", "must":true, "comment":"操作:confirm,reject,create,deliver"},
        {"name":"actor", "type":"string", "must":true, "comment":"当前步骤的处理人"},
        {"name":"signers", "list":true, "type":"string", "must":false, "default":[],
         "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人帐号，如果是最后一步，可以不提供"}
    ],

    "vars": [
        {"name":"step1", "val":"@{ADD|i,step,1}"},
        {"name":"nextStep", "val":"@{CONDITION|step,'i.>=',maxStep, 100, step1}"}
    ],
    
    "process" : [
        {"macro":"check_accounts", "#ACCLIST#":"@{JSON|signers,`[]`,``}",
         "when":"@{CONDITION|step,'i.<',maxStep}"},
        {
            "name" : "act_confirm_get_flowdata",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [{
                "name":"get_flow_data",
                "merge":true,
                "multi":false,
                "metas":"each",
                "sql":"select data from flowdata
                     where flowid=@{flowid} and did=@{did}"
            }],
            "onSuccess":"Mesh.success(@{!data})"
        },
        {
            "name" : "deActive_user_ByHr",
            "type" : "call",
            "service" : "user",
            "method" : "POST",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "url" : "/user/deActiveByHr",
            "tokenSign" : "APP",
            "comment" : "在user中去激活用户",
            "parameters":"{\"uid\":@{!uid}}"
        },
        {
            "name" : "set_state",
            "type" : "rdb",
            "db": "hr",
            "when":"@{CONDITION|act, 's.!=','create'}",//创建回调时，数据未创建
            "sqls" : [{
                //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
                "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
                "sql":"update flowdata set flSta=@{nextStep}
                    where did=@{did} and flowid=@{flowid}"
            }]
        },
        {
            "name" : "rmv_user_info",
            "type" : "rdb",
            "db":"hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "comment" : "并没有真正删除雇员信息，而是将状态置为非NORM",
            "sqls" : [
                "update employee set state='@{!type}' where uid=@{!uid}",

                //人才库中也要改变状态，否则无法再次入职
                "update pool set state='@{!type}' where uid=@{!uid}",

                //离职事件，最后一个权签人作为确认人
                "insert into event(uid,at,type,cfmAt,cfmDid,cmt)
                 select @{!uid},@{NOW|unit60000},'@{!type}',@{NOW|unit60000},uid,'@{!cmt}'
                 from employee where account='@{actor}'",
                
                {
                    "name" : "user_info",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select worktime,office from employee where uid=@{!uid}"
                },

                "update worktime set usedTimes=usedTimes-1 where id=@[!worktime]",

                "update office set usedTimes=usedTimes-1 where id=@[!office]"
            ]
        },
        {
            "name" : "remove_search",
            "type" : "search",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "action" : "rmv",
            "table" : "user",
            "did" : "@{!uid}"
        }
    ],
    "response":[]
},
{
    "name": "leaveCallback_reject",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"离职工作流拒绝回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"}
    ],

    "process" : [{
        "name" : "set_state",
        "type" : "rdb",
        "db": "hr",
        "sqls" : [{
            //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
            "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
            "sql":"update flowdata set flSta=@{step}-1
             where did=@{did} and flowid=@{flowid}"
        }]
    }],
    "response":[]
},

{
    "name" : "setSalary",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "调薪，同时记录事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"salary", "type":"double", "must":true, "min":0, "biggerThan":"dSalary",  "comment":"薪水"},
        {"name":"dSalary", "type":"double", "must":true, "min":0, "biggerThan":"hSalary", "comment":"日薪，用于计算请假、加班的工资"},
        {"name":"hSalary", "type":"double", "must":true, "min":0, "comment":"时薪，用于计算延长工时加班工资"},
        {"name":"signer", "type":"string", "must":true, "min":1, "comment":"下一步权签人"},
        {"name":"cmt", "type":"string", "must":true, "min":0, "comment":"说明"}
    ],

    "vars":[
        {"name":"did", "val":"@{SEQUENCE|i,flowdid}"}
    ],

    "process" : [
        {
            "name":"create_workflow",
            "comment":"启动调薪审批电子流，返回flowid、name",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"salary\",\"did\":\"@{did}\",\"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{cmt}\",\"nextSigners\":[\"@{signer}\"]
            }"
        },
        {
            "name" : "save_workflow_data",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into flowdata(did,flowid,uid,createAt,name,dispName,data) values
                (@{did},@{!flowid},@{uid},@{NOW|unit60000},'salary','@{!name}','@{REQUEST}')"
            ]
        }
    ],
    "response":[]
},

{
    "name": "salaryCallback_confirm",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"调薪工作流回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"maxStep", "type":"int", "must":false, "default":100, "max":100, "comment":"最大步骤号"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"},
        {"name":"act", "type":"string", "must":true, "comment":"操作:confirm,reject,create,deliver"},
        {"name":"actor", "type":"string", "must":true, "comment":"当前步骤的处理人"},
        {"name":"signers", "list":true, "type":"string", "must":false, "default":[],
         "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人帐号，如果是最后一步，可以不提供"}
    ],

    "vars": [
        {"name":"step1", "val":"@{ADD|i,step,1}"},
        {"name":"nextStep", "val":"@{CONDITION|step,'i.>=',maxStep, 100, step1}"}
    ],
    
    "process" : [
        {"macro":"check_accounts", "#ACCLIST#":"@{JSON|signers,`[]`,``}",
         "when":"@{CONDITION|step,'i.<',maxStep}"},
        {
            "name" : "act_confirm_get_flowdata",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [
                {
                    "name":"get_flow_data",
                    "merge":true,
                    "multi":false,
                    "metas":"each",
                    "sql":"select f.data,e.salary oldS from flowdata f,employee e
                         where f.flowid=@{flowid} and f.did=@{did} and e.uid=f.uid"
                }
            ],
            "onSuccess":"Mesh.success(@{!data})"
        },
        {
            "name" : "set_state",
            "type" : "rdb",
            "db": "hr",
            "when":"@{CONDITION|act, 's.!=','create'}",//创建回调时，数据未创建
            "sqls" : [{
                //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
                "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
                "sql":"update flowdata set flSta=@{nextStep}
                   where did=@{did} and flowid=@{flowid}"
            }]
        },
        {
            "name" : "update_employee_salary",
            "type" : "rdb",
            "db":"hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [
                "update employee set
                    salary=@{!salary},
                    dSalary=@{!dSalary},
                    hSalary=@{!hSalary}
                 where uid=@{!uid}",

                "insert into event(uid,at,cfmAt,cfmDid,type,val,cmt)
                 select @{!uid},@{NOW|unit60000},@{NOW|unit60000},uid,
                  '@{CONDITION|!salary,`d.>=`,!oldS,`ADDS`,`SUBS`}',
                  @{!salary}-@{!oldS},'@{!oldS}->@{!salary}'
                 from employee where account='@{actor}'"
            ]
        }
    ],
    "response":[]
},

{
    "name": "salaryCallback_reject",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"调薪工作流拒绝回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"}
    ],
    
    "process" : [{
        "name" : "set_state",
        "type" : "rdb",
        "db": "hr",
        "sqls" : [{
            //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
            "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
            "sql":"update flowdata set flSta=@{step}-1
				 where did=@{did} and flowid=@{flowid}"
        }]
    }],
    "response":[]
},

{
    "name" : "setStock",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "配票或退股，同时记录事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"stock", "type":"double", "must":true, "min":0, "comment":"拥有股份数量"},
        {"name":"signer", "type":"string", "must":true, "min":1, "comment":"下一步权签人"},
        {"name":"cmt", "type":"string", "must":true, "min":0, "comment":"说明"}
    ],

    "vars":[
        {"name":"did", "val":"@{SEQUENCE|i,flowdid}"}
    ],

    "process" : [
        {
            "name":"create_workflow",
            "comment":"启动调股审批电子流，返回flowid、name",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"stock\",\"did\":\"@{did}\",\"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{cmt}\",\"nextSigners\":[\"@{signer}\"]
            }"
        },
        {
            "name" : "save_workflow_data",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into flowdata(did,flowid,uid,createAt,name,dispName,data) values
                (@{did},@{!flowid},@{uid},@{NOW|unit60000},'stock','@{!name}','@{REQUEST}')"
            ]
        }
    ],
    "response":[]
},

{
    "name": "stockCallback_confirm",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"配股退股工作流确认回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"maxStep", "type":"int", "must":false, "default":100, "max":100, "comment":"最大步骤号"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"},
        {"name":"act", "type":"string", "must":true, "comment":"操作:confirm,reject,create,deliver"},
        {"name":"actor", "type":"string", "must":true, "comment":"当前步骤的处理人"},
        {"name":"signers", "list":true, "type":"string", "must":false, "default":[],
         "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人帐号，如果是最后一步，可以不提供"}
    ],

    "vars": [
        {"name":"step1", "val":"@{ADD|i,step,1}"},
        {"name":"nextStep", "val":"@{CONDITION|step,'i.>=',maxStep, 100, step1}"}
    ],
    
    "process" : [
        {"macro":"check_accounts", "#ACCLIST#":"@{JSON|signers,`[]`,``}",
         "when":"@{CONDITION|step,'i.<',maxStep}"},
        {
            "name" : "act_confirm_get_flowdata",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [{
                "name":"get_flow_data",
                "merge":true,
                "multi":false,
                "metas":"each",
                "sql":"select f.data,e.stock oldS from flowdata f,employee e
                     where f.flowid=@{flowid} and f.did=@{did} and e.uid=f.uid"
            }],
            "onSuccess":"Mesh.success(@{!data})"
        },
        {
            "name" : "set_state",
            "type" : "rdb",
            "db": "hr",
            "when":"@{CONDITION|act,'s.!=','create'}",//创建回调时，数据未创建
            "sqls" : [{
                //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
                "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
                "sql":"update flowdata set flSta=@{nextStep}
				       where did=@{did} and flowid=@{flowid}"
            }]
        },
        {
            "name" : "update_employee_salary",
            "type" : "rdb",
            "db":"hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [
                "update employee set stock=@{!stock} where uid=@{!uid}",

                "insert into event(uid,at,cfmAt,cfmDid,type,val,cmt)
                select @{!uid},@{NOW|unit60000},@{NOW|unit60000},uid,
                 '@{CONDITION|!stock,`d.>=`,!oldS,`ASTO`,`SSTO`}',
                 @{!stock}-@{!oldS},'@{!oldS}->@{!stock}'
                from employee where account='@{actor}'"
            ]
        }
    ],
    "response":[]
},
{
    "name": "stockCallback_reject",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"配股退股工作流拒绝回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"}
    ],
    
    "process" : [{
        "name" : "set_state",
        "type" : "rdb",
        "db": "hr",
        "sqls" : [{
            //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
            "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
            "sql":"update flowdata set flSta=@{step}-1
                where did=@{did} and flowid=@{flowid}"
        }]
    }],
    "response":[]
},

{
    "name" : "setGrade",
    "method" : "PUT",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "升级降级，补贴基数也需要相应调整，同时记录事件",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"quali", "type":"int", "must":true, "min":0, "comment":"任职资格"},
        {"name":"post", "type":"int", "must":true, "min":0, "comment":"任职等级"},
        {"name":"subsidy", "type":"double", "must":true, "min":0, "comment":"出差补贴基数"},
        {"name":"signer", "type":"string", "must":true, "min":1, "comment":"下一步权签人"},
        {"name":"cmt", "type":"string", "must":true, "min":0, "comment":"说明"}
    ],

    "vars":[
        {"name":"did", "val":"@{SEQUENCE|i,flowdid}"}
    ],

    "process" : [
        {
            "name":"create_workflow",
            "comment":"启动升级降级审批电子流，返回flowid、name",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"grade\",\"did\":\"@{did}\",\"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{cmt}\",\"nextSigners\":[\"@{signer}\"]
            }"
        },
        {
            "name" : "save_workflow_data",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "insert into flowdata(did,flowid,uid,createAt,name,dispName,data) values
                (@{did},@{!flowid},@{uid},@{NOW|unit60000},'grade','@{!name}','@{REQUEST}')"
            ]
        }
    ],
    "response":[]
},

{
    "name": "gradeCallback_confirm",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"升级降级工作流确认回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"maxStep", "type":"int", "must":false, "default":100, "max":100, "comment":"最大步骤号"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"},
        {"name":"act", "type":"string", "must":true, "comment":"操作:confirm,reject,create,deliver"},
        {"name":"actor", "type":"string", "must":true, "comment":"当前步骤的处理人"},
        {"name":"signers", "list":true, "type":"string", "must":false, "default":[],
         "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人帐号，如果是最后一步，可以不提供"}
    ],

    "vars": [
        {"name":"step1", "val":"@{ADD|i,step,1}"},
        {"name":"nextStep", "val":"@{CONDITION|step,'i.>=',maxStep, 100, step1}"}
    ],

    "process" : [
        {"macro":"check_accounts", "#ACCLIST#":"@{JSON|signers,`[]`,``}",
         "when":"@{CONDITION|step,'i.<',maxStep}"},
        {
            "name" : "act_confirm_get_flowdata",
            "type" : "rdb",
            "db": "hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [{
                "name":"get_flow_data",
                "merge":true,
                "multi":false,
                "metas":"each",
                "sql":"select f.data,e.post oldP,e.quali oldQ
                     from flowdata f,employee e
                     where f.flowid=@{flowid} and f.did=@{did}
                      and e.uid=f.uid"
            }],
            "onSuccess":"Mesh.success(@{!data})"
        },
        {
            "name" : "set_state",
            "type" : "rdb",
            "db": "hr",
            "when":"@{CONDITION|act,'s.!=','create'}",//创建回调时，数据未创建
            "sqls" : [{
                //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
                "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
                "sql":"update flowdata set flSta=@{nextStep}
                    where did=@{did} and flowid=@{flowid}"
            }]
        },
        {
            "name" : "update_employee_salary",
            "type" : "rdb",
            "db":"hr",
            "when" : "@{CONDITION|step,'i.>=',maxStep}",
            "sqls" : [
                "update employee set
                 quali=@{!quali},post=@{!post},subsidy=@{!subsidy}
                 where uid=@{!uid}",

                "insert into event(uid,at,cfmAt,cfmDid,type,val,cmt)
                select @{!uid},@{NOW|unit60000},@{NOW|unit60000},uid,
                 '@{CONDITION|!quali,`i.>=`,!oldQ,`UPG`,`DWG`}',
                 @{!quali}-@{!oldQ},'@{!oldQ}->@{!quali}'
                from employee where account='@{actor}'"
            ]
        }
    ],
    "response":[]
},
{
    "name": "gradeCallback_reject",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "APP-workflow",
    "comment":"升级降级工作流拒绝回调",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"},
        {"name":"did", "type":"long", "must":true, "min":0, "comment":"user id"},
        {"name":"step", "type":"int", "must":true, "min":0, "max":100, "comment":"当前步骤号"}
    ],

    "process" : [{
        "name" : "set_state",
        "type" : "rdb",
        "db": "hr",
        "sqls" : [{
            //检查数据是否存在，不存在的情况，不能前进，只能后退，到第0步时可以清除工作流
            "expected":{"num":1, "errorCode":"NOT_EXISTS", "errorInfo":"not exists"},
            "sql":"update flowdata set flSta=@{step}-1
                where did=@{did} and flowid=@{flowid}"
        }]
    }],
    "response":[]
},
{
    "name" : "list",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "feature":"hr",
    "comment" : "查询雇员的所有工作流",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":1, "comment":"用户id"},
        {"name":"offset", "type":"int", "must":true, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"数量"}
    ],
    
    "process" : [
        {
            "name" : "list_workflows",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"list",
                    "metas" : "each",
                    "merge" : false,
                    "multi" : true,
                    "sql" : "select flowid,did,flSta,createAt,name,dispName
                        from flowdata where uid=@{uid}
                        order by createAt desc
                        LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"get_total",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select count(*) total
                        from flowdata where uid=@{uid}"
                }
            ]
        }
    ]
},
{
    "name" : "get",
    "method" : "GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "在工作流中查询员工或人才的详情，通过判断是否为工作流参与人来确定查看权限",

    "request": [
        {"name":"did", "type":"int", "must":true, "min":0, "comment":"工作流数据id"}
    ],

    "process" : [
        {
            "name" : "get_flowdata",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                {
                    "name":"flowdata",
                    "metas" : "each",
                    "merge" : true,
                    "multi" : false,
                    "sql" : "select flowid,did,uid,flSta status,flSta+1 step,
                         createAt,name,dispName,data
                        from flowdata where did=@{did}"
                },
                {
                    "name":"employee",
                    "metas" : "each",
                    "merge" : false,
                    "multi" : false,
                    "ignores":["NOT_EXISTS"],
                    "sql" : "select office,worktime,state,account,
                        salary,dSalary,hSalary,subsidy,stock,
                        quali,post,entryAt,addr,email
                      from employee
                     where uid=@[!uid]"
                },
                {
                    "name":"pool",
                    "metas" : "each",
                    "merge" : false,
                    "multi" : false,
                    "sql" : "select maxEdu,firstEdu,sex,birth,name,phone
                     from pool where uid=@[!uid]"
                }
            ]
        },
        {
            "name":"check_signer",
            "comment":"鉴权，询问workflow当前帐号是否为这个工作流中的权签人",
            "type" : "call",
            "service": "workflow",
            "method":"GET",
            "tokenSign":"APP",
            "url":"/isSigner?did=@{did}&flowid=@{!flowid}&account=@{#tokenAcc}"
        }
    ]
},
{
    "name" : "remove",
    "method" : "DELETE",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment" : "删除工作流",

    "request": [
        {"name":"did", "type":"int", "must":true, "min":0, "comment":"工作流数据id"}
    ],

    "process" : [
        {
            "name" : "get_flowdata",
            "type" : "rdb",
            "db":"hr",
            "convert":{"code":"NOT_EXISTS", "to":"NO_RIGHT", "info":"no right"},
            "sqls" : [{
                "name":"flowdata",
                "metas" : "each",
                "merge" : true,
                "multi" : false,
                "sql" : "select flowid,uid from flowdata
                     where did=@{did} and flSta<=0" //处在第0步的工作流才可以被创建人删除
            }]
        },
        {
            "name":"remove_workflow",
            "type" : "call",
            "service": "workflow",
            "method":"DELETE",
            "tokenSign":"APP",
            "url":"/remove?flowid=@{!flowid}&did=@{did}&actor=@{#tokenAcc}"
        },
        {
            "name" : "clear_flowdata",
            "type" : "rdb",
            "db":"hr",
            "sqls" : [
                "delete from flowdata where did=@{did}",
                //删除的不一定是入职工作流，所以需要判断flowid
                //重置后的状态不一定是工作流启动时的状态，因为可能是再入职，以前就有记录
                "update pool set flowdid=0,state='EXAM'
                 where uid=@{!uid} and flowdid=@{did}"
            ]
        }
    ],
    "response":[]
}
]