[
{
    "name": "set",
    "method":"POST",
    "visibility" : "private",
    "feature" : "power",
    "aclChecker" : "RBAC",
    "tokenChecker" : "USER",
    "comment":"设置某个服务中的权限",
    
    "request": [
        {"name":"uids", "type":"int", "must":true, "min":0, "list":true, "minSize":1, "comment":"用户id"},
        {"name":"service", "type":"string", "must":true, "min":1, "max":30},
        {"name":"role", "type":"string", "must":true, "min":1, "max":30, "comment":"角色名称"},
        {"name":"power", "type":"string", "must":true, "comment":"权限列表，type1|val1|type2|val2..."}
    ],

    "process" : [
        {
            "name" : "set",
            "type" : "rdb",
            "db": "user",
            
            "sqls" : [
                "js:var sqls=['replace into powers(uid,service,role,power) values'];
                 var uids=@{uids};
                 for(var i in uids) {
                    if(i>0) sqls.push(',');
                    sqls.push('(',uids[i],`,'@{service}','@{role}','@{power}')`)
                 }
                 DB.sql(sqls.join(''));
                "
            ]
        }
    ]
},

{
    "name": "get",
    "method":"GET",
    "visibility" : "private",
    "feature" : "power",
    "tokenChecker" : "BASEUSER",
    "comment":"查询用户在某个服务中的权限，在USER_CHECKER中，
        校验完token后，再用这个token查询power。
        不能定义为OAUTH，因为服务不一定申明了依赖USER服务",

    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "max":30}
    ],
    
    "process" : [
        {
            "name" : "get",
            "type" : "rdb",
            "db": "user",
            
            "sqls" : [{
                "multi":false,
                "merge":true,
                "withMeta":"each",
                "sql":"select role,power from powers
                 where service='@{service}' and uid=@{#tokenCaller}"
            }]
        }
    ]
},

{
    "name": "remove",
    "method":"POST",
    "visibility" : "private",
    "feature" : "power",
    "aclChecker" : "RBAC",
    "tokenChecker" : "USER",
    "comment":"清除在某个服务中的权限，但是不能清除自己的权限",

    "request": [
        {"name":"uid", "type":"int", "must":true, "min":0, "comment":"用户id"},
        {"name":"service", "type":"string", "must":true, "min":1, "max":30}
    ],

    "process" : [
        {
            "name" : "remove",
            "type" : "rdb",
            "db": "user",
            
            "sqls" : [
                "delete from powers where uid=@{uid}
                 and service='@{service}' and uid!=@{#tokenCaller}"
            ]
        }
    ]
},

{
    "name": "getRole",
    "visibility" : "private",
    "feature" : "member",
    "method":"GET",
    "tokenChecker" : "USER",
    "comment":"获得用户在某个群组中的角色，在端侧直接调用，用于做一些UI的调整。",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"}
    ],

    "process" : [
        {
            "name" : "getRole",
            "type" : "rdb",
            "db" : "user",

            "sqls" : [{
                 "multi":false,
                 "withMeta" : "each",
                 "merge":true,
                 "sql":"select role,power from powers where service='@{service}' and uid=@{#tokenCaller}"
            }]
        }
    ]
},

{
    "name": "gets",
    "method":"GET",
    "visibility" : "private",
    "feature" : "member",
    "aclChecker" : "RBAC",
    "tokenChecker" : "BASEUSER",
    "comment":"获得一个服务中所有用户的权限及角色",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"offset", "type":"int", "must":true, "min":0},
        {"name":"num", "type":"int", "must":true, "min":5, "max":100}
    ],
    
    "process" : [
        {
            "name" : "getRole",
            "type" : "rdb",
            "db" : "user",

            "sqls" : [{
                "name":"users",
                "multi":true,
                "withMeta" : "cols",
                "merge":false,
                "sql":"select u.id,u.account,u.nickName,u.ustatus,p.role,p.power
                 from powers p,user u
                 where p.service='@{service}' and u.id=p.uid
                 order by id
                 LIMIT @{num} OFFSET @{offset}"
            }]
        }
    ]
},

{
    "name": "search",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "feature" : "user",
    "aclChecker" : "RBAC",
    "comment":"模糊查找帐号及其权限信息",
                
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"s", "type":"str", "must":true, "min":1},
        {"name":"limit", "type":"int", "must":true, "min":1, "max":100}
    ],

    "process" : [
        {
            "name" : "docs",
            "type" : "search",
            "db": "user",
            "table":"user",
            "action" : "get @{limit}",
            "content" : "@{s}"
        },
        
        {
            "name":"users",
            "type":"rdb",
            "db":"user",
            "sqls":[{
                "name":"users",
                "multi":true,
                "withMeta" : "cols",
                "sql":"select u.id,u.account,u.nickName,u.ustatus,p.role,p.power
                 from powers p,user u
                 where p.service='@{service}' and u.id in(@{LIST|!docs})"
            }]
        }
    ]
},

{
    "name": "serviceList",
    "visibility" : "private",
    "feature" : "member",
    "aclChecker" : "RBAC",
    "tokenChecker" : "USER",
    "comment":"从bios服务获取所有服务的列表",

    "process" : [
        {
            "name" : "get_service_list_from_bios",
            "type" : "call",
            "service": "bios",
            "method":"GET",
            "url":"/service/listAll",
            "tokenSign":"APPKEY"
        }
    ]
}
]