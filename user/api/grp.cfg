[
{
    "name": "create",
    "visibility" : "private",
    "feature" : "group",
    "method":"POST",
    "tokenChecker" : "OAUTH",
    "comment":"在父群组中创建子群组，每个服务的顶层群组ID为0，群不区分服务。执行此操作的用户必须在该群组的父群组中具有群组操作的权限",
    
    "request": [
        {"name":"fid", "type":"int", "must":true, "min":0, "comment":"父群组id"},
        {"name":"name", "type":"string", "must":true, "min":1, "max":30},
        {"name":"service", "type":"string", "must":true, "min":1, "max":30},
        {"name":"owner", "type":"int", "must":true, "comment":"管理员用户id"},
        {"name":"role", "type":"string", "must":true, "min":1, "max":30, "comment":"管理员角色名"},
        {"name":"descr", "type":"string", "must":true, "max":1024, "comment":"描述信息"}
    ],
    
    "vars": [
        {"name":"gid", "val":"@{SEQUENCE|'groupid',i}",
         "comment":"群组id用服务id、父id与名称生成一个long型的hashcode，即使后面改变了name，id也不变化"}
    ],
    
    "process" : [
        {
            "name" : "create",
            "type" : "rdb",
            "db": "user",
            
            "sqls" : [
                "insert into grp(id,fid,name,descr)
                  values(@{gid},@{fid},'@{name}','@{descr}')",
            ]
        },
        {
            "name" : "set_admin",
            "type" : "rdb",
            "db": "user",
            "when":"@{fid}>0",

            "sqls" : [
                "replace into member(service,fid,uid,role)
                 values('@{service}',@{gid},@{owner},'@{role}')"
            ]
        }
    ],
    "response":[
        {"name":"gid", "type":"int"}
    ]
},

{
    "name": "set",
    "visibility" : "private",
    "feature" : "group",
    "method":"POST",
    "tokenChecker" : "OAUTH",
    "comment":"修改群组信息。在调用方，需要限制执行此操作的用户必须在该群组的父群组中具有群组操作的权限，此接口中并不会限制",
    
    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"name", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"descr", "type":"string", "must":true, "max":1024, "comment":"描述信息"}
    ],
    
    "process" : [
        {
            "name" : "set",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                "update grp set name='@{name}',descr='@{descr}' where id=@{id}"
            ]
        }
    ]
},

{
    "name": "get",
    "visibility" : "private",
    "feature" : "group",
    "method":"GET",
    "tokenChecker" : "OAUTH",
    "comment":"查询群组信息",
    
    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"群组id"}
    ],
    
    "process" : [
        {
            "name" : "get_group_info",
            "type" : "rdb",
            "db": "user",
            
            "sqls" : [{
                "name":"group_info",
                "multi":false,
                "withMeta" : "each",
                "merge":true,
                "sql":"js:if(@{id}>0){
                    DB.sql(`select fid,name,descr from grp where id=@{id}`)
                }else{
                    DB.sql(`select -1 fid,'/' name,'Home' descr`)
                }"
            }]
        }
    ]
},

{
    "name": "remove",
    "visibility" : "private",
    "feature" : "group",
    "method":"POST",
    "tokenChecker" : "OAUTH",
    "comment":"在父群组中删除子群组。执行此操作的用户必须在该群组的父群组中具有群组操作的权限",
    
    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"待删除群组id"}
    ],
    
    "process" : [
        {
            "name" : "rmv",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                {
                    "name":"rmvMbr",
                    "sql":"delete from member where fid=@{id}"
                },
                {
                    "name":"rmvGrp",
                    "sql":"delete from grp where id=@{id}"
                }
            ]
        }
    ]
},

{
    "name": "list",
    "visibility" : "private",
    "feature" : "group",
    "method":"GET",
    "tokenChecker" : "OAUTH",
    "comment":"查询所有子群组",
    
    "request": [
        {"name":"fid", "type":"int", "must":true, "min":0, "comment":"父群组id"}
    ],
    
    "process" : [
        {
            "name" : "grps",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                {
                    "name":"grps",
                    "multi":true,
                    "withMeta" : "each",
                    "sql":"select id,name,update_time from grp where fid=@{fid}"
                }
            ]
        }
    ]
},

{
    "name": "addMember",
    "visibility" : "private",
    "feature" : "member",
    "method":"POST",
    "tokenChecker" : "OAUTH",
    "comment":"在群组中增加或修改成员，并指定角色",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$", "comment":"成员帐号"},
        {"name":"role", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"}
    ],
    
    "process" : [
        {
            "name" : "add_member",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                {
                    "comment":"获取帐号id，同时判断account是否存在",
                    "withMeta" : "each",
                    "merge":true,
                    "multi":false,
                    "sql":"select id from user where account='@{account}'"
                },
                "replace into member(service,gid,uid,role)
                 values('@{service}',@{gid},@[!id],'@{role}')"
            ]
        }
    ],
    "response":[
        {"name":"id", "type":"long", "comment":"新增成员的用户id"}
    ]
},

{
    "name": "createMember",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker" : "OAUTH",
    "comment":"增加员工，如果不存在，则创建。只有企业主可以做这个操作",
            
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"opr", "type":"int", "must":true, "min":0, "comment":"操作员帐号id，不容许操作自己的帐号"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{3,40}$"},
        {"name":"role", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"password", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"}
    ],

    "process" : [
        {
            "name" : "createAccount",
            "type" : "call",
            "service": "user",
            "method":"POST",
            "url":"/add",
            "tokenSign":"OAUTH",
            "parameters":"{\"cid\":@{^cid},\"account\":\"@{account}\",
                \"password\":\"@{password}\",\"confirmPassword\":\"@{password}\"}",
            "convert":{code:2000,to:0,info:"already exists"}
        },

        {
            "name" : "add_member",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                {
                    "comment":"获取帐号id，同时判断account是否存在，是否为自己的帐号",
                    "withMeta" : "each",
                    "merge":true,
                    "multi":false,
                    "sql":"select id from user where account='@{account}' and id<>@{opr}"
                },
                "replace into member(service,gid,uid,role)
                 values('@{service}',@{gid},@[!id],'@{role}')"
            ]
        }
    ],
    "response":[
        {"name":"id", "type":"long"}
    ]
},

{
    "name": "setRights",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker" : "OAUTH",
    "comment":"设置成员权限，当前只定义了0位为外网权限",
            
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"opr", "type":"int", "must":true, "min":0, "comment":"操作员帐号id，不容许操作自己的帐号"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{3,40}$"},
        {"name":"rights", "type":"int", "must":true, "min":0, "comment":"权限位，每位代表一个权限的开启与关闭，0:运行外网访问"}
    ],

    "process" : [
        {
            "name" : "set_member",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                {
                    "comment":"获取帐号id，同时判断account是否存在",
                    "withMeta" : "each",
                    "merge":true,
                    "multi":false,
                    "sql":"select id from user where account='@{account}' and id<>@{opr}"
                },
                
                "update member set rights=@{rights}
                 where service='@{service}' and gid=@{gid} and uid=@[!id]"
            ]
        }
    ]
},

{
    "name": "removeMember",
    "visibility" : "private",
    "feature" : "member",
    "method":"POST",
    "tokenChecker" : "OAUTH",
    "comment":"在群组中删除成员",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"opr", "type":"int", "must":true, "min":0, "comment":"操作员帐号id"},
        {"name":"uid", "type":"int", "must":true, "min":0, "comment":"成员帐号ID"}
    ],
    
    "process" : [
        {
            "name" : "rmvMember",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                "delete from member where service='@{service}'
                  and gid=@{gid} and uid=@{uid} and uid<>@{opr}"
            ]
        }
    ]
},

{
    "name": "getRole",
    "visibility" : "private",
    "feature" : "member",
    "method":"GET",
    "tokenChecker" : "USER",
    "comment":"获得用户在某个群组中的角色，在端侧直接调用，用于做一些UI的调整。",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":false, "default":0, "min":0, "comment":"群组id"}
    ],
    
    "process" : [
        {
            "name" : "getRole",
            "type" : "rdb",
            "db" : "user",
            "any" : true,

            "sqls" : [
                 {
                     "multi":false,
                     "withMeta" : "each",
                     "merge":true,
                     "sql":"select role from member where service='@{service}'
                       and gid=@{gid} and uid=@{#tokenCaller}"
                 },
                 {
                     "multi":false,
                     "withMeta" : "each",
                     "merge":true,
                     "sql":"select role from member where service='*'
                       and gid=@{gid} and uid=@{#tokenCaller}"
                 }
            ]
        }
    ]
},

{
    "name": "getMemberRole",
    "visibility" : "private",
    "feature" : "member",
    "method":"GET",
    "tokenChecker" : "OAUTH",
    "comment":"获得用户在某个群组中的角色。在ACL类中调用，获取用户在群组中的角色，从而获取角色具有的权限",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int", "must":true, "min":0, "comment":"群组id"},
        {"name":"uid", "type":"int", "must":true, "min":0, "comment":"用户id"}
    ],
    
    "process" : [
        {
            "name" : "getRole",
            "type" : "rdb",
            "db" : "user",
            "any" : true,

            "sqls" : [
                 {
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select role,rights from member where service='@{service}'
                      and gid=@{gid} and uid=@{uid}"
                 },
                 {
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select role,rights from member where service='*'
                      and gid=@{gid} and uid=@{uid}"
                 }
            ]
        }
    ]
},

{
    "name": "getMembers",
    "visibility" : "private",
    "feature":"member",
    "method":"GET",
    "tokenChecker" : "OAUTH",
    "comment":"获得用户在某个群组中的所有成员及其角色",
    
    "request": [
        {"name":"service", "type":"string",  "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int",  "must":true, "min":0, "comment":"群组id"}
    ],
    
    "process" : [
        {
            "name" : "getMembers",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                 {
                    "name":"members",
                    "multi":true,
                    "withMeta" : "each",
                    "sql":"select m.uid,m.role,u.account,m.rights,m.update_time from member m,user u
                     where m.service='@{service}' and m.gid=@{gid} and u.id=m.uid"
                 }
            ]
        }
    ]
},

{
    "name": "listAll",
    "visibility" : "private",
    "feature":"member",
    "method":"GET",
    "tokenChecker" : "OAUTH",
    "comment":"获得某个群组中的所有成员、子群组",
    
    "request": [
        {"name":"service", "type":"string",  "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"gid", "type":"int",  "must":true, "min":0, "comment":"群组id"}
    ],
    
    "process" : [
        {
            "name" : "get_members_subgrps",
            "type" : "rdb",
            "db": "user",

            "sqls" : [
                 {
                    "name":"members",
                    "multi":true,
                    "withMeta" : "each",
                    "sql":"select m.uid,m.role,m.rights,u.account,m.update_time from member m,user u
                     where m.service='@{service}' and m.gid=@{gid} and u.id=m.uid",
                    "ignores":[2001]
                 },
                 {
                    "name":"grps",
                    "multi":true,
                    "withMeta" : "each",
                    "sql":"select id,name,update_time from grp where fid=@{gid}",
                    "ignores":[2001]
                 }
            ]
        }
    ]
}
]