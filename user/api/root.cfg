[
{
    "name": "add",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "comment":"添加新用户",

    "request": [
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{3,40}$"},
        {"name":"password", "type":"string", "must":true, "min":1, "max":40},
        {"name":"confirmPassword", "type":"string", "must":true, "equalsTo":"password"}
    ],

    "process" : [
        {
            "name" : "countUser",
            "type" : "rdb",
            "db":"user",

            "sqls" : [{
                "name":"countUser",
                "withMeta" : "each",
                "merge":true,
                "multi":false,
                "sql":"select exists(select * from user where  account='@{account}') as userExists"
            }]
        },
        
        {
            "name" : "judgeExists",
            "type" : "js",
            "script" : "
                if(@{!userExists}>0) {
                    Mesh.error(RetCode.EXISTS, 'user already exists');
                } else {
                    Mesh.success({});
                }
            "
        },
        {
            "name":"get_user_id",
            "type" : "var",
            "vars":{
                "uid":"@{SEQUENCE|'userid',i}"
            }
        },
        {
            "name" : "register",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                "insert into user(id,account,nickName,pwd)
                values(@{uid},'@{account}','@{account}','@{PBKDF|6,password}')"
            ]
        },
        
        {
            "name" : "createSearch",
            "type" : "search",
            "db":"user",
            "action" : "put",
            "docid" : "@{uid}",
            "title":"@{account}"
        }
    ],
    
    "response":[
        {"name":"uid", "type":"int", "comment":"用户id"}
    ]
},

{
    "name": "login",
    "method":"POST",
    "visibility" : "public",
    "comment":"此请求来自终端,使用用户名密码认证",

    "request": [
        {"name":"cid", "type":"int", "must":true, "min":0, "comment":"作为分库参数，不录入数据库"},
        {"name":"grant_type", "type":"string", "must":true, "regular":"password"},
        {"name":"account", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"password", "type":"string", "must":true, "min":1, "max":100}
    ],

    "process" : [
       {
            "name" : "getUser",
            "type" : "rdb",
            "db": "user",
            "handler" : "cn.net.zhijian.mesh.builtin.user.Login",
            "comment":"独立版用户数据库不分库",
            "sqls" : [
                {
                    "name":"user",
                    "sql":"select id,pwd from user where account='@{account}'",
                    "multi":false,
                    "merge":true,
                    "withMeta" : "each"
                }
            ]
        },
        
        {
            "name" : "login",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                "replace into token(uid,token,refToken)
                 values(@{!id},'@{!access_token}','@{!refresh_token}')",
                "update user set loginTime=@{#now} where id=@{!id}"
            ]
        }
    ],
    
    "response" : [
        {"name":"access_token", "type":"string", "must":true},
        {"name":"refresh_token", "type":"string", "must":true},
        {"name":"expires_at", "type":"long", "must":true},
        {"name":"token_type", "type":"string", "must":true}
    ]
},

{
    "name": "refresh",
    "method":"POST",
    "visibility" : "public",
    "comment":"此请求来自终端,刷新用户token，虽然是public，但是头部仍需传递access_token",
    
    "request": [
        {"name":"grant_type", "type":"string",  "must":true, "regular":"refresh_token"},
        {"name":"refresh_token", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_\\-]{1,30}$"}
    ],
    
    "process" : [
        {
            "name" : "saveToken",
            "type" : "rdb",
            "db":"user",
            "handler" : "cn.net.zhijian.mesh.builtin.user.Refresh",
            "sqls" : [
                "replace into token(uid,token,refToken)
                values(@{!user},'@{!access_token}','@{!refresh_token}')"
            ]
        }
    ],
    
    "response" : [
        {"name":"access_token", "type":"string", "must":true},
        {"name":"refresh_token", "type":"string", "must":true},
        {"name":"expires_at", "type":"long", "must":true},
        {"name":"token_type", "type":"string", "must":true}
    ]
},

{
    "name": "serviceToken",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"此请求来自终端,用user服务的token换取其他服务token，任何用户都可访问，需服务自身控制内部的授权",
    
    "request": [
        {"name":"service", "type":"string", "must":true,
         "regular":"^[a-zA-Z0-9_:]{1,30}$", "comment":"服务名"}
        {"name":"isCloud", "type":"bool", "must":false, "default":false, "comment":"是否为云侧服务"}
    ],

    "process" : [
        {
            "name" : "getServiceToken",
            "type" : "java",
            "handler" : "cn.net.zhijian.mesh.builtin.user.GetServiceToken"
        }
    ],

    "response" : [
        {"name":"access_token", "type":"string", "must":true},
        {"name":"expires_at", "type":"long", "must":true},
        {"name":"token_type", "type":"string", "must":true}
    ]
},

{
    "name": "verify",
    "method":"GET",
    "visibility" : "public",
    "comment":"验证用户的token是否有效。此请求来自被端侧调用服务的服务侧，不是来自端侧",

    "request": [
        {"name":"access_token", "type":"string", "must":true,
         "min":40, "max":1024, "comment":"验证方从终端请求头中获得的access_token"}
    ],
    "process" : [
        {
            "name" : "verify",
            "type" : "rdb",
            "db":"user",
            "handler" : "cn.net.zhijian.mesh.builtin.user.Verify"
        }
    ]
},

{
    "name": "changePassword",
    "method":"POST",
    "visibility" : "PRIVATE",
    "tokenChecker" : "USER",
    "comment":"此请求来自终端,修改密码",
    "request": [
        {"name":"oldPassword", "type":"string", "must":true, "min":1, "max":100},
        {"name":"newPassword", "type":"string", "must":true, "min":1, "max":100},
        {"name":"confirmPassword", "type":"string", "must":true, "equalsTo":"newPassword"}
    ],
    "process" : [
        {
            "name" : "getUserPwd",
            "type" : "rdb",
            "db": "user",
            "sqls" : [
                {
                    "sql":"select pwd from user where id=@{#tokenCaller}",
                    "multi": false,
                    "merge":true
                }
            ]
        },
        
        {
            "name" : "updatePwd",
            "type" : "rdb",
            "db":"user",
            "handler" : "cn.net.zhijian.mesh.builtin.user.ChangePwd",
            "sqls" : [
                {
                    "name":"updatePwd",
                    "sql":"update user set pwd='@{PBKDF|6,newPassword}' where id=@{#tokenCaller}"
                },
                {
                    "name":"removeToken",
                    "sql":"delete from token where uid=@{#tokenCaller}"
                }
            ]
        }
    ]
},

{
    "name": "logout",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"退出登录，删除缓存及数据库中的token",
    "process" : [
        {
            "name" : "token",
            "type" : "rdb",
            "db" : "user",
            "handler" : "cn.net.zhijian.mesh.builtin.user.Logout",
            "sqls" : [
                "delete from token where uid=@{#tokenCaller}"
            ]
        }
    ]
},

{
    "name": "setBaseInfo",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"设置用户昵称、手机号、邮箱。此请求来自终端,token是用户token",

    "request": [
        {"name":"nickName", "type":"string", "must":true, "min":1, "max":100},
        {"name":"mobile", "type":"string", "must":true, "min":1, "max":100},
        {"name":"email", "type":"string", "must":true, "min":1, "max":100}
    ],
    "process" : [
        {
            "name" : "setBaseInfo",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                {
                    multi:false,
                    merge:true,
                    sql:"update user set nickName='@{nickName}',
                      mobile='@{ENCODE|userKey,mobile}', email='@{ENCODE|userKey,email}'
                      where id=@{#tokenCaller}"
                }
            ]
        },
        {
            "name" : "createSearch",
            "type" : "search",
            "db":"user",
            "action" : "update",
            "docid" : "@{#tokenCaller}",
            "summary":"@{nickName}",
            "content":"@{SUBSTR|mobile,0,3} @{SUBSTR|mobile,7,4} @{SUBSTR|email,0,5}"
        }
    ],
    "response":[]
},

{
    "name": "account",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "OAUTH",
    "feature":"super",
    "comment":"此请求来自其他服务，通过用户ID，获取任意用户的帐号、昵称",

    "request": [
        {"name":"uid", "type":"long", "must":true, "min":0}
    ],

    "process" : [
        {
            "name" : "getAccount",
            "type" : "rdb",
            "db":"user",
            "sqls" : [{
                "withMeta" : "each",
                "multi":false,
                "merge":true,
                "sql":"select account,nickName from user where id=@{uid}"
            }]
        }
    ],
    "response" : [
        {"name":"account", "type":"string", "comment":"帐号"},
        {"name":"nickName", "type":"string", "comment":"昵称"}
    ]
},

{
    "name": "userid",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker" : "OAUTH",
    "feature":"super",
    "comment":"通过帐号列表，批量获取用户ID",

    "request": [
        {"name":"accounts", "list":true, "type":"string", "must":true, "minSize":1, "regular":"^[a-zA-Z0-9_]{3,40}$"}
    ],

    "process" : [
        {
            "name" : "ids",
            "type" : "rdb",
            "db":"user",
            "sqls" : [{
                "name":"ids",
                "withMeta" : "none",
                "multi":true,
                "oneCol":true,
                "sql":"select id from user where account in(@{LIST|accounts})"
            }]
        },
        {
            "name" : "check_num",
            "type" : "js",
            "script" : "
                if(@{SIZE|accounts}>@{SIZE|!ids}) {
                    Mesh.error(RetCode.DATA_WRONG, 'exists invalid account');
                } else {
                    Mesh.success({});
                }
            "
        }
    ]
},

{
    "name": "getBaseInfo",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"查询基本信息，此请求来自终端,token是用户token",
    
    "process" : [
        {
            "name" : "baseInfo",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                {
                    multi:false,
                    merge:true,
                    withMeta:"each",
                    sql:"select account,nickName,mobile,email,loginTime from user where id=@{#tokenCaller}"
                }
            ]
        }
    ],
    "response":[
        {"name":"account", "type":"string"},
        {"name":"nickName", "type":"string"},
        {"name":"mobile", "type":"string"},
        {"name":"email", "type":"string"},
        {"name":"loginTime", "type":"long"}
    ]
},

{
    "name": "getNickname",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"查询其他用户的昵称",

    "request": [
        {"name":"uid", "type":"long", "must":true}
    ],
    
    "process" : [
        {
            "name" : "get_nickname",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                {
                    multi:false,
                    merge:true,
                    withMeta:"each",
                    sql:"select nickName from user where id=@{uid}"
                }
            ]
        }
    ]
},

{
    "name": "setInfo",
    "method":"POST",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"设置用户附加信息。此请求来自终端,token是用户token",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,100}$"},
        {"name":"val", "type":"string", "must":true, "min":1, "max":4096}
    ],

    "process" : [
        {
            "name" : "setInfo",
            "type" : "rdb",
            "db":"user",
            "sqls" : [
                 "replace into info(uid,name,val) values(@{#tokenCaller},'@{name}','@{ENCODE|userKey,val}')"
            ]
        }
    ]
},

{
    "name": "getInfo",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"查询用户附加信息。此请求来自终端,token是用户token",

    "request": [
        {"name":"name", "type":"string", "must":true, "min":1, "max":100}
    ],

    "process" : [
        {
            "name" : "info",
            "type" : "rdb",
            "db":"user",
            "sqls" : [{
                "multi" : false,
                "merge" : true,
                "sql" : "select name,val from info where uid=@{#tokenCaller} and name='@{name}'"
            }]
        }
    ],
    
    "response" : [
        {"name":"val", "type":"string"}
    ]
},

{
    "name": "getInfos",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"查询所有用户附加信息。此请求来自终端,token是用户token",

    "process" : [
        {
            "name" : "infos",
            "type" : "rdb",
            "db":"user",
            "sqls" : [{
                "name" : "infos",
                "multi" : true,
                "withMeta" : "each",
                "sql" : "select name,val from info where uid=@{#tokenCaller}"
            }]
        }
    ],
    
    "response" : [
        {"name":"infos", "type":"object", "list":true, "must":true, "object":[
            {"name":"name", "type":"string"},
            {"name":"val", "type":"string"}
        ]}
    ]    
},

{
    "name": "search",
    "method":"GET",
    "visibility" : "private",
    "tokenChecker" : "USER",
    "comment":"模糊查询帐号信息",
                
    "request": [
        {"name":"s", "type":"str", "must":true, "min":1},
        {"name":"limit", "type":"int", "must":true, "min":1, "max":100}
    ],

    "process" : [
        {
            "name" : "docs",
            "type" : "search",
            "db": "user",
            "action" : "get @{limit}",
            "content" : "@{s}"
        },
        
        {
            "name":"users",
            "type":"rdb",
            "db":"user",
            "sqls":[{
                "name":"users",
                "multi":true,
                "withMeta" : "each",
                "sql":"select id,account,nickName from user where id in(@{LIST|!docs})",
            }]
        }
    ],
    
    "response": [
        {"name":"users", "type":"object", "list":true, "object":[
            {"name":"id", "type":"string", "comment":"因为js对long有精度损失，所以用string"},
            {"name":"nickName", "type":"string"},
            {"name":"account", "type":"string"}
        ]}
    ]
}
]