[
{
    "name": "srvreport",
    "property" : "private",
    "tokenChecker": "BIOS",
    "method": "POST",
    "comment":"Service节点启动后，第一次创建节点的基本信息",
    
    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"service", "type":"string", "must":true, "regular":"^[0-9a-zA-Z_]{1,30}$"},
        {"name":"addr", "type":"string", "must":true, "min":12, "max":"53"},
        {"name":"ver", "type":"int", "must":true, "min":0}
    ],
    "process" : [
        {
            "name" : "create",
            "type" : "biosdb",
            "db":"mesh_status",
            "sharding":"@{partId}",
            "sqls" : [
                "replace into srvstatus(partId,service,addr,srvstatus,ver)
                 values(@{partId},'@{service}','@{addr}','Y',@{ver})"
            ]
        }
    ]
},

{
    "name": "dbreport",
    "property" : "private",
    "tokenChecker": "BIOS",
    "method": "POST",
    "comment":"DB节点启动后，第一次创建节点的基本信息",
    
    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"addr", "type":"string", "must":true, "min":12, "max":"53"},
        {"name":"ver", "type":"string", "must":true, "max":10},
        {"name":"slaves", "type":"string", "must":true, "min":0},
        {"name":"dbs", "type":"object", "list":true, "minSize":1, "must":true,
         "props":[
            {"name":"no", "type":"int", "must":true, "comment":"webdb实例编号"},
            {"name":"level", "type":"int", "must":true},
            {"name":"shardStart", "type":"int", "must":true},
            {"name":"shardEnd", "type":"int", "must":true}
        ]}
    ],
    "process" : [
        {
            "name" : "create",
            "type" : "biosdb",
            "db":"mesh_status",
            "sharding":"@{partId}",
            "sqls" : [
                "js:var sqls=[`replace into dbstatus(partId,dbNo,shardStart,addr,shardEnd,level,dbstatus,ver,slaves) values`];
                 var d,dbs=@{dbs};
                 for(var i in dbs) {
                     if(i>0){sqls.push(',');}
                     d=dbs[i];
                     sqls.push(`(@{partId},`,d.no,',',d.shardStart,
                     `,'@{addr}',`,d.shardEnd,',',d.level,`,'Y',@{ver},'@{slaves}')`);
                 }
                 sqls.join('');
                 "
            ]
        }
    ]
},

{
    "name": "srvremove",
    "property" : "private",
    "tokenChecker": "BIOS",
    "method": "DELETE",
    "comment":"删除服务的状态",
    
    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"service", "type":"string", "must":true, "min":0, "max":60},
        {"name":"addr", "type":"string", "must":true, "min":12, "max":"53"}
    ],
    "process" : [
        {
            "name" : "rmvService",
            "type" : "biosdb",
            "db":"mesh_status",
            "sharding":"@{partId}",
            "sqls" : [
                "delete from srvstatus where partId=@{partId}
                 and service='@{service}' and addr='@{addr}'"
            ]
        }
    ]
},

{
    "name": "dbremove",
    "property" : "private",
    "tokenChecker": "BIOS",
    "method": "POST",
    "comment":"删除数据库的状态记录",
    
    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"addr", "type":"string", "must":true, "min":12, "max":"53"},
        {"name":"dbs", "type":"object", "list":true, "minSize":1, "must":true,
         "props":[
            {"name":"no", "type":"int", "must":true, "comment":"webdb实例编号"},
            {"name":"shardStart", "type":"int", "must":true}
        ]}
    ],
    "process" : [
        {
            "name" : "rmvDb",
            "type" : "biosdb",
            "db":"mesh_status",
            "sharding":"@{partId}",
            "sqls" : [
                "js:var sqls=[];
                 var d,dbs=@{dbs};
                 for(var i in dbs) {
                     if(i>0){sqls.push(';')}
                     d=dbs[i];
                     sqls.push(`delete from dbstatus where partId=@{partId} and dbNo=`,
                         d.no,` and shardStart=`,d.shardStart,` and addr='@{addr}'`);
                 }
                 sqls.join('');
                 "
            ]
        }
    ]
},

{
    "name": "srvlist",
    "property" : "private",
    "tokenChecker": "OM",
    "method": "GET",
    "comment":"列举所有服务的状态",

    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"offset", "type":"int", "must":false, "min":0, "default":0},
        {"name":"num", "type":"int", "must":false, "min":0, "default":"2147483647"}
    ],
    
    "process" : [{
        "name" : "list",
        "type" : "biosdb",
        "db":"mesh_status",
        "sharding":"@{partId}",
        "sqls" : [
            {
                "name":"get_total",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select count(*) as total from srvstatus where partId=@{partId}"
            },
            {
                "name":"list",
                "multi":true,
                "metas" : "each",
                "sql":"select service,partId,addr,srvstatus 'status',ver
                 from srvstatus where partId=@{partId}
                 order by service
                 LIMIT @{num} OFFSET @{offset}"
            }
        ]
    }]
},

{
    "name": "dblist",
    "property" : "private",
    "tokenChecker": "OM",
    "method": "GET",
    "comment":"列举所有服务的状态",

    "request": [
        {"name":"partId", "type":"int", "must":true, "comment":"分区id"},
        {"name":"offset", "type":"int", "must":false, "min":0, "default":0},
        {"name":"num", "type":"int", "must":false, "min":0, "default":"2147483647"}
    ],
    
    "process" : [{
        "name" : "list",
        "type" : "biosdb",
        "db":"mesh_status",
        "sharding":"@{partId}",
        "sqls" : [
            {
                "name":"get_total",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select count(*) as total from dbstatus where partId=@{partId}"
            },
            {
                "name":"list",
                "multi":true,
                "metas" : "each",
                "sql":"select partId,dbNo,dbstatus 'status',ver,level,addr,slaves,shardStart,shardEnd
                    from dbstatus where partId=@{partId}
                    order by dbNo
                    LIMIT @{num} OFFSET @{offset}"
            }
        ]
    }]
},

{
    "name": "srvdetail",
    "property" : "private",
    "tokenChecker": "OM",
    "method": "GET",
    "comment":"列举服务的配置",

    "request": [
        {"name":"partId", "type":"int", "must":true},
        {"name":"service", "type":"string", "must":true, "min":0, "max":60},
        {"name":"addr", "type":"string", "must":true, "min":12, "max":"53"}
    ],
    
    "process" : [
        {
            "name" : "detail",
            "type" : "biosdb",
            "db":"mesh_status",
            "sharding":"@{partId}",
            "sqls" : [{
                "name":"detail",
                "multi":false,
                "metas" : "each",
                "merge":true,
                "sql":"select srvstatus 'status',ver from srvstatus where partId=@{partId}
                 and service='@{service}' and addr='@{addr}'"
            }]
        }
    ]
},

{
    "name": "setnodekey",
    "property" : "private",
    "tokenChecker": "BIOS",
    "method": "PUT",
    "comment":"设置节点的临时公钥，此公钥用在tokenChecker为NODE的接口中验证请前方是否来自正确的节点",
    
    "request": [
        {"name":"pubKey", "type":"string", "must":true, "min":10, "max":255, "comment":"临时密钥对的公钥"}
    ],
    "process" : [{
        "name" : "set_node_key",
        "type" : "biosdb",
        "db":"mesh_status",
        "sharding":"@{#tokenPartId}",
        "sqls" : [
            "replace into nodekey(partId, addr, pubKey)
             values(@{#tokenPartId},'@{SRCIP}','@{pubKey}')"
        ]
    }]
},

{
    "name": "getnodekey",
    "method": "GET",
    "property" : "private",
    "tokenChecker": "BIOS",
    "comment":"获取节点的临时公钥",
    
    "process" : [{
        "name" : "set_node_key",
        "type" : "biosdb",
        "db":"mesh_status",
        "sharding":"@{#tokenPartId}",
        "sqls" : [{
            "name":"pub_key",
            "multi":false,
            "merge":true,
            "metas":"each",
            "sql":"select pubKey from nodekey
             where partId=@{#tokenPartId} and addr='@{SRCIP}'"
        }]
    }]
}
]