[
{
    "name": "create",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"创建回款记录，需要在电子流中审批",

    "request": [
        {"name":"order", "type":"int", "must":true, "min":1, "comment":"订单id"},
        {"name":"amount", "type":"double", "must":true, "min":0, "comment":"金额"},
        {"name":"comment", "type":"string", "must":true, "min":1, "max":1000, "comment":"回款描述"},
        {"name":"nextSigners", "type":"string", "list":true, "must":true, "min":1, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人"}
    ],

    "process" : [
        {"macro": "has_right", "#DID#":"@{order}", "#TYPE#":"OD", "comment":"拥有查看权限就可以创建回款，比如财会"},
        {
            "name" : "get_data_status_info",
            "type" : "rdb",
            "db": "crm",

            "sqls" : [
                {
                    "comment":"查询总价",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select price,customer,flSta 'status',skuName from orders where id=@{order}"
                },
                {
                    "comment":"查询已完成，或正在进行中的付款总额",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select ifnull(sum(amount), 0) as total
                     from payments where customer=@[!customer] and ord=@{order}"
                }
            ],
            "onSuccess" : "
                if('@{!skuName}'=='') {
                    Mesh.error(RetCode.NOT_EXISTS, 'order not exist');
                } else if(@{!status}!=100) {
                    Mesh.error(5102, `order hasn't been confirmed`);
                } else if(@{amount}+@{!total}>@{!price}){
                    Mesh.error(5101, `exceeds order's price`);
                } else {
                    Mesh.success({});
                }
            "
        },
        {
            "name":"get_pay_id",
            "type" : "var",
            "vars":[
                {"name":"payId", "val":"@{SEQUENCE|i,'pay'}"}
            ]
        },
        {
            "name":"create_workflow",
            "comment":"启动回款审批电子流，返回flowid",
            "type" : "call",
            "service": "workflow",
            "method":"POST",
            "url":"/create",
            "tokenSign":"APP",
            "parameters":"{
                \"name\":\"payment\",
                \"did\":\"@{payId}\",
                \"creator\":\"@{#tokenAcc}\",
                \"descr\":\"@{!skuName}-@{!price}\",
                \"nextSigners\":@{JSON|nextSigners,`[]`,0}
            }"
        },
        
        {
            "name" : "create_payment_data",
            "type" : "rdb",
            "db": "crm",
            "comment":"添加回款，并设置权限。检查总量与增加记录，放在一个事务中完成",
            "sqls" : [
                "js:var sqls=[`insert into payments(id,customer,ord,createAt,amount,flowid,creator,cmt) 
                            values(@{payId},@{!customer},@{order},@{#reqAt},@{amount},@{!flowid},'@{#tokenAcc}','@{comment}');`];
                    sqls.push(`insert or ignore into power(type,did,endT,power,account)
                     values('PM',@{payId},2147483647,'O','@{#tokenAcc}')`);
                    var signers=@{nextSigners};
                    for(var i in signers){
                        sqls.push(`,('PM',@{payId},2147483647,'W','`,signers[i],`')`);
                        sqls.push(`,('OD',@{order},2147483647,'F','`,signers[i],`')`);
                        sqls.push(`,('CU',@{!customer},2147483647,'F','`,signers[i],`')`);
                    }
                    DB.sql(sqls.join(''));
               "
            ]
        }
    ],
    "response":[]
},

{
    "name": "remove",
    "method":"DELETE",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"删除付款记录",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"付款id"}
    ],

    "process" : [
        {"macro": "is_owner", "#DID#":"@{id}", "#TYPE#":"PM"},
        {
            "name" : "get_data_status_info",
            "type" : "rdb",
            "db": "crm",

            "sqls" : [{
                "comment":"查询status，不为0，直接返回数据错误",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select flSta 'status',flowid from payments where id=@{id}"
            }],
            "onSuccess" : {
				"errorCode":"DATA_WRONG",
				"errorInfo":"status not equals to 0",
				"condition":"@{CONDITION|!status,'i.!=',0}"
            }
        },
        {
            "name":"remove_workflow",
            "comment":"删除回款审批电子流",
            "type" : "call",
            "service": "workflow",
            "method":"DELETE",
            "url":"/remove?flowid=@{!flowid}&did=@{id}",
            "tokenSign":"APP"
        },
        {
            "name" : "remove",
            "type" : "rdb",
            "db": "crm",
            "comment":"删除回款",
            "sqls" : [
                "delete from payments where id=@{id}",
                "delete from power where did=@{id} and type='PM'"
            ]
        }
    ],
    "response":[]
},

{
    "name": "setInfo",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"修改扩展信息",

    "request": [
        {"name":"id", "type":"int",  "must":true, "min":0, "comment":"订单id"},
        {"name":"amount", "type":"double", "must":true, "min":0, "comment":"回款金额"},
        {"name":"comment", "type":"string", "must":true, "min":1, "max":1000, "comment":"备注"}
    ],

    "process" : [
        {"macro": "is_owner", "#DID#":"@{id}", "#TYPE#":"PM"},
        {
            "name" : "get_data_info",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [
                {
                    "comment":"查询服务单的状态",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select p.flSta 'status',p.ord,p.customer,o.price from payments p,orders o where p.id=@{id} and o.id=p.ord"
                }
            ],
			"onSuccess" : {
				"errorCode":5105,
				"errorInfo":"payment is over",
				"condition":"@{CONDITION|!status,'i.==',100}"
            }
        },
        {
            "name" : "set",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [
                {
                    "comment":"查询已完成，或正在进行中的付款总额",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select ifnull(sum(amount), 0) total
                     from payments where customer=@{!customer}
                      and ord=@{!ord} and id<>@{id}"
                },
                
                "js:if(@{!status}==0){
                    if(@[!total]+@{amount}>@{!price}){
                        DB.sqlError(5101,`exceeds order's price`);
                    } else {
                        DB.sql(`update payments set amount=@{amount},cmt='@{comment}' where id=@{id}`);
                    }
                }else{
                    DB.sql(`update payments set cmt='@{comment}' where id=@{id}`);
                }"
            ]
        }
    ],
    "response":[]
},

{
    "name": "list",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"订单下面所有可见回款",
            
    "request": [
        {"name":"customer", "type":"int", "must":true, "min":1, "comment":"客户id，冗余字段，便于查询"},
        {"name":"order", "type":"int", "must":true, "min":1, "comment":"订单id"},
        {"name":"offset", "type":"int",  "must":true, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int",  "must":true, "min":1, "default":10, "comment":"返回行数"}
    ],

    "process" : [
        {
            "name" : "get_payments",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [
                {
                    "name":"payments",
                    "metas" : "each",
                    "multi":true,
                    "sql":"select m.id,m.amount,m.creator,m.createAt,m.flSta 'status'
                          from payments m,power p
                         where m.customer=@{customer} and m.ord=@{order}
                            and p.account='@{#tokenAcc}' and p.type='PM'
                            and p.did=m.id and p.endT>@{NOW|unit60000}
                          order by m.createAt desc
                         LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"total",
                    "metas" : "each",
                    "multi":false,
                    "merge":true,
                    "sql":"select count(*) total from payments m,power p
                         where m.customer=@{customer} and m.ord=@{order}
                            and p.account='@{#tokenAcc}' and p.type='PM'
                            and p.did=m.id and p.endT>@{NOW|unit60000}"
                }
            ]
        }
    ]   
},

{
    "name": "readable",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"所有可见回款",
            
    "request": [
        {"name":"offset", "type":"int",  "must":true, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int",  "must":true, "min":1, "default":10, "comment":"返回行数"}
    ],

    "process" : [
        {
            "name" : "get_payments",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [
                {
                    "name":"payments",
                    "metas" : "cols",
                    "multi":true,
                    "sql":"select m.id,m.amount,m.creator,m.createAt,m.flSta 'status',
                          m.customer,c.name cname,o.skuName
                          from power p,payments m,customers c,orders o
                         where p.account='@{#tokenAcc}' and p.type='PM'
                           and p.endT>@{NOW|unit60000} and m.id=p.did
                           and c.id=m.customer and o.id=m.ord
                          order by m.createAt desc
                         LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"total",
                    "metas" : "each",
                    "multi":false,
                    "merge":true,
                    "sql":"select count(*) total from power
                         where account='@{#tokenAcc}' and type='PM' and endT>@{NOW|unit60000}"
                }
            ]
        }
    ]   
},

{
    "name": "my",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"所有我的回款",
            
    "request": [
        {"name":"offset", "type":"int",  "must":true, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int",  "must":true, "min":1, "default":10, "comment":"返回行数"}
    ],

    "process" : [
        {
            "name" : "get_payments",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [
                {
                    "name":"payments",
                    "metas" : "cols",
                    "multi":true,
                    "sql":"select m.id,m.amount,m.creator,m.createAt,m.flSta 'status',
                          m.customer,c.name cname,o.skuName
                          from power p,payments m,customers c,orders o
                         where p.account='@{#tokenAcc}' and p.type='PM' and p.power='O'
                           and p.endT>@{NOW|unit60000} and m.id=p.did
                           and c.id=m.customer and o.id=m.ord
                          order by m.createAt desc
                         LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"total",
                    "metas" : "each",
                    "multi":false,
                    "merge":true,
                    "sql":"select count(*) total from power
                         where account='@{#tokenAcc}' and type='PM' and power='O'
                           and endT>@{NOW|unit60000}"
                }
            ]
        }
    ]   
},

{
    "name": "exists",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"用于工作流中，用于判断工作流对应的数据是否存在",
            
    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"客户id"}
    ],
    "process" : [{
        "name" : "chk_exists",
        "type" : "dataexists",
        "db": "crm",
        "expect":true,
        "sql":"select * from payments where id=@{id}"
    }]
},

{
    "name": "detail",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"回款详情",
            
    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"订单id"}
    ],

    "process" : [
        {
            "name" : "get_payment_detail",
            "type" : "rdb",
            "db": "crm",
            "sqls" : [{
                "name":"detail",
                "metas" : "each",
                "multi":false,
                "merge":true,
                "sql":"select m.amount,m.creator,m.createAt,m.cmt 'comment',m.flSta 'status',m.flowid,
                         m.customer,c.name cname,o.skuName,o.id orderId,p.power
                         from payments m,customers c,orders o,power p
                       where m.id=@{id} and p.account='@{#tokenAcc}' and p.type='PM'
                         and p.did=m.id and p.endT>@{NOW|unit60000}
                         and c.id=m.customer and o.id=m.ord"
            }]
        },
        {
            "name" : "segs",
            "type" : "static",
            "comment":"返回在工作流中需要展示的字段，以便于工作流统一实现",
            "data": {"segs":["cname","skuName","amount","creator","createAt"]}
        }
    ]
}
]