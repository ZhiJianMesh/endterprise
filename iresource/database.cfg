[
/*
 * 小微企业生产资产管理，包括采购与自产。
 * 比如：小型的生产企业、大中小型软件企业、服务类企业、内部办公设备管理等，
 * SKU不多，资产管理不复杂的情况，可以使用此服务
 */
{
"name":"common",
"type":"rdb",
"version":"0.1.0",
"versions":[{
    "minVer":"0.0.0",
    "maxVer":"0.1.0",
    "sqls":[
        //工厂(包括仓库)，单纯的仓库是无生产线的工厂，无资源进出的生产线可以不必在此记录
        "create table if not exists factory (
            id        int not null primary key, -- 工厂id，seqid
            createAt  int not null, -- 创建时间，UTC分钟
            name      varchar(255) not null, -- 名称
            addr      varchar(255) not null default '', -- 地址
            cmt       varchar(255) not null default '' -- 附加描述
        )",
        "insert or ignore into factory(id,createAt,name,addr)
        values(0,@{NOW|unit60000},'Common','Virtual')", //虚拟工厂

        "create table if not exists factoryAdm (
            factory   int not null, -- 工厂id
            -- 类型：I只能入库，O可出库入库
            type      char(1) not null,
            acc       varchar(255) not null, -- 管理员帐号

            primary key(factory,acc)
        )",
        
        "create table if not exists sku ( -- 库存元素stock keeping unit
            id        int not null primary key, -- seqid
            -- 年折旧率depreciation，最小0，最大1.0，默认0%，比如软件类
            yearDepr  float not null default 0.0,
            -- 月度折旧率depreciation，默认为yearDepr/12，最小0，最大1.0
            monthDepr float not null default 0.0,
            createAt  int not null, -- 创建时间，UTC分钟
			-- 类型：WHL整机，PART零件(一批一个资产编号)，SOFT软件，VIRT虚拟物品
			type      char(4) not null default 'WHL',
            name      varchar(255) not null, -- SKU名称
            noHead    varchar(255) not null, -- 资产编号的头部
            speci     varchar(255) not null, -- 规格，比如颜色、尺寸、版本、型号等
            cmt       varchar(255) not null default '' -- 备注信息
        )",

		//SKU供应商列表，相同SKU可以有多个供应商
        "create table if not exists skusup (
            sku       int not null,
            supplier  int not null, -- 供应商id
            price     double not null, -- 供应商报价

            primary key(sku, supplier)
        )",
        "create index if not exists idx_skusup_supplier on skusup(supplier)",
          
        // 故障记录，可作为采购建议
        "create table if not exists skufeedback (
            sku       int not null, -- SKU id
            createAt  int not null, -- 创建时间，UTC分钟
            level     char(1) not null, -- 故障级别:L低，M中，H高，F致命
            creator   varchar(255) not null, -- 创建人帐号
            cmt       text not null default '', -- 故障描述
            
            primary key(sku,createAt)
        )",
        
        //供应商
        "create table if not exists supplier (
            id        int not null primary key, -- 供应商id，seqid
            createAt  int not null, -- 创建时间，UTC分钟
            name      varchar(255) not null, -- 名称
            taxid     varchar(255) not null default '', -- 统一信用码
            creator   varchar(255) not null, -- 创建人帐号
            addr      varchar(255) not null default '', -- 地址
            business  varchar(255) not null default '', -- 主营业务
            cmt       varchar(255) not null default '' -- 备注信息
        )",

        //不关注具体供应商的情况，比如办公文具等批量采购
        "insert or ignore into supplier(id,createAt,name,creator,taxid,cmt)
         values(0,@{NOW|unit60000},'OurCompany','admin','Unknown','Your own company')",
  
        "create table if not exists contact ( -- 供应商联系人
            id        int not null primary key, -- seq_id
            supplier  int not null, -- 供应商
            createAt  int not null, -- 创建时间，UTC分钟
            sex       char(1) not null, -- 性别：M男，F女，U未知

            creator   varchar(255) not null, -- 创建人帐号
            name      varchar(255) not null, -- 称呼
            post      varchar(255) not null default '', -- 职位
            phone     varchar(255) not null default '', -- 电话，多个以逗号分隔

            cmt       text not null default '' -- 描述
        )",
        "create index if not exists idx_contact_supplier on contact(supplier)"
    ]
}]
},//end of common rdb
{
    "name":"common",
    "type":"sdb" //搜索sku、supplier
},

{
"name":"log",
"type":"rdb",
"version":"0.1.0",
"comment":"资产出入库记录，过程数据，按年度分库",
"versions":[{
    "minVer":"0.0.0",
    "maxVer":"0.1.0",
    "sqls":[
        "create table if not exists inbound ( -- 入库记录
            -- 采购id，inbound与purchase一一对应
            -- 直接入库的无inbound、inlist记录
			purId     int not null primary key,
            factory   int not null, -- 入库工厂ID
            outDate   int not null default 0, -- 对方发货日期，UTC分钟
            inDate    int not null default 0, -- 入库日期，UTC分钟
            cfmDate   int not null default 0, -- 采购人确认日期
            -- 状态，WAIT等待发货，CHK清点中，OVER已确认
            state     char(4) not null default 'WAIT',
            type      char(4) not null, -- INN内部发货，EXT外部发货

            -- 内部发货时，填采购方的内部提货单号，否则为外部运单号
            tranNo    varchar(255) not null default '',
            execAcc   varchar(255) not null default '', -- 入库执行人帐号
            cmt       varchar(255) not null default '' -- 备注信息
        )",
        "create index if not exists idx_inbound_factory on inbound(factory,inDate)",
        "create unique index if not exists idx_inbound_tranNo on inbound(tranNo,type)",

        //入库sku列表，与purlist要对应
        "create table if not exists inlist (
            purId     int not null, -- 采购单ID，直接入库的采购单无意义
            sku       int not null, -- SKU ID
            -- 数量，sku.type为PART时才会大于1，此时资产编号没有用处
            num       int not null default 1,
            no        varchar(255) not null, -- 资产编号

            primary key(purId, no)
        )",

        //出库记录，由项目发起出库申请
		//内部生产资料先进入仓库，后面通过改变挂账的方式转移责任人，不必在此记录
        "create table if not exists outbound (
            -- 采购id，与项目关联，outbound与purchase一一对应
            -- 直接出库的，无outbound、outlist记录
            purId     int not null primary key,
            factory   int not null,  -- 发货工厂ID
            -- 状态，WAIT等待发货，CHK清点中，TRAN运输中，OVER已完成，LOST丢失，BACK退货
            state     char(4) not null default 'WAIT',
            type      char(4) not null, -- INN向内发货，EXT向外发货
            expDate   int not null, -- 期望的发货日期，UTC分钟
            outDate   int not null default 0, -- 实际发货日期，UTC分钟
            cfmDate   int not null default 0, -- 确认收货日期，UTC分钟

            -- 外部运单号或内部提货单号，
            -- 内部提货单号为'年(4)月(2)日(2)时(2)分(2)秒(2)顺序数(4)'
            tranNo    varchar(255) not null default '',
            applicant varchar(255) not null, -- 申请人帐号，比如其他仓库的管理员，或项目经理
            execAcc   varchar(255) not null default '', -- 出库执行人帐号
            receiver  varchar(255) not null, -- 收件人，包括姓名、电话、地址，内部发货为接收人帐号
            applyCmt  varchar(255) not null default '', -- 申请人备注信息
            cmt       varchar(255) not null default '' -- 仓库管理员备注信息
        )",
        "create index if not exists idx_outbound_state on outbound(factory,state,expDate)", //查询待发货
        "create unique index if not exists idx_outbound_tranNo on outbound(tranNo,type)",

        //出库详单，要与purlist对应上
        "create table if not exists outlist (
            purId     int not null, -- 采购申请ID
            sku       int not null, -- SKU id
            -- 数量，sku.type为PART时才会大于1，此时资产编号没有用处
            num       int not null,
            no        varchar(255) not null, -- 资产编号

            primary key(purId, no)
        )",

        //资产报废记录，一种特殊的出库处理
        "create table if not exists discard (
            factory   int not null, -- 所在工厂ID
            at        int not null, -- 报废日期，UTC分钟
            -- 数量，sku.type为PART时才会大于1，此时资产编号没有用处
            num       int not null,
            execAcc   varchar(255) not null default '', -- 执行人帐号
            no        varchar(255) not null default '', -- 资产编号

            primary key(no, at)
        )"        
    ]
}]
},
{
"name":"inventory",
"type":"rdb",
"version":"0.1.0",
"comment":"资产清单，只记录还在仓库中的资产。按factory分库",
"versions":[{
    "minVer":"0.0.0",
    "maxVer":"0.1.0",
    "sqls":[
        //还在仓库中的资产，是resource.resource的子集
        //sku入库后才有资产编号，出库后就不在此表中
        //生产耗费品通常是转移资产到项目、或转移到其他仓库的形式转移
        //多年折旧的固定资产通常要挂在具体员工名下，并随着员工在对应的项目中分摊折旧
        "create table if not exists inventory (
            factory   int not null, -- 工厂ID
            sku       int not null, -- SKU id
            num       int not null default 1, -- 数量，小件SKU大于1，其他为1
            price     double not null, -- 采购价格
            checkAt   int not null default 0, -- 清点时间，UTC分钟
            
            -- 资产编号，需要保证不同inbound入库的同SKU，编号不同
            -- 小件SKU不记入resource.resource，有唯一资产编号，但是没用处
            no        varchar(255) not null primary key, -- 资产编号
            tranNo    varchar(255) not null, -- 外部或内部运单号
            skuName   varchar(255) not null, -- 冗余，方便查询
            cmt       varchar(255) not null default '' -- 描述，比如具体位置
        )",
        "create index if not exists idx_inventory_sku on inventory(sku,no)", //比如用于发货时寻找资产      
        "create index if not exists idx_inventory_factory on inventory(factory,checkAt,no)"
    ]
}]
},
{
"name":"purchase",
"type":"rdb",
"version":"0.1.0",
"comment":"采购申请",
"versions":[{
    "minVer":"0.0.0",
    "maxVer":"0.1.0",
    "sqls":[
        //采购申请：由项目发起，相应的成本都计算到项目头上。
        //向外部的采购申请：对应一个入库操作，将SKU添加到仓库中；
        //向内部的采购申请：
        //   向外发货：对应一个出库操作，用于SKU出库；
        //   内部采购：与向外发货无本质区别，但是多一个入库操作，实现SKU在不同仓库间转移
        "create table if not exists purchase (
            id        int not null primary key, -- seq_id
            pid       int not null, -- 提出申请的项目
            expDate   int not null, -- 期望的时间，UTC分钟
            overAt    int not null default 0, -- 采购结束时间，UTC分钟
            -- 处理状态：WAIT待确认，REJ拒绝，RCV已接受，OVER处理完毕
            state     char(4) not null default 'WAIT',
            -- 类型：SELL对外销售(只有出库)，BUY对外采购(只有入库)，SELF内部仓库间转移(同时有出入库)
            type      char(4) not null,
            cost      double not null default 0, -- 总成本

            applicant varchar(255) not null, -- 申请人帐号，通常是项目经理
            prjName   varchar(255) not null, -- 项目名称，冗余，与project服务不一定一致
            cfmAcc    varchar(255) not null default '', -- 确认帐号，通常是项目经理
            descr     varchar(255) not null default '' -- 描述
        )",
        "create index if not exists idx_purchase_pid on purchase(pid,state,expDate)",

        "create table if not exists purlist (
            purId     int not null, -- 采购申请单ID
            sku       int not null, -- SKU id
            -- 数量，sku.type为PART时才会大于1，此时资产编号没有用处
            num       int not null,
            price     double not null default 0, -- 价格，采购时确定，计算purchase.cost

            primary key(purId, sku)
        )"
    ]
}]
},
{
"name":"resource",
"type":"rdb",
"version":"0.1.0",
"comment":"永久资产记录，包括所有入库过的非PART资产，按no分库",
"versions":[{
    "minVer":"0.0.0",
    "maxVer":"0.1.0",
    "sqls":[
        //数据不会删除，只会改变状态，实现老数据的查询
        //只记录大件资产，小件的直接生产资料无需记录
        "create table if not exists resource (
            -- 工厂ID，如果已报废或已挂帐到员工名下，为入库时的工厂ID
            factory   int not null,
            sku       int not null, -- SKU ID
            createAt  int not null, -- 创建日期，UTC分钟，通常指入库时间点
            -- 状态：IDLE闲置在仓库中，USE使用中，DISC报废，BAD损坏了，NONE用完
            state     char(4) not null default 'IDLE',
            -- 采购单价，只记录当时的采购价，折旧按此计算
            price     double not null,
            no        varchar(255) not null primary key -- 资产编号
        )"
    ]
}]
}
]