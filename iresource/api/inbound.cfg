[
{
    "name": "listByFac",
    "method":"GET",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"按工厂查询入库单。因为按年度分库，查询记录数受分库情况影响",

    "request": [
        {"name":"factory", "type":"int", "must":true, "min":0, "comment":"工厂ID"},
        {"name":"offset", "type":"int", "must":true, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"返回行数"}
    ],

    "process" : [
        {
            "name" : "list_inbound",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql" : "select id,sku,purId,outDate,inDate,type,tranNo,cfmAcc,cmt
                     from inbound where factory=@{factory}
                     order by inDate desc
                     LIMIT @{num} OFFSET @{offset}"
            }]
        }
    ]
},
{
    "name": "gettByTranNo",
    "method":"GET",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"按运单号查询入库单",

    "request": [
        {"name":"tranNo", "type":"string", "must":true, "min":0, "comment":"运单号"},
        {"name":"type", "type":"string", "must":true, "options":["INN","EXT"], "comment":"发货类型"}
    ],

    "process" : [
        {
            "name" : "list_inbound",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [{
                "name" : "inbound",
                "metas" : "each",
                "multi" : false,
                "merge" : true,
                "sql":"select id,sku,purId,outDate,inDate,type,tranNo,cfmAcc,cmt
                     from inbound where tranNo='@{tranNo}' and type='@{type}'"
            }]
        }
    ]
},
{
    "name": "start",
    "method":"GET",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"开始入库，填运单号，设置状态为PART",

    "request": [
        {"name":"purId", "type":"int", "must":true, "min":0, "comment":"采购ID"},
        {"name":"tranNo", "type":"string", "must":true, "min":0, "comment":"运单号，如有多个，填一个即可"},
        {"name":"outDate", "type":"int", "must":true, "min":0, "comment":"对付发货时间"}
    ],

    "process" : [
        {
            "name" : "set_tranNo",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [
                "update inbound set 
                    tranNo='@{tranNo}',
                    state='PART',
                    inDate=@{NOW|unit60000},
                    outDate=@{outDate},
                    execAcc='@{#tokenAcc}'
                 where purId=@{purId}"
            ]
        }
    ]
},
{
    "name": "shipIn",
    "method":"POST",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"执行资源入库，一个sku一条，每次的资产编号不同。
        因为按年分库的原因，必须要保证采购申请产生的inbound与入库操作在一个数据分片中。
        当采购申请之后跨越几年才入库的情况，可能找不到采购申请",

    "request": [
        {"name":"factory", "type":"int", "must":true, "min":0, "comment":"工厂ID，用于分库"},
        {"name":"pid", "type":"int", "must":true, "min":0, "comment":"项目ID"},
        {"name":"purId", "type":"int", "must":true, "min":0, "comment":"采购单ID"},
        {"name":"sku", "type":"int", "must":true, "min":0, "comment":"sku ID"},
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"数量"}
    ],

    "process" : [
        {
            "name" : "get_sku_info",
            "type" : "rdb",
            "db" : "common",
            "comment" : "查询年折旧率，记入resource中，便于每月计算折旧，顺便确认SKU是否存在",
            "sqls" : [{
                "name" : "get_sku_info",
                "metas" : "each",
                "multi" : false,
                "merge" : true,
                "sql" : "select monthDepr,noHead,type,name skuName
                     from sku where id=@{sku}"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!type,'s.==','PART'}||@{CONDITION|num,'i.==',1}",
                "errorCode":"WRONG_PARAMETER",
                "errorInfo":"invalid parameter 'num'"
            }
        },
        {
            "name" : "get_res_no",
            "type" : "var",
            "toResp" : true,
            "vars":{ //1秒入库超过1万次，no会碰撞，增加noid位数可减少碰撞
                "no":"@{!noHead}@{NOW|yyyyMMddHHmmss}@{SEQUENCE|i,noid,4}"
            }
        },
        {
            "name" : "get_price",
            "type" : "rdb",
            "db": "purchase",
            "sharding":"@{ABSHASH|pid}",
            "sqls" : [{
                "name":"get_pur_info",
                "metas":"each",
                "multi":false,
                "merge":true,
                "sql":"select price from purlist
                   where purId=@{purId} and sku=@{sku}"
            }]
        },        
        {
            "name" : "save_inlist",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [
                {
                    "name":"get_tranNo_cmt",
                    "metas":"each",
                    "multi":false,
                    "merge":true,
                    "sql":"select tranNo,cmt from inbound
                       where purId=@{purId} and pid=@{pid}"
                },
                "insert into inlist(purId,sku,no,num)
                 values(@{purId},@{sku},'@{no}',@{num})"
            ]
        },
        {
            "name" : "save_inventory",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{factory}",
            "sqls" : [
                "insert into inventory(factory,tranNo,sku,skuName,num,price,no,cmt) values
                 (@{factory},'@{!tranNo}',@{sku},'@{!skuName}',@{num},@{!price},'@{no}','@{!cmt}')"
            ]
        },
        {
            "name" : "save_resource",
            "type" : "rdb",
            "db": "resource",
            "when":"@{CONDITION|!type,'s.!=','PART'}", //零件不必记录resource
            "sharding" : "@{ABSHASH|no}",
            "sqls" : [
                //使用ignore，因为可能从一个仓库出，另外一个仓库入，只是改变状态
                "insert or ignore into resource(factory,sku,createAt,no,price,monthDepr)
                 values(@{factory},@{sku},@{NOW|unit60000},'@{no}',@{!price},@{!monthDepr})",
                "update resource set state='IDLE',factory=@{factory} where no='@{no}'"
            ]
        }
    ],
    "response":[]
},

{
    "name": "dir_in",
    "method":"POST",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"没有采购流程，直接入库，比如内部生产的产品入库",

    "request": [
        {"name":"factory", "type":"int", "must":true, "min":0, "comment":"工厂ID，用于分库"},
        {"name":"sku", "type":"int", "must":true, "min":0, "comment":"sku ID"},
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"数量"},
        {"name":"price", "type":"double", "must":true, "min":0, "comment":"单价"},
        {"name":"cmt", "type":"string", "must":true, "min":0, "comment":"描述，比如位置等信息"}
    ],

    "process" : [
        {
            "name" : "get_sku_info",
            "type" : "rdb",
            "db" : "common",
            "comment" : "查询年折旧率，记入resource中，便于每月计算折旧，顺便确认SKU是否存在",
            "sqls" : [{
                "name" : "get_sku_info",
                "metas" : "each",
                "multi" : false,
                "merge" : true,
                "sql" : "select monthDepr,noHead,type,name skuName from sku where id=@{sku}"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!type,'s.==','PART'}||@{CONDITION|num,'i.==',1}",
                "errorCode":"WRONG_PARAMETER",
                "errorInfo":"invalid parameter 'num'"
            }
        },
        {
            "name" : "get_res_no",
            "type" : "var",
            "toResp" : true,
            "vars":{ //1秒入库超过1万次，no会碰撞，增加noid位数可减少碰撞
                "no":"@{!noHead}@{NOW|yyyyMMddHHmmss}@{SEQUENCE|i,noid,4}"
            }
        },
        {
            "name" : "save_inventory",
            "type" : "rdb",
            "db": "inventory",
            "sharding":"@{factory}",
            "sqls" : [
                //直接添加，无运单号，用资产编号替代
                "insert into inventory(factory,tranNo,sku,skuName,price,no,cmt) values
                 (@{factory},'@{no}',@{sku},'@{!skuName}',@{price},'@{no}','@{cmt}')"
            ]
        },
        {
            "name" : "save_resource",
            "type" : "rdb",
            "db": "resource",
            "when":"@{CONDITION|!type,'s.!=','PART'}", //零件不必记录resource
            "sharding" : "@{ABSHASH|no}",
            "sqls" : [
                "insert into resource(factory,sku,createAt,no,price,monthDepr)
                 values(@{factory},@{sku},@{NOW|unit60000},'@{no}',@{price},@{!monthDepr})"
            ]
        }
    ],
    "response":[]
},

{
    "name": "inlist",
    "method":"GET",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"查询一次入库中的所有资产列表",

    "request": [
        {"name":"purId", "type":"int", "must":true, "min":0, "comment":"采购单ID"}
    ],

    "process" : [
        {
            "name" : "list_inlist",
            "type":"rdb",
            "db":"log",
            "sharding":"@{NOW|'yyyy'}",
            "sqls":[
                {
                    "name" : "list",
                    "metas" : "each",
                    "multi" : true,
                    "merge" : false,
                    "sql" : "select sku,price,no,num from inlist where purId=@{purId}"
                }
            ]
        }
    ]
},

{
    "name": "remove",
    "method":"DELETE",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"whadmin",
    "comment":"删除资源入库单，无inlist时才可以删除。受分库按年影响，可能不在当前库中",

    "request": [
        {"name":"purId", "type":"int", "must":true, "min":0, "comment":"采购单ID"}
    ],

    "process" : [
        {
            "name" : "judge_inlist_empty_or_not",
            "type":"dataexists",
            "db":"log",
            "sharding":"@{NOW|'yyyy'}",
            "expect" : false,
            "errorCode":6004,
            "errorInfo":"inlist is not empty",
            "sql":"select * from inlist where purId=@{purId}"
        },
        {
            "name" : "rmv_inbound",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|'yyyy'}",
            "sqls" : [
                "delete from inbound where purId=@{purId} and cfmAcc='@{#tokenAcc}'"
            ]
        }
    ]
}
]