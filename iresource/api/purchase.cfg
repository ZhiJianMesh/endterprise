[
{
    "name": "listByPid",
    "method":"GET",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RoAAC",
    "feature":"whadmin",
    "comment":"项目经理或仓库管理员查询项目的采购申请。
        项目经理可以直接查看，仓库管理员在入库时，先查询项目，再用项目id查询入库申请。
        所以项目经理在申请时，必须要求发货方注明项目名称",

    "request": [
        {"name":"pid", "type":"int", "must":true, "min":0, "comment":"项目iD"},
        {"name":"state", "type":"string", "must":false, "options":["WAIT","REJ","OVER"]},
        {"name":"num", "type":"int", "must":true, "min":1, "comment":"数量"},
        {"name":"offset", "type":"int", "must":true, "min":0, "comment":"偏移"}
    ],
    
    "aclProcess" : [
        {"macro":"is_prj_member", "#PID#":"@{pid}"}
    ],
    
    "process" : [
        {
            "name" : "list_purchase",
            "type" : "rdb",
            "db": "purchase",
            "sqls" : [{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql":"select id,cost,expDate,overAt,state,applicant,cfmAcc,descr
                     from purchase where pid=@{pid}
                     @{SWITCH|state, 'o.!=', null, ` and state='`, state, `'` | ` and state in('WAIT','REJ')`}
                     ORDER by expDate asc
                     LIMIT @{num} OFFSET @{offset}"
            }]
        }
    ]
},
{
    "name": "purchaselist",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RoAAC", //仓库管理员或是项目成员
    "feature":"purchase",
    "comment":"采购商品列表",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"采购申请单ID"}
    ],

    "aclProcess" : [
	 	{
            "name" : "get_pid",
            "type":"rdb",
            "db":"purchase",
            "sqls":[{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql" : "select pid from purchase where id=@{id}"
            }]
        },
        {"macro":"is_prj_member", "#PID#":"@{!pid}"}
    ],

    "process" : [
        {
            "name" : "get_purlist",
            "type":"rdb",
            "db":"purchase",
            "sqls":[{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql" : "select sku,num,price from purlist where purId=@{id}"
            }]
        }
    ]
},

{
    "name": "apply",
    "method":"POST",
    "property" : "private",
    "tokenChecker":"USER",
    "comment":"发起采购申请，只有项目经理有权限提采购申请",

    "request": [
        {"name":"pid", "type":"int", "must":true, "min":1, "comment":"项目ID"},
        {"name":"prjName", "type":"string", "must":true, "min":1, "comment":"项目名称"},
        {"name":"expDate", "type":"int",  "must":true, "min":1, "comment":"期望到货时间，UTC分钟"},
        {"name":"receiver", "type":"string", "must":true, "min":1, "comment":"收件人，包括姓名、地址、电话，内部发货时填内部接收人帐号"},
        {"name":"type", "type":"string", "must":true, "options":["BUY","SELL","SELF"], "comment":"类型"},
        {"name":"descr", "type":"string", "must":false, "default":"", "comment":"描述"},
        {"name":"factoryOut", "type":"int", "must":false, "min":1, "comment":"出库工厂ID"},
        {"name":"factoryIn", "type":"int", "must":false, "min":1, "comment":"入库工厂ID"},
        {"name":"skus", "type":"object", "list":true, "must":true, "minSize":1, "maxSize":200, "props":[
            {"name":"sku", "type":"int", "must":true, "min":0, "comment":"SKU ID"},
            {"name":"num", "type":"int", "must":true, "min":1, "comment":"数量"}
        ], "comment":"申请采购的资源清单"}
    ],

    "aclProcess":[
        {"macro":"is_prj_leader", "#PID#" :"@{pid}"}
    ],
    
    "process" : [
        {
            "name" : "judge_factory",
            "type" : "logic",
            "when" : "@{CONDITION|type,'s.@',`SELL,SELF`}",
            "condition":"@{CONDITION|factoryOut,'i.!=',null}",
            "errorCode":4006,
            "errorInfo":"invalid factoryOut"
        },
        {
            "name" : "judge_factory",
            "type" : "logic",
            "when" : "@{CONDITION|type,'s.@',`BUY,SELF`}",
            "condition":"@{CONDITION|factoryIn,'i.!=',null}",
            "errorCode":4007,
            "errorInfo":"invalid factoryIn"
        },
        {
            "name" : "gen_purchase_id",
            "type" : "var",
            "vars": {
                "id.toResp":"@{SEQUENCE|i,purchaseid}" //采购id
            }
        },
        {
            "name" : "rec_purchase_apply",
            "type" : "rdb",
            "db": "purchase",
            "sharding":"@{ABSHASH|pid}",
            "sqls" : [
                "insert into purchase(id,type,pid,prjName,expDate,state,applicant,descr) values
                 (@{id},'@{type}',@{pid},'@{prjName}',@{expDate},'WAIT','@{#tokenAcc}','@{descr}')",
                "insert into purlist(purId,sku,num) values
                  @{FOR|skus, `,`, `(@{id},`, e.sku, `,`, e.num, `)`}"
            ]
        },
        {
            "name" : "save_logs", //保存出入库事项，驱动工厂发货或收货
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [
                {
                    "name" : "save_inbound",
                    "when" : "@{CONDITION|type, 's.@',`BUY,SELF`}",
                    "sql" : "insert into inbound(purId,factory,type,cmt)
                     values(@{id},@{factoryIn},'@{CONDITION|type,`s.==`,`BUY`,`EXT`,`INN`}','@{descr}')"
                },
                {
                    "name" : "save_outbound",
                    "when" : "@{CONDITION|type, 's.@',`SELL,SELF`}",
                    "sql" : "insert into outbound(purId,factory,type,expDate,
                        receiver,applicant,applyCmt)
                     values(@{id},@{factoryOut},
                        '@{CONDITION|type,`s.==`,`SELL`,`EXT`,`INN`}',@{expDate},
                        '@{receiver}','@{#tokenAcc}','@{descr}')"
                }
            ]
        }
    ],
    "response":[
        {"name":"id", "type":"int", "must":true, "comment":"采购申请单ID"}
    ]
},
{
    "name": "remove",
    "method":"DELETE",
    "property" : "private",
    "tokenChecker":"USER",
    "comment":"申请人删除采购申请",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"申请ID"}
    ],

    "process" : [
        {
            "name" : "get_pid",
            "type":"rdb",
            "db":"purchase",
            "sqls":[{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql" : "select pid,flowid from purchase
                    where id=@{id} and flSta=0"
            }]
        },
        {"macro":"is_prj_leader", "#PID#" :"@{!pid}"},
        {
            "name" : "judge_inout_logs", //判断是否有出入库已执行
            "type" : "dataexists",
            "db": "log",
            "expect":false,
            "sharding":"@{NOW|`yyyy`}",
            "errorCode":"NO_RIGHT",
            "errorInfo":"can't remove after done",
            "sql" : "select type from inbound where purId=@{id}
                  and state in('CHK','OVER')
                union
                select type from outbound where purId=@{id}
                 and state in('CHK','OVER','LOST','TRAN')"
        },
        {
            "name" : "remove_inouts", //删除未执行的出入库操作
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [
                "delete from inbound where purId=@{id}",
                "delete from outbound where purId=@{id}"
            ]
        },
        {
            "name" : "delete_purchase",
            "type" : "rdb",
            "db": "purchase",
            "sharding":"@{ABSHASH|pid}",
            "sqls" : [
                {
                    "expected":{"num":1,"errorCode":"NO_RIGHT","errorInfo":"no right"},
                    "sql":"delete from purchase where id=@{id} and applicant='@{#tokenAcc}'
                        and state in('WAIT','REJ') and pid=@{pid}"
                },
                "delete from purlist where purId=@{id}"
            ]
        }
    ]
},
{
    "name": "setprice",
    "method":"PUT",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"purchase",
    "comment":"采购人员确定采购价格",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"采购ID"},
        {"name":"pid", "type":"int", "must":true, "min":1, "comment":"项目ID"},
        {"name":"sku", "type":"int", "must":true, "min":0, "comment":"SKU ID"},
        {"name":"price", "type":"double", "must":true, "min":0, "comment":"采购单价"}
    ],

    "process" : [
        {
            "name" : "set_price",
            "type" : "rdb",
            "db": "purchase",
            "sqls" : [
                "update purlist set price=@{price},
                  where purId=@{id} and sku=@{sku}",

                 //计算总成本
                 "update purchase set
                  cost=(select sum(price*num) from purlist where purId=@{id})
                  where id=@{id}"
            ]
        }
    ]
},
{
    "name": "confirm",
    "method":"PUT",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"ABAC",
    "comment":"确认出入库的资源与申请的是否一致，采购执行完后走到项目经理处，检查一下清单",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"采购ID"}
    ],
    
    "aclProcess":[
        {
            "name" : "get_pid",
            "type":"rdb",
            "db":"purchase",
            "sqls":[{
                "name" : "list",
                "metas" : "each",
                "multi" : true,
                "merge" : false,
                "sql" : "select pid from purchase
                    where id=@{id} and flSta=0"
            }]
        },
        {"macro":"is_prj_leader", "#PID#" :"@{!pid}"}
    ],

    "process" : [
        {
            "name" : "cfm_purchase",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{ABSHASH|pid}",
            "sqls" : [{
                "expected" : {"num":1, "errorCode":"NO_RIGHT", "errorInfo":"no right"},
                "sql":"update purchase set state='RCV',
                    cfmAcc='@{#tokenAcc}'
                  where id=@{id} and pid=@{pid} and state='WAIT'"
            }]
        }
    ]
},
{
    "name": "reject",
    "method":"PUT",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"RBAC",
    "feature":"purchase",
    "comment":"拒绝采购申请",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":1, "comment":"采购ID"},
        {"name":"pid", "type":"int", "must":true, "min":1, "comment":"项目ID"},
        {"name":"cmt", "type":"string", "must":false, "default":"", "comment":"原因，附加在申请descr后面提交"}
    ],

    "process" : [
        {
            "name" : "cfm_purchase",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|pid}",
            "sqls" : [
                {
                    "name" : "get_descr",
                    "metas" : "each",
                    "multi" : false,
                    "merge" : true,
                    "toResp":false,
                    "sql":"select descr from purchase 
                        where id=@{id} and state='WAIT' and pid=@{pid}"
                },
                //考虑数据库兼容性，字符串没有使用"||"追加内容
                "update purchase set state='REJ',
                    descr='@[!descr]\n@{cmt}',
                    cfmAcc='@{#tokenAcc}'
                  where id=@{id} and state='WAIT'"
            ]
        }
    ]
},
{
    "name": "over",
    "method":"PUT",
    "property" : "private",
    "tokenChecker":"USER",
    "aclChecker":"ABAC",
    "comment":"采购申请结束，资产入库，申请的项目确认",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"采购ID"},
        {"name":"pid", "type":"int", "must":true, "min":1, "comment":"项目ID"}
    ],

    "vars": [
        {"name":"pur_sharding", "val":"@{ABSHASH|pid}"}
    ],
    
    "aclProcess":[
        {"macro":"is_prj_leader", "#PID#" :"@{pid}"}
    ],

    "process" : [
        {
            "name" : "get_pur_info",
            "type" : "rdb",
            "db": "log",
            "sqls" : [
                {
                    "name" : "pur_type",
                    "metas" : "each",
                    "multi" : false,
                    "merge" : true,
                    "sql":"select type from purchase where id=@{id} and pid=@{pid}"
                },
                {
                    "name" : "purlist",
                    "metas" : "each",
                    "multi" : false,
                    "merge" : true,
                    "sql":"select num,sku from purlist where purId=@{id}"
                }
            ]
        },
        {
            "name" : "get_inout_list",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|yyyy}",
            "sqls" : [
                {
                    "name" : "inlist",
                    "metas" : "kv",
                    "multi" : false,
                    "merge" : true,
                    "when":"@{CONDITION|!type,`s.==`,`IN`}||@{CONDITION|!type,`s.==`,`SELF`}",
                    "sql":"select sku,sum(num) num from inlist where purId=@{id}
                         group by sku"
                },
                {
                    "name" : "outlist",
                    "metas" : "kv",
                    "multi" : false,
                    "merge" : true,
                    "when":"@{CONDITION|!type,`s.==`,`OUT`}||@{CONDITION|!type,`s.==`,`SELF`}",
                    "sql":"select sku,sum(num) num from outlist where purId=@{id}
                        group by sku"
                }
            ],
            //判断申购的与出入库的是否一致
            "onSuccess":"var purlist=@{!purlist};
                var inlist=@{IFNULL|!inlist,'null',obj};
                var ok=true;
                if(inlist) {
                    for(var p of purlist) {
                        ok=inlist[p.sku] && inlist[p.sku]==p.num;
                        if(!ok) {
                            break;
                        }
                    }
                }
                var outlist=@{IFNULL|!outlist,'null',obj};
                if(ok && outlist) {
                    for(var p of purlist) {
                        ok=outlist[p.sku] && outlist[p.sku]==p.num;
                        if(!ok) {
                            break;
                        }
                    }
                }
                if(ok) Mesh.success({});
                else Mesh.error(6007，'insufficient purchase list');
            "
        },
        {
            "name" : "cfm_purchase",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{pur_sharding}",
            "sqls" : [{
                "expected" : {"num":1, "errorCode":"NO_RIGHT", "errorInfo":"no right"},
                "sql":"update purchase set state='OVER',
                    overAt=@{NOW|unit60000}
                  where id=@{id} and state='RCV' and pid=@{pid}"
            }]
        },
        {
            "name" : "cfm_inout",
            "type" : "rdb",
            "db": "log",
            "sharding":"@{NOW|`yyyy`}",
            "sqls" : [
                {
                    "when":"@{CONDITION|!type,`s.==`,`OUT`}||@{CONDITION|!type,`s.==`,`SELF`}",
                    "sql":"update inbound set
                       cfmDate=@{NOW|unit60000},
                       state='OVER'
                      where purId=@{id}"
                },
                {
                    "when":"@{CONDITION|!type,`s.==`,`OUT`}||@{CONDITION|!type,`s.==`,`SELF`}",
                    "sql":"update outbound set
                       cfmDate=@{NOW|unit60000},
                       state='OVER'
                      where purId=@{id}"
                }
            ]
        }        
    ],
    "response" : []
}
]