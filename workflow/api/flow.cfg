[
{
    "name": "create",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "POST",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"dispName", "type":"string", "must":true, "min":1, "max":100, "comment":"显示名称，显示在我的待办中"},
        {"name":"callback", "type":"string", "must":true, "regular":"^/.{1,120}$", "comment":"状态变更时的回调接口"},
        {"name":"comment", "type":"string", "must":false, "default":"", "min":1, "max":100, "comment":"描述"}
    ],
    
    "vars":[
        {"name":"flowid", "type":"int", "val":"@{SEQUENCE|'flow',i}", "comment":"流程id"}
    ],
    
    "process" : [
        {
            "name" : "create_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "insert or ignore into flow(id,service,ver,name,dispName,callback,cmt) 
                    values(@{flowid},'@{service}',0,'@{name}','@{dispName}',
                    '@{callback}','@{comment}')",
                "insert or ignore into step(flow,step,type,name,cmt,ext) 
                   select id,0,'O','create_@{name}','@{dispName}','{}' from flow
                    where service='@{service}' and name='@{name}'
                    order by ver desc limit 1",
                "insert or ignore into step(flow,step,type,name,cmt,ext) 
                   select id,1,'O','confirm_@{name}','@{dispName}','{}' from flow
                    where service='@{service}' and name='@{name}'
                    order by ver desc limit 1"
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "remove",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "DELETE",
    "comment":"删除flow",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"}
    ],

    "process" : [
        {
            "name" : "check_if_flow_used",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"is_flow_used",
                "multi":false,
                "withMeta":"each",
                "merge":true,
                "sql":"select exists(select * from flow f,flowbase fb
                 where f.service='@{service}' and f.name='@{name}'
                   and fb.flow=f.id) as used"
            }]
        },
        {
            "name":"check_used",
            "type":"js",
            "script":"
                if(@{!used}==0) { Mesh.success({}) }
                else {Mesh.error(RetCode.SERVICE_ERROR,'flow is in using')}
            "
        },
        {
            "name" : "remove_flow",
            "type" : "rdb",
            "when" : "@{!used}==0",
            "db":"workflow",
            "sqls":[
                {
                    "name":"flows",
                    "multi":true,
                    "withMeta":"none",
                    "oneCol":true,
                    "sql":"select id from flow where service='@{service}' and name='@{name}'"
                },
            
                "delete from step where flow in(@[LIST|flows])",
                "delete from flow where service='@{service}' and name='@{name}'"
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "modify",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "POST",
    "comment":"改变所有版本flow的名称及显示名称",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"dispName", "type":"string", "must":false, "default":"", "min":1, "max":100,"comment":"显示名称，显示在我的待办中"},
        {"name":"comment", "type":"string", "must":false, "default":"", "min":1, "max":100, "comment":"描述"}
    ],

    "process" : [
        {
            "name" : "modify_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "update flow set
                 dispName=ifnull(nullif('@{dispName}',''),dispName),
                 cmt=ifnull(nullif('@{comment}',''),cmt)
                 where service='@{service}' and name='@{name}'"
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "list",
    "visibility" : "private",
    "tokenChecker":"USER",
    "method": "GET",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"}
    ],

    "process" : [
        {
            "name" : "list_flows",
            "type" : "rdb",
            "db" : "workflow",
            "sqls" : [
                {
                    "name":"flows",
                    "multi":true,
                    "withMeta":"each",
                    "sql":"select id,max(ver) as ver,name,dispName,cmt 'comment'
                          from flow where service='@{service}' group by name"
                }
            ]
        }
    ],
    "response":{
        "check":false,
        "segments": [
            {"name":"flows", "type":"object", "comment":"工作流列表", "checkAll":false, "props":[
                {"name":"id", "type":"string", "comment":"工作流id，转为字符串，因为js中long有精度损失"},
                {"name":"ver", "type":"int", "comment":"工作流版本，同一个工作流，可以有多个版本，没编辑一次，版本加1"},
                {"name":"name", "type":"string", "comment":"工作流名称"},
                {"name":"dispName", "type":"string", "comment":"显示名称"},
                {"name":"comment", "type":"string", "comment":"描述"}
            ]}
        ]
    }
},

{
    "name": "saveSteps",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "POST",
    "comment":"创建工作流的步骤，必须一次全部创建",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"comment", "type":"string", "must":true, "comment":"工作流描述"},
        {"name":"steps", "type":"object", "list":true, "min":1, "max":100, "comment":"需要按照step升序排列", "props":[
            {"name":"type", "type":"string", "must":true, "len":1, "options":["O","M"], "comment":"O-ne:单人,M-ulti:会签"},
            {"name":"name", "type":"string", "must":true, "comment":"步骤名称"},
            {"name":"comment", "type":"string", "must":false, "default":"", "max":120, "comment":"描述"},
            {"name":"ext", "type":"string", "must":true, "comment":"扩展内容定义，形如:{a:{t:'n',n:'测试'},b:{t:'s',n:'测试'}}"}
        ]}
    ],

    "process" : [
        {
            "name" : "save_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select id as flow,dispName,max(ver)+1 as nextVer,callback from flow 
                           where service='@{service}' and name='@{name}'"
                },
                {
                    "name":"is_flow_used",
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select exists(select * from flowlog where flow=@[!flow]) as used"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "withMeta" : "each",
                    "ignores":[2001],
                    "sql":"select step,type,name,ext from step
                         where flow=@[!flow] order by step asc"
                },
                {
                    "name":"save_steps",
                    "isWrite":true,
                    "comment":"如果step发生了变更，且flow使用过，则将flow的ver加1，生成新的flow，
                    这样不影响已使用过的工作流定义；如果没有使用过，则直接清除原有的step定义，然后添加新的定义",
                    "sql":"js:var sql=[];
                        var flow='@[!flow]';
                        var srvSteps=@[!steps];
                        var paraSteps=@{steps};
                        if(@[!used]==0) {
                            sql.push('delete from step where flow=',flow,';');
                            sql.push(`update flow set cmt='@{comment}' where id=`,flow,';');
                        } else if(srvSteps.length>0) {
                            var changed=srvSteps.length!=paraSteps.length;
                            if(!changed) {
                                for(var i in srvSteps) {
                                    var s=srvSteps[i];
                                    var p=paraSteps[i];
                                    if(s.type!=p.type||s.ext!=p.ext||s.name!=p.name) {
                                        changed=true;
                                        break;
                                    }
                                }
                            }
                            if(changed){
                                flow=@{SEQUENCE|'flow',i};
                                sql.push(`insert into flow(id,ver,service,name,dispName,callback,cmt) values(`,
                                        flow,`,@[!nextVer],'@{service}','@{name}','@[!dispName]','@[!callback]','@{comment}');`);
                            }
                        }
                        sql.push('replace into step(flow,step,type,name,cmt,ext) values');
                        for(var i in paraSteps) {
                            if(i>0) {sql.push(',');}
                            var s=paraSteps[i];
                            sql.push('(',flow,',',i,`,'`,s.type,`','`,s.name,`','`,s.comment,`','`,s.ext,`')`);
                        }
                        DB.sql(sql.join(''));
                    "
                }
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "info",
    "visibility" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"根据工作流id，查询工作流步骤定义。在业务中使用",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"get_flow_name",
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select name,dispName,cmt 'comment',callback from flow where id=@{flowid}"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "withMeta":"each",
                    "sql":"select step,type,name,ext,cmt 'comment' from step
                      where flow=@{flowid} order by step asc"
                }
            ]
        }
    ],
    
    "response":{
        "check":false, 
        "segments":[
            {"name":"dispName", "type":"string", "comment":"工作流名称"},
            {"name":"comment", "type":"string", "comment":"工作流描述"},
            {"name":"callback", "type":"string", "comment":"回调接口"},
            {"name":"steps", "type":"object", "list":true, "checkAll":false, "props":[
                {"name":"step", "type":"int", "comment":"步骤编号，从0开始，最大100"},
                {"name":"type", "type":"string", "comment":"类型，O:单人,M:会签"},
                {"name":"name", "type":"string", "comment":"名称"},
                {"name":"comment", "type":"string", "comment":"描述"},
                {"name":"ext", "type":"string", "comment":"扩展"}
            ]}
        ]
    }    
},

{
    "name": "getInfoByName",
    "visibility" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"根据工作流名称，查询工作流步骤定义",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "multi":false,
                    "withMeta" : "each",
                    "merge":true,
                    "sql":"select id flowid,dispName,callback,cmt 'comment' from flow
                           where service='@{service}' and name='@{name}'
                           order by ver desc limit 1"
                },
                {
                    "name":"get_max_step",
                    "multi":false,
                    "merge":true,
                    "withMeta" : "each",
                    "sql":"select max(step) maxStep from step where flow=@[!flowid]"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "withMeta":"each",
                    "sql":"select step,type,name,ext,cmt 'comment' from step
                      where flow=@[!flowid] order by step asc"
                }
            ]
        }
    ],
    
    "response":{
        "check":false, 
        "segments":[
            {"name":"flowid", "type":"string", "comment":"工作流id"},
            {"name":"dispName", "type":"string", "comment":"工作流名称"},
            {"name":"callback", "type":"string", "comment":"回调接口"},
            {"name":"comment", "type":"string", "comment":"工作流描述"},
            {"name":"steps", "type":"object", "list":true, "checkAll":false, "props":[
                {"name":"step", "type":"int", "comment":"步骤编号，从0开始，最大100"},
                {"name":"type", "type":"string", "comment":"类型，O:单签,M:会签"},
                {"name":"name", "type":"string", "comment":"名称"},
                {"name":"comment", "type":"string", "comment":"描述"},
                {"name":"ext", "type":"string", "comment":"扩展"}
            ]}
        ]
    }    
},

{
    "name": "stepSigners",
    "visibility" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"流程中某一步的默认权签人",
    
    "request": [
        {"name":"flowid", "type":"long", "must":true, "comment":"工作流id"},
        {"name":"step", "type":"int", "must":true, "min":0, "comment":"步骤"}
    ],

    "process" : [
        {
            "name" : "get_signers",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"signers",
                "multi":true,
                "withMeta" : "none",
                "oneCol":true,
                "sql":"select account from signer where flow=@{flowid} and step=@{step}"
            }]
        }
    ]
},

{
    "name": "setSigner",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "GET",
    "comment":"给流程中某一步设置默认权签人",
    
    "request": [
        {"name":"flowid", "type":"long", "must":true, "comment":"工作流id"},
        {"name":"step", "type":"int", "must":true, "min":0, "comment":"步骤"},
        {"name":"account", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"权签人帐号"}
    ],

    "process" : [
        {
            "name" : "set_signer",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "replace into signer(flow,step,account) values(@{flowid},@{step},'@{account}')"
            ]
        }
    ]
},

{
    "name": "removeSigner",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "GET",
    "comment":"给流程中某一步设置默认权签人",
    
    "request": [
        {"name":"flowid", "type":"long", "must":true, "comment":"工作流id"},
        {"name":"step", "type":"int", "must":true, "min":0, "comment":"步骤"},
        {"name":"account", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"权签人帐号"}
    ],

    "process" : [
        {
            "name" : "remove_signer",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "delete from signer where flow=@{flowid} and step=@{step} and account='@{account}'"
            ]
        }
    ]
},

{
    "name": "lastStep",
    "visibility" : "private",
    "tokenChecker":"OAUTH",
    "method": "GET",
    "comment":"获取最后一步的step编号，用于判断是否为最后一步",
    
    "request": [
        {"name":"flowid", "type":"long", "must":true, "comment":"工作流id"}
    ],

    "process" : [
        {
            "name" : "get_max_step_no",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "multi":false,
                "withMeta" : "each",
                "merge":true,
                "sql":"select max(step) as lastStep from step where flow=@{flowid}"
            }]
        }
    ]
}
]