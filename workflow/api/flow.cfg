[
{
    "name": "create",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "POST",
    "comment":"创建最基本的工作流，一般在服务的init中调用",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"dispName", "type":"string", "must":true, "min":1, "max":100, "comment":"显示名称，显示在我的待办中"},
        {"name":"callback", "type":"string", "must":true, "regular":"^/.{1,120}$", "comment":"状态变更时的回调接口"},
        {"name":"cmt", "type":"string", "must":false, "default":"", "min":1, "max":100, "comment":"描述"}
    ],

    "process" : [
        {
            "name": "get_flow",
            "type": "rdb",
            "db": "workflow",
            "sqls":[{
                "multi":false,
                "metas":"each",
                "merge":true,
                "ignores":["NOT_EXISTS"],
                "sql":"select id flowId from flow
                    where service='@{#tokenCaller}' and name='@{name}'
                    order by ver desc
                    LIMIT 1" //如果存在，只返回最新版本
            }]
        },
        {
            "name": "get_flow_id",
            "type": "var",
            "vars":{
                "flowId":"@{CONDITION|!flowId, 'o.!=', null, !flowId, `@{SEQUENCE|'flow'}`}"
            }
        },
        {
            "name" : "create_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "insert or ignore into flow(id,service,ver,maxStep,name,dispName,callback,cmt) 
                 values(@{flowId},'@{#tokenCaller}',0,1,'@{name}','@{dispName}','@{callback}','@{cmt}')",
                //默认创建只有两个步骤的工作流
                "insert or ignore into step(flow,step,type,name,cmt,ext) values
                 (@{flowId},0,'S','create_@{name}','@{dispName}','{}'),
                 (@{flowId},1,'S','confirm_@{name}','@{dispName}','{}')"
            ]
        }
    ]
},

{
    "name": "init",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "POST",
    "commebt":"启动或OM初始化时初始化流程，如果已存在，则不执行",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"dispName", "type":"string", "must":true, "min":1, "max":100, "comment":"显示名称，显示在我的待办中"},
        {"name":"callback", "type":"string", "must":true, "regular":"^/.{1,120}$", "comment":"状态变更时的回调接口"},
        {"name":"cmt", "type":"string", "must":false, "default":"", "min":1, "max":100, "comment":"描述"},
        {"name":"steps", "type":"object", "list":true, "min":1, "max":100, "comment":"需要按照step升序排列", "props":[
            {"name":"type", "type":"string", "must":true, "len":1, "options":["S","M"], "comment":"S-ingle:单人,M-ulti:会签"},
            {"name":"signer", "type":"string", "must":false, "default":"", "comment":"默认权签人"},
            {"name":"name", "type":"string", "must":true, "comment":"步骤名称"},
            {"name":"cmt", "type":"string", "must":false, "default":"", "max":120, "comment":"描述"},
            {"name":"ext", "type":"string", "must":true, "comment":"扩展定义，形如:{a:{t:'n',n:'测试'},b:{t:'s',n:'测试'}}，显示工作流时自己解释"}
        ]}
    ],

    "process" : [
        {
            "name": "get_flow",
            "type": "rdb",
            "db": "workflow",
            "sqls":[{
                "multi":false,
                "metas":"each",
                "merge":true,
                "ignores":["NOT_EXISTS"],
                "sql":"select id flowId from flow
                    where service='@{#tokenCaller}' and name='@{name}'
                    order by ver desc
                    LIMIT 1" //如果存在，只返回最新版本
            }]
        },
        {
            "name": "get_flow_id",
            "type": "var",
            "vars":{
                "flowId":"@{CONDITION|!flowId, 'o.!=', null, !flowId, `@{SEQUENCE|'flow'}`}"
            }
        },
        {
            "name": "create_flow",
            "type": "rdb",
            "when": "@{CONDITION|!flowId,'o.==',null}", //不存在才创建，存在时不会新建版本
            "db": "workflow",
            "sqls":[
                "insert into flow(id,service,ver,maxStep,name,dispName,callback,cmt) values
                 (@{flowId},'@{#tokenCaller}',0,@{SIZE|steps}-1,'@{name}','@{dispName}','@{callback}','@{cmt}')",
                "insert into step(flow,step,type,signer,name,cmt,ext) values
                 @{FOR|steps,`,`, `(@{flowId},`, i, `,'`, e.type, `','`, e.signer, `','`,
                  e.name, `','`, e.cmt,`','`, e.ext,`')`}"
            ]
        }
    ],
    "response":[]
},

{
    "name": "remove",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "DELETE",
    "comment":"删除工作流",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"}
    ],

    "process" : [
        {
            "name" : "get_flow_versions",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"flows",
                "multi":true,
                "merge":false,
                "metas":"oneCol",
                "sql":"select id from flow
                   where service='@{#tokenCaller}' and name='@{name}'"
            }]
        },
        {
            "name" : "check_if_flow_used",
            "type" : "dataexists",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller}",
			"expect":false,
			"errorCode":"DATA_WRONG",
			"errorInfo":"workflow have been used",
            "sql":"select * from flowbase where flow in(@{LIST|!flows,''})"
        },
        {
            "name" : "remove_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "delete from step where flow in(@{LIST|!flows,''})",
                "delete from flow where id in(@{LIST|!flows,''})"
            ]
        }
    ],
    
    "response":[]
},
{
    "name": "removeById",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "DELETE",
    "comment":"删除工作流",

    "request": [
        {"name":"id", "type":"int", "must":true, "min":0, "comment":"工作流id"}
    ],

    "process" : [
        {
            "name" : "check_if_flow_used",
            "type" : "dataexists",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller}",
            "expect":false,
            "errorCode":"DATA_WRONG",
            "errorInfo":"workflow have been used",
            "sql":"select * from flowbase where flow=@{id}"
        },
        {
            "name" : "remove_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "delete from step where flow=@{id}",
                "delete from flow where id=@{id}"
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "modify",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "PUT",
    "comment":"改变所有版本flow的名称及显示名称",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"dispName", "type":"string", "must":true, "min":1, "max":100,"comment":"显示名称，显示在我的待办中"},
        {"name":"callback", "type":"string", "must":true, "regular":"^/.{1,120}$", "comment":"状态变更时的回调接口"},
        {"name":"cmt", "type":"string", "must":true, "min":1, "max":100, "comment":"描述"}
    ],

    "process" : [
        {
            "name" : "modify_flow",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "update flow set cmt='@{cmt}',
                 dispName='@{dispName}',
                 callback='@{callback}'
                 where service='@{#tokenCaller}' and name='@{name}'"
            ]
        }
    ]
},

{
    "name": "list",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"}
    ],

    "process" : [
        {
            "name" : "list_flows",
            "type" : "rdb",
            "db" : "workflow",
            "sqls" : [
                {
                    "name":"flows",
                    "multi":true,
                    "metas":"each",
                    "sql":"select id,max(ver) as ver,name,dispName,cmt
                          from flow where service='@{service}' group by name"
                }
            ]
        }
    ],
    "response":{
        "check":false,
        "segments": [
            {"name":"flows", "type":"object", "comment":"工作流列表", "checkAll":false, "props":[
                {"name":"id", "type":"string", "comment":"工作流id，转为字符串，因为js中long有精度损失"},
                {"name":"ver", "type":"int", "comment":"工作流版本，同一个工作流，可以有多个版本，没编辑一次，版本加1"},
                {"name":"name", "type":"string", "comment":"工作流名称"},
                {"name":"dispName", "type":"string", "comment":"显示名称"},
                {"name":"cmt", "type":"string", "comment":"描述"}
            ]}
        ]
    }
},

{
    "name": "saveSteps",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "POST",
    "comment":"创建工作流的步骤，必须一次全部创建",
    
    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"steps", "type":"object", "list":true, "minSize":1, "maxSize":99, "comment":"需要按照step升序排列", "props":[
            {"name":"type", "type":"string", "must":true, "len":1, "options":["S","M"], "comment":"S-ingle:单人,M-ulti:会签"},
            {"name":"signer", "type":"string", "must":false, "default":"", "comment":"默认权签人"},
            {"name":"name", "type":"string", "must":true, "comment":"步骤名称"},
            {"name":"cmt", "type":"string", "must":false, "default":"", "max":120, "comment":"描述"},
            {"name":"ext", "type":"string", "must":true, "comment":"扩展内容定义，形如:{a:{t:'n',n:'测试'},b:{t:'s',n:'测试'}}"}
        ]}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "multi":false,
                "metas":"each",
                "merge":true,
                "sql":"select id as flowId,dispName,max(ver)+1 as nextVer,callback,cmt from flow 
                       where service='@{#tokenCaller}' and name='@{name}'"
            }]
        },
        {
            "name" : "is_flow_used",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller}",
            "sqls":[{
                "name":"is_flow_used",
                "multi":false,
                "metas":"each",
                "merge":true,
                "sql":"select exists(select * from flowbase where flow=@{!flowId}) as used"
            }]
        },
        {
            "name" : "get_flow_step_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"steps",
                "multi":true,
                "metas": "each",
                "when":"@{CONDITION|!used, 'i.>', 0}", //未使用不必查，直接删除即可
                "ignores":["NOT_EXISTS"],
                "sql":"select step,type,name,ext,signer from step
                     where flow=@{!flowId} order by step asc"
            }],
            "onSuccess":"var srvSteps=@[IFNULL|!steps, '[]', obj];
                var len=srvSteps.length;
                var changed=0;
                if(len>0) { //使用过，且步骤发生变化，则生成新版本
                    var paraSteps=@{steps};
                    if(len!=paraSteps.length) {
                        changed = 1;
                    } else {//逐行比较类型、扩展、signer及名称
                        for(var i=0; i<len; i++) {
                            var s=srvSteps[i];
                            var p=paraSteps[i];
                            if(s.type!=p.type||s.ext!=p.ext
                               ||s.name!=p.name||s.signer!=p.signer) {
                                changed=1;
                                break;
                            }
                        }
                    }
                }
                Mesh.success({\"changed\":changed});
            "
        },
        {
            "name": "set_flow_id",
            "type": "var",
            "vars": {
                //步骤没变化，则在原有基础上修改
                //发生了改变，需要生成新版本的工作流，所以产生一个新id
                "flowId":"@{CONDITION|!changed, 'i.==', 0, !flowId, `@{SEQUENCE|i,'flow'}`}"
            }
        },
        {
            "name" : "save_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "when":"@{CONDITION|!used, 'i.==', 0}", //未使用
                    "sql":"delete from step where flow=@{!flowId}" //删除原来的步骤定义
                },
                {
                    "when":"@{CONDITION|!changed, 'i.==', 0}", //使用过且变化了
                    "sql":"insert into flow(id,ver,maxStep,service,name,dispName,callback,cmt)
                     values(@{flowId},@{!nextVer},@{SIZE|steps}-1,'@{#tokenCaller}',
                     '@{name}','@{!dispName}','@{!callback}','@{!cmt}')" //生成新版本的工作流
                },
                "replace into step(flow,step,type,signer,name,cmt,ext) values
                 @{FOR|steps,`,`,`(@{flowId},`,i,`,'`,e.type,`','`,e.signer,`','`,e.name,
                 `','`,e.cmt,`','`,e.ext,`')`}" //保存工作流步骤
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "info",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"根据工作流id，查询工作流步骤定义。在业务中使用",

    "request": [
        {"name":"flowid", "type":"int", "must":true, "min":0, "comment":"工作流id"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"get_flow_name",
                    "multi":false,
                    "metas":"each",
                    "merge":true,
                    "sql":"select name,dispName,cmt,callback from flow where id=@{flowid}"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "metas":"each",
                    "sql":"select step,type,name,ext,signer,cmt from step
                      where flow=@{flowid} order by step asc"
                }
            ]
        }
    ],
    
    "response":{
        "check":false, 
        "segments":[
            {"name":"dispName", "type":"string", "comment":"工作流名称"},
            {"name":"cmt", "type":"string", "comment":"工作流描述"},
            {"name":"callback", "type":"string", "comment":"回调接口"},
            {"name":"steps", "type":"object", "list":true, "checkAll":false, "props":[
                {"name":"step", "type":"int", "comment":"步骤编号，从0开始，最大100"},
                {"name":"type", "type":"string", "comment":"类型，S:单人,M:会签"},
                {"name":"signer", "type":"string", "comment":"权签人"},
                {"name":"name", "type":"string", "comment":"名称"},
                {"name":"cmt", "type":"string", "comment":"描述"},
                {"name":"ext", "type":"string", "comment":"扩展"}
            ]}
        ]
    }  
},

{
    "name": "infos",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"根据工作流id列表，查询工作流步骤定义",

    "request": [
        {"name":"flowids", "type":"string", "must":true, "regular":"^[^()\\\"']+$", "comment":"工作流id列表"}
    ],

    "process" : [
        {
            "name" : "get_flows_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"flows",
                    "multi":true,
                    "metas":"each",
                    "merge":false,
                    "sql":"select id,name,dispName,cmt
                         from flow where id in(@{flowids})"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "metas":"each",
                    "sql":"select flow,step,type,signer,name,ext,cmt from step
                      where flow in(@{flowids})"
                }
            ]
        }
    ] 
},

{
    "name": "getInfoByName",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"根据工作流名称，查询工作流步骤定义，只返回当前最新版本号的定义",

    "request": [
        {"name":"service", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"服务名称"},
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "sql":"select id flowid,dispName,callback,cmt from flow
                           where service='@{service}' and name='@{name}'
                           order by ver desc limit 1"
                },
                {
                    "name":"get_max_step",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select max(step) maxStep from step where flow=@[!flowid]"
                },
                {
                    "name":"steps",
                    "multi":true,
                    "metas":"each",
                    "sql":"select step,type,name,ext,signer,cmt from step
                      where flow=@[!flowid] order by step asc"
                }
            ]
        }
    ],
    
    "response":{
        "check":false, 
        "segments":[
            {"name":"flowid", "type":"string", "comment":"工作流id"},
            {"name":"dispName", "type":"string", "comment":"工作流名称"},
            {"name":"callback", "type":"string", "comment":"回调接口"},
            {"name":"cmt", "type":"string", "comment":"工作流描述"},
            {"name":"steps", "type":"object", "list":true, "checkAll":false, "props":[
                {"name":"step", "type":"int", "comment":"步骤编号，从0开始，最大100"},
                {"name":"type", "type":"string", "comment":"类型，S:单签,M:会签"},
                {"name":"signer", "type":"string", "comment":"权签人"},
                {"name":"name", "type":"string", "comment":"名称"},
                {"name":"cmt", "type":"string", "comment":"描述"},
                {"name":"ext", "type":"string", "comment":"扩展"}
            ]}
        ]
    }
}
]