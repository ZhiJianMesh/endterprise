[
{
    "name": "create",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "POST",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键，比如`123`"},
        {"name":"descr", "type":"string", "must":true, "max":100, "comment":"描述"},
        {"name":"creator", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"创建人帐号"},
        {"name":"nextSigners", "type":"string", "list":true, "must":true, "minSize":1, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "convert":{"code":"NOT_EXISTS", "to":10111, "info":"workflow not defined"},
            "sqls":[
                {
                    "name":"get_flow_and_step_info",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "comment":"取当前版本号最大的工作流定义，以及第一步的定义",
                    "sql":"select f.id as flowid, f.ver maxVer,
                        f.dispName flowName,f.maxStep,f.confirm,
                        s.type,s.ext,s.name stepName,s.cmt
                         from flow f,step s
                      where f.service='@{#tokenCaller}' and f.name='@{name}'
                        and s.flow=f.id and s.step=1
                      order by f.ver desc limit 1"
                },
                {
                    "name":"get_step0_info",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "sql":"select name stepName0,cmt cmt0 from step
                      where flow=@[!flowid] and step=0"
                }
            ],
            "onSuccess" : "
                var signers=@{nextSigners};
                if('@{!type}'=='M') {//会签，权签人不能包括自己，因为下一步要做主签人
                    var ok=true;
                    for(var i in signers) {
                        if(signers[i]=='@{creator}') {
                            ok=false;
                            break;
                        }
                    }
                    if(!ok || signers.length==0) {
                        Mesh.error(RetCode.WRONG_PARAMETER, `@{creator} can't be a signer`);
                    } else {
                        Mesh.success({});
                    }
                } else if(signers.length!=1) {//单签，只能一个权签人
                    Mesh.error(RetCode.WRONG_PARAMETER, 'only 1 signer permitted');
                } else {
                    Mesh.success({});
                }
            "
        },
        {
            "name":"call_service_reject",
            "comment":"调用当前步骤的回调，通知业务系统改变当前步骤，或给用户赋权，否则工作流中的用户可能看不到数据库",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{#tokenCaller}",
            "url":"@{!confirm}",
            "parameters":"{
                \"flowid\":@{!flowid},
                \"ext\":\"@{!ext}\",
                \"step\":0,
                \"maxStep\":@{!maxStep},
                \"act\":\"create\",
                \"signers\":@{JSON|nextSigners,`[]`,0},
                \"actor\":\"@{creator}\",
                \"did\":\"@{did}\"
            }"
        },
        {
            "name" : "create_flow_log",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller,did}",
            //使用replace，可重入，如果前面创建过工作流，
            //但是后继操作失败，可以再次创建工作流基本信息及工作流日志
            "sqls":[
                {
                    "comment":"创建工作流的基本信息",
                    "sql":"replace into flowbase(flow,did,creator,step,descr) 
                        values(@{!flowid},'@{did}','@{creator}',1,'@{descr}')"
                },
                {
                    "comment":"下一步单签，给权签人推送消息",
                    "when":"@{CONDITION|!type,'s.!=','M'}",
                    "sql":"replace into flowlog(flow,did,step,result,turn,type,opinion,signer) values
                        @{FOR|nextSigners,``,`(@{!flowid},'@{did}',1,'I',0,'O','','`,e,`'),`}
                        (@{!flowid},'@{did}',0,'P',0,'O','','@{creator}')"
                },
                {
                    "comment":"下一步会签，给权签人推送从签消息，同时将creator设为主签人",
                    "when":"@{CONDITION|!type,'s.==','M'}",
                    "sql":"replace into flowlog(flow,did,step,result,turn,type,opinion,signer) values
                        @{FOR|nextSigners,``,`(@{!flowid},'@{did}',1,'I',0,'S','','`,e,`'),`}
                        (@{!flowid},'@{did}',0,'P',0,'O','','@{creator}'),
                        (@{!flowid},'@{did}',1,'I',0,'M','','@{creator}')"
                }
            ]
        },
        {
            "name" : "record_task",
            "type" : "rdb",
            "db":"task",
            "sqls":[
                //第0步也需要插入任务，否则回退到第0步时，任务列表中没有任务
                "replace into task(flow,did,step,signer,actor,result,cmt) values
                 (@{!flowid},'@{did}',0,'@{creator}','@{creator}',
                 'P','@{!flowName}:@{!stepName0}-@{!cmt0}')",

                "replace into task(flow,did,step,signer,actor,result,cmt) values
                 @{FOR|nextSigners,`,`, `(@{!flowid},'@{did}',1,'`, e,
                 `','@{creator}','I','@{!flowName}:@{!stepName}-@{!cmt}')`}",
                {
                    "when":"@{CONDITION|!type,'s.==','M'}",
                    "comment":"会签的情况，当前责任人作为下一步的主签",
                    "sql":"replace into task(flow,did,step,signer,actor,result,cmt) values
                        (@{!flowid},'@{did}',1,'@{creator}','@{creator}','I','@{!flowName}:@{!stepName}-@{!cmt}')"
                }
            ]
        }
    ],
    
    "tailRuntype":"FAIL|IGNORE", //失败时执行，返回process的结果
    "tailProcess":[{
        "name":"remove_flow_log",
        "type":"rdb",
        "db":"log",
        //发生错误时才会设置#errorHandle，正常情况下#errorHandle为空
        "when":"@{CONDITION|#errorHandle,'s.==','record_task'}",
        "sqls":[
            "delete from flowbase where flow=@{!flowid} and did=@{did}",
            "delete from flowlog where flow=@{!flowid} and did=@{did}"
        ]
    }],
    
    "response":[
        {"name":"flowid", "type":"int", "comment":"工作流id"},
        {"name":"name", "type":"string", "comment":"工作流显示名称"}
    ]
},

{
    "name": "confirm",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"非会签步骤的确认，提交给下一步处理。如果下一步是会签，则nextSigners应为多个",

    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"服务名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"},
        {"name":"nextSigners", "list":true, "type":"string", "must":false, "default":[], "min":0, "regular":"[0-9a-zA-Z_]{1,30}", "default":[], "comment":"下一步权签人，如果是最后一步，可以不提供"}
    ],

    "process" : [
        {
            "name" : "get_flow_and_step_data",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "convert":{"code":"NOT_EXISTS", "to":"NO_RIGHT", "info":"not authorized"},
            "sqls":[
                {
                    "name":"get_step_no",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select step,step+1 nextStep from flowbase
                        where flow=@{flowid} and did='@{did}'"
                },
                {
                    "name":"get_cur_step_turn",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    //查出待处理意见的最大轮数
                    "sql":"select max(turn) turn
                     from flowlog where flow=@{flowid} and did='@{did}'
                      and step=@[!step] and signer='@{#tokenAcc}' and result='I'"
                }
            ]
        },
        {
            "name" : "get_flow_definition",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"flow_definition",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select F.maxStep,S.ext,F.service,F.confirm,F.dispName flowName
                     from flow F,step S
                     where F.id=@{flowid} and S.flow=@{flowid} and S.step=@{!step}"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!step,'i.<=',!maxStep}"
                "errorCode":"DATA_WRONG",
                "errorInfo":"step must <= maxStep"
            }
        },
        {
            "name" : "get_nextstep_definition",
            "type" : "rdb",
            //不能与get_flow_definition合并，因为when中不能使用上一个sql的返回
            "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}", //未结束
            "db":"workflow",
            "sqls":[{
                "name":"nextstep_info",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select type,name stepName,cmt
                 from step where flow=@{flowid} and step=@{!nextStep}"
            }],
            "onSuccess" : "(function(){
                if(@{!step}<@{!maxStep}) {
                    var signers=@{nextSigners};
                    if('@{!type}'=='M') {//下一步会签，权签人不能有自己，因为要作主签人
                        if(signers.length==0) {
                            return Mesh.error(10110, `singers can't be empty`);
                        }
                        for(var i in signers) {
                            if(signers[i]=='@{#tokenAcc}') {
                                return Mesh.error(10108, `@{#tokenAcc} can't be a signer`);
                            }
                        }
                    } else if(signers.length!=1) {
                        return Mesh.error(10109, 'only 1 signer permitted');
                    }
                }
                return Mesh.success({});
            })()"
        },
        {
            "name" : "check_others_opinion",
            //会签，需要检查其他从签人的意见，所有从签都发表过意见了，才可以往下走
            "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}
                 && @{CONDITION|!type,'s.==','M'}",
            "type" : "dataexists",
            "db":"log",
            "expect":false,
            "sharding":"@{ABSHASH|service,did}",
            "errorCode":10104,
            "errorInfo":"sign not over",
            "sql":"select * from flowlog
                 where flow=@{flowid} and did='@{did}'
                  and step=@{!step} and type='S'
                  and result='I'" //拒绝与赞同都可以，最终由主签人决定
        },
        {
            "name":"call_service_confirm",
            "comment":"调用当前步骤的回调，调用成功后，再更新本地数据",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{!service}",
            "url":"@{!confirm}",
            "parameters":"{
                \"flowid\":@{flowid},
                \"maxStep\":@{!maxStep},
                \"step\":@{!step},
                \"act\":\"confirm\",
                \"opinion\":\"@{opinion}\",
                \"ext\":\"@{!ext}\",
                \"signers\":@{JSON|nextSigners,`[]`,``},
                \"actor\":\"@{#tokenAcc}\",
                \"did\":\"@{did}\"
            }"
        },        
        {
            "name" : "save_opinion",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[
                {
                    "comment":"记录当前步骤的意见",
                    "sql":"update flowlog set
                         opinion='@{opinion}',
                         result='P'
                      where flow=@{flowid} and did='@{did}'
                        and step=@{!step} and signer='@{#tokenAcc}'
                        and turn=@{!turn}"
                },
                {
                    "name" : "Mtasks_to_nextstep_signers",
                    "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}
                            &&@{CONDITION|!type,'s.==','M'}",
                    "comment":"如果下一步是会签，给当前处理人推送主签任务，给下一步所有处理人推送从签任务",
                    "sql":"insert into flowlog(flow,did,step,signer,result,turn,type)
                        select @{flowid},'@{did}',@{!nextStep},'@{#tokenAcc}','I',ifnull(max(turn),-1)+1,'M'
                          from flowlog
                         where flow=@{flowid} and did='@{did}'
                           and step=@{!nextStep} and signer='@{#tokenAcc}'"
                },
                {
                    "name" : "Stasks_to_nextstep_signers",
                    "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}
                            &&@{CONDITION|!type,'s.==','M'}",
                    "comment":"如果下一步是会签，给下一步所有处理人推送从签任务",
                    "sql":"rs:@{FOR|nextSigners,`;`,
                        `insert into flowlog(flow,did,step,signer,result,turn,type)
                         select @{flowid},'@{did}',@{!nextStep},'`, e,
                            `','I',ifnull(max(turn),-1)+1,'S' from flowlog
                          where flow=@{flowid} and did='@{did}' and step=@{!nextStep}
                            and signer='`,e,`'`}"
                },
                {
                    "name" : "Otasks_to_nextstep_signers",
                    "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}
                            &&@{CONDITION|!type,'s.!=','M'}",
                    "comment":"如果是单签，给下一步所有处理人推送任务，nextSigners只有一个帐号",
                    "sql":"insert into flowlog(flow,did,step,signer,result,turn,type)
                         select @{flowid},'@{did}',@{!nextStep},'@{ELEMENT|nextSigners,0}','I',
                         ifnull(max(turn),-1)+1,'O' from flowlog
                          where flow=@{flowid} and did='@{did}' and step=@{!nextStep}
                            and signer='@{ELEMENT|nextSigners,0}'"
                },
                {
                    "comment":"更新工作流步骤，超过最后一步不能更新",
                    "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}",
                    "sql":"update flowbase set step=@{!nextStep}
                         where flow=@{flowid} and did='@{did}'"
                }
            ]
        },
        {
            "name" : "remove_task_when_over",
            "type" : "rdb",
            "db":"task",
            "when":"@{CONDITION|!step,'i.==',!maxStep}",
            "sqls":[ //工作流结束时清除任务记录，在服务器重启时可以缩减记录数
                "delete from task where flow=@{flowid} and did='@{did}'"
            ]
        },
        {
            "name" : "record_task_for_signers",
            "type" : "rdb",
            "db":"task",
            "when":"@{CONDITION|!step,'i.<',!maxStep}",
            //更新当前步骤责任人的任务状态为完成，并为下一步责任人添加任务。
            //如果是最后一步，则没有必要推送任务
            "sqls":[
                "update task set result='P'
                  where flow=@{flowid} and did='@{did}'
                    and step=@{!step} and signer='@{#tokenAcc}'",

                "replace into task(flow,did,step,signer,actor,result,cmt) values
                @{FOR|nextSigners,`,`, `(@{flowid},'@{did}',@{!nextStep},'`, e,
                 `','@{#tokenAcc}','I','@{!flowName}:@{!stepName}-@{!cmt}')`}",
                
                {
                    "when":"@{CONDITION|!type,'s.==','M'}",
                    "comment":"会签的情况，当前责任人作为下一步的主签",
                    "sql":"replace into task(flow,did,step,signer,actor,result,cmt) values
                    (@{flowid},'@{did}',@{!nextStep},'@{#tokenAcc}',
                     '@{#tokenAcc}','I','@{!flowName}:@{!stepName}-@{!cmt}')"
                }
            ]
        }
    ],
    
    "tailRuntype":"FAIL|IGNORE", //失败时执行，返回process的结果
    "tailProcess":[{
        "name":"roll_back",
        "type":"rdb",
        "db":"log",
        //record_task与save_opinion不在一个事务中
        //所以record_task失败时要回退工作流状态，此时从签会导致出现多余的处理记录
        "when":"@{CONDITION|#errorHandle,'s.==','record_task'}",
        "sqls":[
            "update flowbase set step=@{!step} where flow=@{flowid} and did='@{did}'",
            "update flowlog set result='I' where flow=@{flowid} and did='@{did}'
                and step=@{!step} and signer='@{#tokenAcc}' and turn=@{!turn}",
            
            "delete from flowlog where flow=@{flowid} and did='@{did}'
                and step=@{!nextStep} and signer='@{#tokenAcc}'
                and turn=(select max(turn) from flowlog
                 where flow=@{flowid} and did='@{did}'
                 and step=@{!nextStep} and signer='@{#tokenAcc}')"
        ]
    }],
    
    "response":[
        {"name":"nextStep", "type":"int", "comment":"下一步编号"},
        {"name":"maxStep", "type":"int", "comment":"最大编号"}
    ]
},

{
    "name": "reject",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"拒绝(会签与非会签都可以)，将step减一，并给上一步的权签人推送消息，
            在业务端，需要去除当前步骤权签人的权限",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"服务名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键，形如:`id:\"123\"`"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"}
    ],

    "process" : [
        {
            "name" : "get_cur_step",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[{
                "name":"flow_step",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select step,step-1 foreStep from flowbase
                     where flow=@{flowid} and did='@{did}'"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!step,'i.>',0}",
                "errorCode":10112,
                "errorInfo":"step must be >0"
            }
        },
        {
            "name" : "get_flow_definition",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"flow_definition",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select f.service,f.reject,f.maxStep,s.ext from flow f,step s
                 where f.id=@{flowid} and s.flow=@{flowid} and s.step=@{!step}"
            }]
        },
        {
            "name":"call_service_reject",
            "comment":"调用拒绝的回调，服务中需要去除当前步骤权签人的权限",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{!service}",
            "url":"@{!reject}",
            "parameters":"{
                \"flowid\":@{flowid},
                \"step\":@{!step},
                \"maxStep\":@{!maxStep},
                \"act\":\"reject\",
                \"ext\":\"@{!ext}\",
                \"signers\":[],
                \"actor\":\"@{#tokenAcc}\",
                \"opinion\":\"@{opinion}\",
                \"did\":\"@{did}\"
            }"
        },
        {
            "name" : "update_flow_log",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[
                {
                    "comment":"更新步骤",
                    "sql":"update flowbase set step=@{!foreStep}
                         where flow=@{flowid} and did='@{did}'"
                },
                {
                    "comment":"获取当前步骤的最大turn",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select max(turn) maxTurn from flowlog
                      where flow=@{flowid} and did='@{did}'
                        and step=@{!step} and signer='@{#tokenAcc}'"
                },
                {
                    "comment":"记录当前步骤的意见",
                    "sql":"update flowlog set opinion='@{opinion}',result='R'
                      where flow=@{flowid} and did='@{did}'
                        and step=@{!step} and signer='@{#tokenAcc}'
                        and turn=@[!maxTurn]"
                },
                {
                    "comment":"删除所有从签的任务",
                    "sql":"delete from flowlog where flow=@{flowid} and did='@{did}'
                     and step=@{!step} and type='S'"
                },
                {
                    "comment":"给上一步的所有处理人推送新任务",
                    "sql":"insert into flowlog(flow,did,step,signer,result,turn,type)
                     select flow,did,step,signer,'I',max(turn)+1,type from flowlog
                      where flow=@{flowid} and did='@{did}' and step=@{!foreStep}
                      group by signer"
                },
                {
                    //查询前一步骤权签人，用于重新推送任务
                    "name":"signers",
                    "multi":true,
                    "merge":false,
                    "metas":"oneCol",
                    "ignores":["NOT_EXISTS"],
                    "sql":"select DISTINCT signer from flowlog
                            where flow=@{flowid}
                              and did='@{did}' and step=@{!foreStep}"
                }
            ]
        },
        {
            "name" : "restart_task_for_fore_signers",
            "type" : "rdb",
            "db":"task",
            "sqls":[
                //先删除当前步骤的任务
                "delete from task where flow=@{flowid} and did=@{did}
                  and step=@{!step} and signer='@{#tokenAcc}'",

                //重启后，上一步责任人在任务列表中又可以看到任务
                "update task set result='I'
                  where flow=@{flowid} and did=@{did}
                    and step=@{!foreStep} and signer in(@{LIST|!signers,`'`})"
            ]
        }
    ],
    
    "response":[
        {"name":"foreStep", "type":"int", "comment":"上一步编号"}
    ]
},

{
    "name": "counterSign",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"会签。处理完成后，不需要转到下一步，也不需要通知下一步处理人，
        而是等待主签人调用reject或confirm处理",

    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"服务名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键"},
        {"name":"result", "type":"string", "must":true, "len":1, "options":["P","R"], "comment":"P-ass:同意，2:R-eject不同意"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"}
    ],

    "process" : [
        {
            "name" : "update_flow_log",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[
                {
                    "name":"get_flow_step",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select step from flowbase
                         where flow=@{flowid} and did='@{did}'"
                },
                {
                    "comment":"记录当前步骤的意见，使用replace...select可以减少获取max(turn)的步骤",
                    "sql":"replace into flowlog(flow,did,step,signer,result,turn,type,opinion)
                     select @{flowid},'@{did}',@[!step],'@{#tokenAcc}','@{result}',max(turn),'S','@{opinion}'
                       from flowlog
                      where flow=@{flowid} and did='@{did}'
                        and signer='@{#tokenAcc}'"
                }
            ]
        },
        {
            "name" : "record_task",
            "type" : "rdb",
            "db":"task",
            "sqls":[
                "update task set result='@{result}'
                  where flow=@{flowid} and did='@{did}'
                    and step=@{!step} and signer='@{#tokenAcc}'"
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "remove",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "DELETE",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"},
        {"name":"actor", "type":"string", "must":false, "comment":"执行人，如果设置，则判断执行人必须为创建人"}
    ],

    "process" : [
        {
            "name" : "check_service",
            "type" : "dataexists",
            "db":"workflow",
            "expect":true,
            "errorCode":10111,
            "errorInfo":"invalid workflow",
            "sql":"select * from flow where id=@{flowid} and service='@{#tokenCaller}'"
        },
        {
            "name":"remove",
            "type":"rdb",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller,did}",
            "sqls":[
                {
                    "expected":{"num":1,"errorCode":"NO_RIGHT","errorInfo":"no right"},
                    "sql":"delete from flowbase where flow=@{flowid} and did='@{did}'
                        @{IFVALID|actor, `and creator='`, actor, `'`}"
                },
                "delete from flowlog where flow=@{flowid} and did='@{did}'"
            ]
        },
        {
            "name":"remove_task",
            "type":"rdb",
            "db":"task",
            "sqls":[
                "delete from task where flow=@{flowid} and did='@{did}'"
            ]
        }
    ],
    "response":[]
},

{
    "name": "removeByOwner",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "DELETE",
    "comment":"因为多个服务配合的问题，有些情况下，工作流创建成功了，但是业务数据创建失败，
        此时会出现'有工作流但无数据'的现象，这时可以删除工作流数据，或重启工作流",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"工作流所属服务的名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"}
    ],

    "process" : [
        {
            "name" : "check_service",
            "type" : "dataexists",
            "db":"workflow",
            "expect":true,
            "errorCode":10111,
            "errorInfo":"invalid workflow",
            "sql":"select * from flow where id=@{flowid} and service='@{service}'"
        },
        {
            "name" : "check_owner",
            "type" : "dataexists",
            "db":"log",
            "expect":true,
            "errorCode":"NO_RIGHT",
            "errorInfo":"not the creator",
            "sql":"select * from flowbase
              where flow=@{flowid} and did=@{did}
                and creator='@{#tokenAcc}'"
        },
        {
            "name" : "remove",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[
                "delete from flowbase where flow=@{flowid} and did='@{did}'",
                "delete from flowlog where flow=@{flowid} and did='@{did}'"
            ]
        },
        {
            "name" : "remove_task",
            "type" : "rdb",
            "db":"task",
            "sqls":[
                "delete from task where flow=@{flowid} and did='@{did}'"
            ]
        }
    ],
    "response":[]
},
{
    "name": "tasks",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"等待处理的工作流",

    "request": [
        {"name":"offset", "type":"int", "must":false, "default":0, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int", "must":false, "default":100000, "min":1, "default":10, "comment":"返回行数"}
    ],
    
    "process" : [
        {
            "name":"get_tasks",
            "type":"rdb",
            "db":"task",
            "sqls":[
                {
                    "name":"tasks",
                    "multi":true,
                    "metas" : "each",
                    "comment":"返回待我处理的工作流，如果是处理过的，显示的步骤信息为当前停留的步骤信息。
                        并选中其中update_time最大的一行记录，避免选中的行的result不正确，导致显示状态不正确",
                    "sql":"select flow,did,update_time as createAt,step,actor,cmt from task
                      where signer='@{#tokenAcc}' and result='I'
                      order by update_time desc
                      LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"total",
                    "multi":false,
                    "metas":"each",
                    "merge":true,
                    "sql":"select count(*) total from task
                        where signer='@{#tokenAcc}' and result='I'"
                }
            ]
        }
    ],
    "response":{
        "check":false,
        "segments":[
            {"name":"total", "type":"int"},
            {"name":"tasks", "type":"object", "list":true, "props":[
                {"name":"flow", "type":"int", "comment":"工作流id"},
                {"name":"did", "type":"string", "comment":"对应数据的id"},
                {"name":"createAt", "type":"string", "comment":"创建时间"},
                {"name":"step", "type":"int", "comment":"所处步骤"},
                {"name":"type", "type":"int", "comment":"步骤类型，0：单签，1：会签主签，2：会签随签"}
            ]}
        ]
    }
},

{
    "name": "taskNum",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    
    "process" : [
        {
            "name" : "get_tasks",
            "type" : "rdb",
            "db":"task",
            "sqls":[{
                "name":"get_task_num",
                "multi":false,
                "metas": "each",
                "merge":true,
                "sql":"select count(*) as num from task
                 where signer='@{#tokenAcc}' and result='I'"
            }]
        }
    ]
},

{
    "name": "stepSigners",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"如果step定义中signer为步骤号，此接口用于查询当前工作流指定步骤的权签人",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"服务名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"},
        {"name":"step", "type":"int", "must":true, "comment":"步骤号"}
    ],
    
    "process" : [
        {
            "name" : "get_creator",
            "type" : "rdb",
            "db":"log",
            "when":"@{CONDITION|step, 'i.==', 0}", //第一步就是创建人
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[{
                "name":"signers",
                "multi":true,
                "metas": "oneCol",
                "merge":false,
                "sql":"select creator from flowbase
                 where flow=@{flowid} and did=@{did}"
            }]
        },
        {
            "name" : "get_step_signers",
            "type" : "rdb",
            "db":"log",
            "when":"@{CONDITION|step, 'i.>', 0}",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[{
                "name":"signers",
                "multi":true,
                "metas": "oneCol",
                "merge":false,
                "sql":"select distinct signer from flowlog
                 where flow=@{flowid} and did=@{did} and step=@{step}"
            }]
        }
    ]
},

{
    "name": "opinions",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"流程中所有步骤的意见的汇总，包括多轮的意见，也可以是多人会签",
    
    "request": [
        {"name":"service", "type":"string", "must":true, "min":1, "comment":"服务名称"},
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"}
    ],

    "process" : [
        {
            "name" : "opinions",
            "type" : "rdb",
            "db":"log",
            "sharding":"@{ABSHASH|service,did}",
            "sqls":[
                {
                    "name":"base_info",
                    "multi":false,
                    "metas":"each",
                    "merge":true,
                    "sql":"select step,step+1 nextStep,creator,descr,
                        update_time,'@{#tokenAcc}' signer
                         from flowbase
                      where flow=@{flowid} and did='@{did}'"
                },
                {
                    "name":"opinions",
                    "multi":true,
                    "metas":"cols",
                    "sql":"select step,opinion,result,type,signer,turn,update_time from flowlog
                      where flow=@{flowid} and did='@{did}' order by step,signer,turn"
                }
            ]
        },
        {
            "name" : "get_next_step_type",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"next_step_type",
                "multi":false,
                "merge":true,
                "metas":"each",
                "ignores":["NOT_EXISTS"], //已走到最后一步，无返回
                "sql":"select type nextStepType,signer nextSigner from step
                  where flow=@{flowid} and step=@{!step}"
            }]
        }
    ]
},

{
    "name": "isSigner",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "GET",
    "comment":"确认处理帐号是否为正确的权签人，拒绝的权签人仍然无权限",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应数据的唯一标识"},
        {"name":"step", "type":"int", "must":false, "min":0, "max":101, "comment":"步骤"},
        {"name":"account", "type":"string", "must":true, "min":1, "comment":"帐号"},
        {"name":"type", "type":"string", "must":false, "options":["O","M","S"],
         "comment":"O-ne:单签，M-aster:会签中主签，S-lave:会签中从签，空字符串表示不限制"}
    ],

    "process" : [
        {
            "name" : "get_flow_log",
            "type" : "dataexists",
            "db":"log",
            "sharding":"@{ABSHASH|#tokenCaller,did}",
            "expect":true,
            "errorCode":"NO_RIGHT",
            "errorInfo":"not a legal signer",
            "sql":"select 1 from flowlog
               where flow=@{flowid} and did=@{did}
               @{CONDITION|step, 'o.!=', null, `and step=@{step}`, ``}
               and signer='@{account}'
               and result<>'R'
               @{CONDITION|type,'o.!=', null, `and type='@{type}'`, ``}"
        }
    ],
    
    "response":[]
}
]