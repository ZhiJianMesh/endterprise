[
{
    "name": "create",
    "property" : "private",
    "tokenChecker":"APP-*",
    "method": "POST",
    
    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"工作流名称"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键，比如`123`"},
        {"name":"ext", "type":"json", "must":false, "min":1, "default":{}, "comment":"回调扩展参数，在flow的ext中定义字段，如:{a:1,b:\"xxx\"...}"},
        {"name":"descr", "type":"string", "must":true, "max":100, "comment":"描述"},
        {"name":"creator", "type":"string", "must":true, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"创建人"},
        {"name":"nextSigners", "type":"string", "list":true, "must":true, "min":1, "regular":"[0-9a-zA-Z_]{1,30}", "comment":"下一步权签人"}
    ],

    "process" : [
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"get_flow_id",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "comment":"取当前版本号最大的工作流定义",
                    "sql":"select id as flowid,max(ver) as maxVer
                     from flow where service='@{#tokenCaller}' and name='@{name}'"
                },
                {
                    "name":"get_flow_and_step_info",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select f.service,f.callback,s.type from flow f,step s
                     where f.id=@[!flowid] and s.flow=f.id and s.step=1"
                }
            ],
            "onSuccess" : "
                var signers=@{nextSigners};
                if('@{!type}'=='M') {//会签，权签人不能包括自己，因为下一步要做主签人
                    var ok=true;
                    for(var i in signers) {
                        if(signers[i]=='@{creator}') {
                            ok=false;
                            break;
                        }
                    }
                    if(!ok || signers.length==0) {
                        Mesh.error(RetCode.WRONG_PARAMETER, `@{creator} can't be a signer`);
                    } else {
                        Mesh.success({});
                    }
                } else if(signers.length!=1) {//单签，只能一个权签人
                    Mesh.error(RetCode.WRONG_PARAMETER, 'only 1 signer permitted');
                } else {
                    Mesh.success({});
                }
            "
        },
        {
            "name":"handle_callback",
            "comment":"调用当前步骤的回调，通知业务系统改变当前步骤，或给用户赋权，否则工作流中的用户可能看不到数据库",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{!service}",
            "url":"@{!callback}",
            "parameters":"{
                \"flowid\":@{!flowid},
                \"step\":1,
                \"act\":\"create\",
                \"signers\":@{JSON|nextSigners,0},
                \"did\":\"@{did}\"
            }"
        },
        {
            "name" : "get_flow_id",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "comment":"创建工作流的基本信息",
                    "sql":"replace into flowbase(flow,did,creator,step) 
                        values(@{!flowid},'@{did}','@{creator}',1)"
                },
                {
                    "comment":"给下一步权签人推送消息",
                    "sql":"js:var sqls=['insert into flowlog(flow,did,step,result,turn,type,opinion,signer,ext) values'];
                        var signers=@{nextSigners};
                        var tp='O';//单签one
                        sqls.push(`(@{!flowid},'@{did}',0,'P',0,'O','','@{creator}','@{ext}')`);
                        if('@{!type}'=='M') {/*下一步是会签，则给创建人一个主签任务*/
                            sqls.push(`,(@{!flowid},'@{did}',1,'I',0,'M','','@{creator}','{}')`);
                            tp='S';//其他签字人都分配从签任务
                        }
                        for(var i in signers) { //给其他权签人推送任务
                            sqls.push(`,(@{!flowid},'@{did}',1,'I',0,'`,tp,`','','`,signers[i],`','{}')`);
                        }
                        DB.sql(sqls.join(''));
                    "
                }
            ]
        }
        
    ],
    
    "response":[
        {"name":"flowid", "type":"long", "comment":"工作流id"}
    ]
},

{
    "name": "remove",
    "property" : "private",
    "tokenChecker":"OAUTH",
    "method": "DELETE",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"}
    ],

    "process" : [
        {
            "name" : "remove",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                "delete from flowbase where flow=@{flowid} and did='@{did}'",
                "delete from flowlog where flow=@{flowid} and did='@{did}'"
            ]
        }
    ],
    "response":[]
},

{
    "name": "tasks",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",

    "request": [
        {"name":"offset", "type":"int", "must":false, "default":0, "min":0, "comment":"偏移"},
        {"name":"num", "type":"int", "must":false, "default":100000, "min":1, "default":10, "comment":"返回行数"}
    ],
    
    "process" : [
        {
            "name" : "get_tasks",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"tasks",
                    "multi":true,
                    "metas" : "cols",
                    "comment":"返回待我处理或我处理过的工作流，如果是处理过的，显示的步骤信息为当前停留的步骤信息。
                        按did分组，并选中其中update_time最大的一行记录，避免选中的行的result不正确，导致显示状态不正确",
                    "sql":"select fl.did,fl.flow,max(fl.update_time) as createAt,
                            fl.step,fl.result,fl.type,
                            f.name,f.dispName as flowName,s.name as stepName,s.cmt 'descr',fb.creator
                       from flowlog fl,flow f,step s,flowbase fb
                      where fl.signer='@{#tokenAcc}' and fl.result<>'R'
                        and f.id=fl.flow and fb.flow=fl.flow and fb.did=fl.did
                        and s.flow=fl.flow and s.step=fb.step
                      group by fl.did
                      order by fl.result asc,fl.update_time desc
                     LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name":"total",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "sql":"select count(DISTINCT did) total from flowlog where signer='@{#tokenAcc}'"
                }
            ]
        }
    ],
    "response":{
        "check":false,
        "segments":[
            {"name":"tasks", "type":"object", "list":true, "props":[
                {"name":"flow", "type":"int", "comment":"工作流id"},
                {"name":"did", "type":"string", "comment":"对应数据的id"},
                {"name":"createAt", "type":"string", "comment":"创建时间"},
                {"name":"step", "type":"int", "comment":"所处步骤"},
                {"name":"name", "type":"string", "comment":"工作流名称"},
                {"name":"dispName", "type":"string", "comment":"工作流显示名称"},
                {"name":"stepName", "type":"string", "comment":"步骤名称"},
                {"name":"signer", "type":"string", "comment":"当前权签人"},
                {"name":"type", "type":"int", "comment":"步骤类型，0：单签，1：会签主签，2：会签随签"}
            ]}
        ]
    }
},

{
    "name": "taskNum",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",

    "process" : [
        {
            "name" : "get_tasks",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"tasks",
                "multi":false,
                "metas" : "each",
                "merge":true,
                "sql":"select count(*) as num from flowlog
                 where signer='@{#tokenAcc}' and result='I'"
            }]
        }
    ]
},

{
    "name": "opinions",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "GET",
    "comment":"流程中所有步骤的意见的汇总，包括多轮的意见，也可以是多人会签",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流唯一标识，通常为数据的唯一键"}
    ],

    "process" : [
        {
            "name" : "opinions",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
            {
                "name":"base_info",
                "multi":false,
                "metas" : "each",
                "merge":true,
                "sql":"select step,creator,update_time,'@{#tokenAcc}' signer from flowbase
                  where flow=@{flowid} and did='@{did}'"
            },
            {
                "name":"opinions",
                "multi":true,
                "metas" : "cols",
                "sql":"select step,opinion,result,type,signer,turn,update_time from flowlog
                  where flow=@{flowid} and did='@{did}' order by step,signer,turn"
            }
            ]
        }
    ]
},

{
    "name": "confirm",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"非会签步骤的确认，提交给下一步处理。如果下一步是会签，则nextSigners应为多个",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键"},
        {"name":"ext", "type":"json", "must":false, "min":1, "default":{}, "comment":"回调扩展参数，在flow的ext中定义字段，如:{a:1,b:\"xxx\"...}"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"},
        {"name":"nextSigners", "list":true, "type":"string", "must":false, "default":[], "min":0, "regular":"[0-9a-zA-Z_]{1,30}", "default":[], "comment":"下一步权签人，如果是最后一步，可以不提供"}
    ],

    "process" : [
        {
            "name" : "get_flow_and_step_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"get_step_no",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select step,step+1 nextStep from flowbase where flow=@{flowid} and did='@{did}'"
                },
                {
                    "name":"get_cur_step_info",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "comment":"查出自己的待处理意见的最大轮数",
                    "sql":"select max(turn) turn
                     from flowlog where flow=@{flowid} and did='@{did}'
                      and step=@[!step] and signer='@{#tokenAcc}' and result='I'"
                },
                {
                    "name":"get_flow_and_maxstep_info",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select max(S.step) maxStep,S.ext,F.service,F.callback
                         from step S,flow F
                         where F.id=@{flowid} and S.flow=F.id"
                }
            ]
        },

        {
            "name" : "get_nextstep_type",
            "type" : "rdb",
            "db":"workflow",
            "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}",
            "sqls":[
                {
                    "name":"get_nextstep_type",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select type from step where flow=@{flowid} and step=@{!nextStep}"
                }
            ]
        },
        
        {
            "name" : "check_opinions_of_others",
            "type" : "rdb",
            "db":"workflow",
            "when":"@{CONDITION|!nextStep,'i.<=',!maxStep} && @{CONDITION|!type,'s.==','M'}",
            "convert":[
                {"code":"OK","to":5001,"info":"sign not over"},
                {"code":"NOT_EXISTS","to":"OK"}
            ],
            "sqls":[
                {
                    "name":"check_other_signers",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select result from flowlog
                         where flow=@{flowid} and did='@{did}'
                          and step=@{!step} and type='S' and result='I'"
                }
            ]
        },

        {
            "name" : "check_step",
            "type" : "js",
            "script" : "(function(){
                if('@{!turn}'=='') {//没查到，说明没有参与签字
                    return Mesh.error(RetCode.NO_RIGHT, 'not authorized');
                } 
                if(@{!step}>@{!maxStep}) {
                    return Mesh.error(RetCode.DATA_WRONG, 'step must<=@{!maxStep}');
                }
                
                if(@{!step}<@{!maxStep}) {
                    var signers=@{nextSigners};
                    if('@{!type}'=='M') {//下一步会签，权签人不能有自己，因为要作为下一步的主签人
                        if(signers.length==0) {
                            return Mesh.error(5110, `singers can't be empty`);
                        }
                        for(var i in signers) {
                            if(signers[i]=='@{#tokenAcc}') {
                                return Mesh.error(5108, `@{#tokenAcc} can't be a signer`);
                            }
                        }
                    } else if(signers.length!=1) {
                        return Mesh.error(5109, 'can only have 1 signer');
                    }
                }
                return Mesh.success({});
            })()"
        },
        
        {
            "name":"next_callback",
            "comment":"调用当前步骤的回调，调用成功后，再更新本地数据",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{!service}",
            "url":"@{!callback}",
            "parameters":"{
                \"flowid\":@{flowid},
                \"maxStep\":@{!maxStep},
                \"step\":@{!step},
                \"act\":\"confirm\",
                \"opinion\":\"@{opinion}\",
                \"ext\":\"@{!ext}\",
                \"signers\":@{JSON|nextSigners,0},
                \"did\":\"@{did}\"
            }"
        },
        
        {
            "name" : "save_opinion",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "comment":"记录当前步骤的意见",
                    "sql":"update flowlog set opinion='@{opinion}',ext='@{ext}',result='P'
                      where flow=@{flowid} and did='@{did}' and step=@{!step}
                           and signer='@{#tokenAcc}' and turn=@{!turn}"
                }
            ]
        },
        {
            "name" : "send_tasks_to_nextstep_signers",
            "type" : "rdb",
            "db":"workflow",
            "when":"@{CONDITION|!nextStep,'i.<=',!maxStep}",
            "sqls":[
                {
                    "comment":"给下一步所有处理人推送任务",
                    "sql":"js:var sqls=[];
                        var signers=@{nextSigners};
                        var tp='O';
                        if('@{!type}'=='M') {//会签，自己是主签人
                            sqls.push('insert into flowlog(flow,did,step,signer,result,turn,type)',
                             ` select @{flowid},'@{did}',@{!nextStep},'@{#tokenAcc}','I',ifnull(max(turn),-1)+1,'M'
                                 from flowlog
								where flow=@{flowid} and did='@{did}'
                                  and step=@{!nextStep} and signer='@{#tokenAcc}';`);
                            tp='S';//给其他会签人都分配从签任务
                        }
                        for(var i in signers){
                            sqls.push('insert into flowlog(flow,did,step,signer,result,turn,type)',
                                ` select @{flowid},'@{did}',@{!nextStep},'`,
                                signers[i], `','I',ifnull(max(turn),-1)+1,'`,tp,`' from flowlog`,
                                ` where flow=@{flowid} and did='@{did}' and step=@{!nextStep}`,
                                ` and signer='`,signers[i],`';`);
                        }
                        sqls.join('');
                    "
                },
                {
                    "comment":"更新工作流步骤",
                    "sql":"update flowbase set step=@{!nextStep} where flow=@{flowid} and did='@{did}'"
                }
            ]
        }
    ],
    
    "response":[
        {"name":"nextStep", "type":"int", "comment":"下一步编号"},
        {"name":"maxStep", "type":"int", "comment":"最大编号"}
    ]
},

{
    "name": "reject",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"拒绝(会签与非会签都可以)，将step减一，并给上一步的权签人推送消息，
            在业务端，需要去除当前步骤权签人的权限",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键，形如:`id:\"123\"`"},
        {"name":"ext", "type":"json", "must":false, "min":1, "comment":"回调参数，在flow的ext中指定字段，形如:{a:1,b:\"xxx\"...}"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"}
    ],

    "process" : [
        {
            "name" : "get_cur_step",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[{
                "name":"flow_step",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select step,step-1 foreStep from flowbase where flow=@{flowid} and did='@{did}'"
            }],
            "onSuccess":{
                "condition":"@{CONDITION|!step,'i.>',0}",
                "errorCode":"INVALID_STATE",
                "errorInfo":"step must be >0"
            }
        },
        {
            "name" : "get_flow_info",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "name":"get_flow_info",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select f.service,f.callback from flow f,step s
                     where f.id=@{flowid} and s.flow=@{flowid} and s.step=@{!step}"
                },
                {
                    "name":"signers",
                    "multi":true,
                    "merge":true,
                    "metas" : "oneCol",
                    "ignores":["NOT_EXISTS"],
                    "sql":"select signer from flowlog where flow=@{flowid}
                            and did='@{did}' and step=@{!step}
                            and signer not in(select signer from flowlog
                                where flow=@{flowid} and did='@{did}' and step<@{!step})"
                }
            ]
        },
        {
            "name":"handle_fore_callback",
            "comment":"调用上一步的回调，需要去除当前步骤权签人的数据权限",
            "type" : "call",
            "method":"POST",
            "tokenSign":"APP",
            "service": "@{!service}",
            "url":"@{!callback}",
            "parameters":"{
                flowid:@{flowid},
                step:@{!foreStep},
                act:\"reject\",
                signers:@{JSON|!signers,0},
                opinion:\"@{opinion}\",
                did:\"@{did}\"
            }"
        },
        {
            "name" : "update_flow_data",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "comment":"更新步骤",
                    "sql":"update flowbase set step=@{!foreStep} where flow=@{flowid} and did='@{did}'"
                },
                {
                    "comment":"获取当前步骤的最大turn",
                    "multi":false,
                    "merge":true,
                    "metas" : "each",
                    "sql":"select max(turn) maxTurn from flowlog
                      where flow=@{flowid} and did='@{did}'
                        and step=@{!step} and signer='@{#tokenAcc}'"
                },
                {
                    "comment":"记录当前步骤的意见",
                    "sql":"update flowlog set opinion='@{opinion}',result='R'
                      where flow=@{flowid} and did='@{did}'
                        and step=@{!step} and signer='@{#tokenAcc}'
                        and turn=@[!maxTurn]"
                },
                {
                    "comment":"删除所有从签的任务",
                    "sql":"delete from flowlog where flow=@{flowid} and did='@{did}'
                     and step=@{!step} and type='S'"
                },
                {
                    "comment":"给上一步的所有处理人推送新任务",
                    "sql":"insert into flowlog(flow,did,step,signer,result,turn,type)
                     select flow,did,step,signer,'I',max(turn)+1,type from flowlog
                      where flow=@{flowid} and did='@{did}' and step=@{!foreStep}
                      group by signer"
                }
            ]
        }
    ],
    
    "response":[
        {"name":"foreStep", "type":"int", "comment":"上一步编号"}
    ]
},

{
    "name": "counterSign",
    "property" : "private",
    "tokenChecker":"USER",
    "method": "POST",
    "comment":"会签，处理完成后，不需要转到下一步，也不需要通知下一步处理人，而是等待主签人调用reject或confirm处理",
    
    "request": [
        {"name":"flowid", "type":"int", "must":true, "comment":"工作流id"},
        {"name":"did", "type":"string", "must":true, "min":1, "comment":"工作流对应的数据的唯一标识，通常为数据的唯一键"},
        {"name":"result", "type":"string", "must":true, "len":1, "options":["I","P","R"], "comment":"I-nit:初始，P-ass:同意，2:R-eject不同意"},
        {"name":"opinion", "type":"string", "must":true, "regular":"^[^\"]{0,100}$", "comment":"意见"}
    ],

    "process" : [
        {
            "name" : "update_flow_log",
            "type" : "rdb",
            "db":"workflow",
            "sqls":[
                {
                    "comment":"记录当前步骤的意见，使用replace...select可以减少获取max(turn)的步骤",
                    "sql":"replace into flowlog(flow,did,step,signer,result,turn,type,opinion)
                     select @{flowid},'@{did}',FB.step,'@{#tokenAcc}','@{result}',max(turn),'S','@{opinion}'
                       from flowbase FB,flowlog FL
                      where FB.flow=@{flowid} and FB.did='@{did}'
                        and FL.flow=@{flowid} and FL.did='@{did}' and FL.step=FB.step
                        and FL.signer='@{#tokenAcc}'"
                }
            ]
        }
    ],
    
    "response":[]
}
]