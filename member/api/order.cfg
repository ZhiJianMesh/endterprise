[
{
    "name": "create",
    "method":"POST",
    "feature": "write",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "comment":"创建订单",

    "request": [
        {"name":"vip", "type":"int",  "must":true, "min":0, "comment":"会员id"},
        {"name":"pkgId", "type":"int", "must":true, "min":0, "comment":"套餐id"},
        {"name":"price", "type":"float", "must":true, "min":0, "comment":"价格，可以不同于套餐定义的价格"},
        {"name":"pwd", "type":"string", "must":true, "min":1}
    ],

    "process" : [
        {
            "name" : "getPwd",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"pwd",
                    "multi":false,
                    "merge":true,
                    "sql":"select pwd from vips where id=@{vip}"
                }
            ]
        },
       
        {
            "name" : "getPackageInfo",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"package",
                    "merge":true,
                    "metas" : "each",
                    "multi":false,
                    "sql":"select name,cls,val from packages where id=@{pkgId}"
                }
            ]
        },
        
        {
            "name" : "checkPwd",
            "type" : "js",
            "script" : "
                if(Secure.pbkdf2Check('@{pwd}','@{!pwd}')) {
                    Mesh.success({});
                } else {
                    Mesh.error(RetCode.WRONG_PARAMETER, 'fail to check pwd');
                }
            "
        },
        {
            "name":"get_order_id",
            "type" : "var",
            "vars":[
                {"name":"orderId", "val":"@{SEQUENCE|'orderid'}"}
            ]
        },
        {
            "name" : "createOrder",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"createOrder",
                    "comment":"密码不能带入数据库，所以分开两步完成",
                    "sql":"insert into orders(id,vip,creator,createAt,pkgId,
                        pkgName,cls,val,price,balance,sign) 
                        values(@{orderId},@{vip},'@{#tokenAcc}',@{#reqAt},@{pkgId},
                        '@{!name}',@{!cls},@{!val},@{price},@{!val},'@{SHA256|pwd,#reqAt,!val}')"
                },
                {
                    "name":"updateMainReport",
                    "comment":"更新总报表",
                    "compile":false,
                    "sql":"insert or ignore into mainreports(reportAt) values(@{NOW|unit7200000});
                       update mainreports set orderNum=orderNum+1,revenue=revenue+@{price} where reportAt=@{NOW|unit7200000}"
                },
                
                {
                    "name":"getTotalBalance",
                    "comment":"获取当前总余额",
                    "metas" : "each",
                    "multi":false,
                    "merge":true,
                    "sql":"select ifnull(sum(balance),0) as total from orders where pkgId=@{pkgId} and balance>0"
                },
                {
                    "name":"updatePkgReport",
                    "comment":"更新套餐报表，每天一条记录",
                    "sql":"insert or ignore into pkgreports(pkgId,reportAt) values(@{pkgId},@{NOW|unit86400000});
                        update pkgreports set orderNum=orderNum+1,orderBal=@[!total],revenue=revenue+@{price}
                           where pkgId=@{pkgId} and reportAt=@{NOW|unit86400000}"
                }                
            ]
        }
    ],
    "response":[]
},

{
    "name": "remove",
    "method":"POST",
    "feature": "admin",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "comment":"删除订单信息",

    "request": [
        {"name":"id", "type":"long",  "must":true, "min":0, "comment":"订单id"},
        {"name":"vip", "type":"long",  "must":true, "min":0, "comment":"会员id"},
        {"name":"refund", "type":"float", "must":true, "min":0, "comment":"退款额"},
        {"name":"pwd", "type":"string", "must":true, "min":1}
    ],

    "process" : [
        {
            "name" : "getPwd",
            "type" : "rdb",
            "db": "member",
            "sqls" : [{
                "name":"pwd",
                "multi":false,
                "merge":true,
                "metas" : "each",
                "sql":"select pwd from vips where id=@{vip}"
            }]
        },
       
        {
            "name" : "checkPwd",
            "type" : "js",
            "script" : "
                if(Secure.pbkdf2Check('@{pwd}','@{!pwd}')) {
                    Mesh.success({});
                } else {
                    Mesh.error(RetCode.WRONG_PARAMETER, 'fail to check pwd');
                }
            "
        },
       
        {
            "name" : "deleteOrder",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"getPkgId",
                    "comment":"获取套餐id",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "sql":"select pkgId from orders where id=@{id}"
                },
                {
                    "name":"删除订单，限制会员id，是防止越权删除",
                    "sql":"delete from orders where id=@{id} and vip=@{vip}"
                },
                {
                    "name":"updateMainReport",
                    "comment":"更新总报表",
                    "sql":"insert or ignore into mainreports(reportAt) values(@{NOW|unit7200000});
                       update mainreports set orderNum=orderNum-1,revenue=revenue-@{refund}
                       where reportAt=@{NOW|unit7200000}"
                },
                
                {
                    "name":"getTotalBalance",
                    "comment":"获取当前总余额",
                    "metas" : "each",
                    "multi":false,
                    "merge":true,
                    "sql":"select ifnull(sum(balance),0) as total from orders where pkgId=@{!pkgId} and balance>0"
                },
                {
                    "name":"updatePkgReport",
                    "comment":"更新套餐报表，每天一条记录",
                    "sql":"insert or ignore into pkgreports(pkgId,reportAt) values(@{!pkgId},@{NOW|unit86400000});
                        update pkgreports set orderNum=orderNum-1,orderBal=@[!total],revenue=revenue-@{refund}
                           where pkgId=@{!pkgId} and reportAt=@{NOW|unit86400000}"
                }
            ]
        }
    ],
    
    "response":[]
},

{
    "name": "list",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"列举某个会员的订单信息",

    "request": [
        {"name":"vip", "type":"long",  "must":true, "min":0, "comment":"成员id"},
        {"name":"offset", "type":"int", "min":0, "default":0},
        {"name":"num", "type":"int", "min":5, "default":20}
    ],

    "process" : [
        {
            "name" : "orders",
            "type" : "rdb",
            "db": "member",
            "sqls" : [{
                 "name": "orders",
                 "multi":true,
                 "metas" : "each",
                 "sql":"select id,createAt,pkgName,balance,price
                  from orders where vip=@{vip} order by update_time desc
                  LIMIT @{num} OFFSET @{offset}"
            }]
        },
        
        {
            "name" : "total",
            "type" : "rdb",
            "db": "member",
            "sqls" : [{
                 "name": "orders",
                 "multi":false,
                 "metas" : "each",
                 "merge":true,
                 "sql":"select count(*) as total from orders where vip=@{vip}"
            }]
        }
    ],
    "response": [
        {"name":"orders", "type":"object", "list":true, "props":[
            {"name":"id", "type":"string", "comment":"因为js对long有精度损失，所以用string"},
            {"name":"createAt", "type":"date", "format":"yyyy-MM-dd/HH", "comment":"创建日期"},
            {"name":"price", "type":"float"},
            {"name":"pkgName", "type":"string"},
            {"name":"balance", "type":"string"}
        ]},
        {"name":"total", "type":"int"}
    ]
},

{
    "name": "validOrders",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"列举某个会员的有效订单信息",

    "request": [
        {"name":"vip", "type":"long",  "must":true, "min":0, "comment":"成员id"},
        {"name":"offset", "type":"int", "min":0, "default":0},
        {"name":"num", "type":"int", "min":5, "default":20}
    ],

    "process" : [
        {
            "name" : "orders",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name": "orders",
                    "multi":true,
                    "metas" : "each",
                    "sql":"select id,createAt,pkgName,balance
                      from orders where vip=@{vip} and balance>0 order by update_time desc
                      LIMIT @{num} OFFSET @{offset}"
                },
                {
                    "name": "total",
                    "multi":false,
                    "metas" : "each",
                    "sql":"select count(*) as total from orders where vip=@{vip} and balance>0"
                }
            ]
        }     
    ],
    "response": [
        {"name":"orders", "type":"object", "list":true, "props":[
            {"name":"id", "type":"string", "comment":"因为js对long有精度损失，所以用string"},
            {"name":"createAt", "type":"date", "format":"yyyy-MM-dd HH:mm", "comment":"创建时间"},
            {"name":"pkgName", "type":"string"},
            {"name":"balance", "type":"string"}
        ]},
        {"name":"total", "type":"int"}
    ]
},

{
    "name": "get",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "USER",
    "comment":"查看订单详细信息",

    "request": [
        {"name":"id", "type":"long", "must":true, "min":0, "comment":"订单id"}
    ],

    "process" : [
        {
            "name" : "detail",
            "type" : "rdb",
            "db": "member",
            "sqls" : [{
                 "name":"detail",
                 "metas" : "each",
                 "merge": true,
                 "multi":false,
                 "sql":"select id,createAt,creator,pkgName,cls,val,price,balance
                  from orders where id=@{id}"
            }]
        }
    ]
},

{
    "name": "getNames",
    "method":"GET",
    "feature": "sale",
    "property" : "private",
    "tokenChecker" : "USER",
            
    "request": [
        {"name":"id", "type":"long",  "must":true, "min":0, "comment":"订单id"}
    ],

    "process" : [
        {
            "name" : "names",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"names",
                    "multi":false,
                    "metas" : "each",
                    "merge":true,
                    "sql":"select o.pkgName,v.name as vipName
                     from orders o, vips v where o.id=@{id} and v.id=o.vip"
                }
            ]
        }
    ],
    "response": [
        {"name":"pkgName", "type":"string", "comment":"套餐名称"},
        {"name":"vipName", "type":"string", "comment":"会员称呼"}
    ]    
},

{
    "name": "listAll",
    "method":"GET",
    "feature": "admin",
    "property" : "private",
    "tokenChecker" : "USER",
    "aclChecker":"RBAC",
    "comment":"列举所有会员的订单信息",
    
    "request": [
        {"name":"offset", "type":"int", "must":true, "min":0},
        {"name":"num", "type":"int", "must":true, "min":5}
    ],
    
    "process" : [
        {
            "name" : "orders",
            "type" : "rdb",
            "db": "member",
            "sqls" : [{
                 "name": "orders",
                 "multi":true,
                 "sql":"select id,vip,createAt,creator,pkgName,val,price,balance
                  from orders order by update_time desc
                  LIMIT @{num} OFFSET @{offset}"
            }]
        }
    ]
},

{
    "name": "check",
    "method":"POST",
    "property" : "private",
    "tokenChecker" : "USER",

    "request": [
        {"name":"id", "type":"long",  "must":true, "min":0, "comment":"订单id"},
        {"name":"pwd", "type":"string", "must":true, "min":1}
    ],

    "process" : [
        {
            "name" : "order",
            "type" : "rdb",
            "db": "member",
            "sqls" : [
                {
                    "name":"order",
                    "multi":false,
                    "merge":true,
                    "sql":"select update_time as ut,balance,sign from orders where id=@{id}"
                }
            ]
        },
        {
            "name" : "check",
            "type" : "js",
            "script" : "
                if(Secure.sha256('@{pwd}-@{!ut}-@{!balance}')=='@{!sign}') {
                    Mesh.success({});
                } else {
                    Mesh.error(RetCode.SERVICE_ERROR, 'invalid pwd or be modified');
                }
            "
        }       
    ],
    "response":[]
}
]