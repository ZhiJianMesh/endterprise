[
{
    "name": "get",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "OAUTH",
    "comment":"查cur后更新cur之时，比较cur是不是先前查询到的cur，
        如果不一致，则重来一次，直到前后一致为止，这个逻辑在Get类中实现。
        此实现类似java的AtomicInteger",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"}
    ],

    "process" : [
        {
            "name" : "id",
            "type" : "rdb",
            "db":"seqid",
            "handler":"cn.net.zhijian.mesh.builtin.seqid.Get",
            "sqls" : [
                 {
                     "name":"result",
                     "multi":false,
                     "metas" : "each",
                     "merge":true,
                     "sql":"select cur,cur+step as end,step,update_time
                         from seqid where cid=@{^cid} and service='@{#tokenCaller}'
                          and name='@{name}'"
                 },
                 {
                     "name":"upd", //此名称不可改，因为在Get类中使用了它
                     "sql":"js: var step=@[!step];
                        var interval=@{#reqAt}-@[!update_time];
                        if(interval<5000){
                            step*=2;
                        } else if(interval>=10000 && step>10) {
                            step/=2;
                        }
                        DB.sql(`update seqid set cur=@[!end],step=` + step
                         + ` where cid=@{^cid} and service='@{#tokenCaller}' and name='@{name}' and cur=@[!cur]`);
                     "
                 }
            ]
        }
    ],
    "response":[
        {"name":"cur", "type":"long"},
        {"name":"end", "type":"long"}
    ]
},

{
    "name": "init",
    "method":"GET",
    "property" : "private",
    "tokenChecker" : "OAUTH",

    "request": [
        {"name":"name", "type":"string", "must":true, "regular":"^[a-zA-Z0-9_]{1,30}$"},
        {"name":"begin", "type":"int", "must":true, "comment":"开始值"}
    ],

    "process" : [
        {
            "name" : "id",
            "type" : "rdb",
            "db":"seqid",
            "sqls" : [
                "insert or ignore into seqid(step,cur,cid,service,name)
                 values(10,@{begin},@{^cid},'@{#tokenCaller}','@{name}')",
            ]
        }
    ]
}
]